/*
Copyright ApeCloud, Inc.
Licensed under the Apache v2(found in the LICENSE file in the root directory).
*/


// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:23
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:23

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const RELOAD = 57560
const REVERT = 57561
const QUERIES = 57562
const SCHEMA = 57563
const TABLE = 57564
const INDEX = 57565
const VIEW = 57566
const TO = 57567
const IGNORE = 57568
const IF = 57569
const PRIMARY = 57570
const COLUMN = 57571
const SPATIAL = 57572
const FULLTEXT = 57573
const KEY_BLOCK_SIZE = 57574
const CHECK = 57575
const INDEXES = 57576
const ACTION = 57577
const CASCADE = 57578
const CONSTRAINT = 57579
const FOREIGN = 57580
const NO = 57581
const REFERENCES = 57582
const RESTRICT = 57583
const SHOW = 57584
const DESCRIBE = 57585
const EXPLAIN = 57586
const DATE = 57587
const ESCAPE = 57588
const REPAIR = 57589
const OPTIMIZE = 57590
const TRUNCATE = 57591
const COALESCE = 57592
const EXCHANGE = 57593
const REBUILD = 57594
const PARTITIONING = 57595
const REMOVE = 57596
const PREPARE = 57597
const EXECUTE = 57598
const MAXVALUE = 57599
const PARTITION = 57600
const REORGANIZE = 57601
const LESS = 57602
const THAN = 57603
const PROCEDURE = 57604
const TRIGGER = 57605
const VINDEX = 57606
const VINDEXES = 57607
const DIRECTORY = 57608
const NAME = 57609
const UPGRADE = 57610
const STATUS = 57611
const VARIABLES = 57612
const WARNINGS = 57613
const CASCADED = 57614
const DEFINER = 57615
const OPTION = 57616
const SQL = 57617
const UNDEFINED = 57618
const SEQUENCE = 57619
const MERGE = 57620
const TEMPORARY = 57621
const TEMPTABLE = 57622
const INVOKER = 57623
const SECURITY = 57624
const FIRST = 57625
const AFTER = 57626
const LAST = 57627
const VITESS_MIGRATION = 57628
const CANCEL = 57629
const RETRY = 57630
const LAUNCH = 57631
const COMPLETE = 57632
const CLEANUP = 57633
const THROTTLE = 57634
const UNTHROTTLE = 57635
const EXPIRE = 57636
const RATIO = 57637
const VITESS_THROTTLER = 57638
const BEGIN = 57639
const START = 57640
const TRANSACTION = 57641
const COMMIT = 57642
const ROLLBACK = 57643
const SAVEPOINT = 57644
const RELEASE = 57645
const WORK = 57646
const CONSISTENT = 57647
const SNAPSHOT = 57648
const BIT = 57649
const TINYINT = 57650
const SMALLINT = 57651
const MEDIUMINT = 57652
const INT = 57653
const INTEGER = 57654
const BIGINT = 57655
const INTNUM = 57656
const REAL = 57657
const DOUBLE = 57658
const FLOAT_TYPE = 57659
const FLOAT4_TYPE = 57660
const FLOAT8_TYPE = 57661
const DECIMAL_TYPE = 57662
const NUMERIC = 57663
const TIME = 57664
const TIMESTAMP = 57665
const DATETIME = 57666
const YEAR = 57667
const CHAR = 57668
const VARCHAR = 57669
const BOOL = 57670
const CHARACTER = 57671
const VARBINARY = 57672
const NCHAR = 57673
const TEXT = 57674
const TINYTEXT = 57675
const MEDIUMTEXT = 57676
const LONGTEXT = 57677
const BLOB = 57678
const TINYBLOB = 57679
const MEDIUMBLOB = 57680
const LONGBLOB = 57681
const JSON = 57682
const JSON_SCHEMA_VALID = 57683
const JSON_SCHEMA_VALIDATION_REPORT = 57684
const ENUM = 57685
const GEOMETRY = 57686
const POINT = 57687
const LINESTRING = 57688
const POLYGON = 57689
const GEOMCOLLECTION = 57690
const GEOMETRYCOLLECTION = 57691
const MULTIPOINT = 57692
const MULTILINESTRING = 57693
const MULTIPOLYGON = 57694
const ASCII = 57695
const UNICODE = 57696
const NULLX = 57697
const AUTO_INCREMENT = 57698
const APPROXNUM = 57699
const SIGNED = 57700
const UNSIGNED = 57701
const ZEROFILL = 57702
const CODE = 57703
const COLLATION = 57704
const COLUMNS = 57705
const DATABASES = 57706
const ENGINES = 57707
const EVENT = 57708
const EXTENDED = 57709
const FIELDS = 57710
const FULL = 57711
const FUNCTION = 57712
const GTID_EXECUTED = 57713
const KEYSPACES = 57714
const OPEN = 57715
const PLUGINS = 57716
const PRIVILEGES = 57717
const PROCESSLIST = 57718
const SCHEMAS = 57719
const TABLES = 57720
const TRIGGERS = 57721
const USER = 57722
const VGTID_EXECUTED = 57723
const VITESS_KEYSPACES = 57724
const VITESS_METADATA = 57725
const VITESS_MIGRATIONS = 57726
const VITESS_REPLICATION_STATUS = 57727
const VITESS_SHARDS = 57728
const VITESS_TABLETS = 57729
const VITESS_TARGET = 57730
const VSCHEMA = 57731
const VITESS_THROTTLED_APPS = 57732
const WORKLOAD = 57733
const LASTSEENGTID = 57734
const NAMES = 57735
const GLOBAL = 57736
const SESSION = 57737
const ISOLATION = 57738
const LEVEL = 57739
const READ = 57740
const WRITE = 57741
const ONLY = 57742
const REPEATABLE = 57743
const COMMITTED = 57744
const UNCOMMITTED = 57745
const SERIALIZABLE = 57746
const FAST = 57747
const QUICK = 57748
const CHANGED = 57749
const MEDIUM = 57750
const CURRENT_TIMESTAMP = 57751
const DATABASE = 57752
const CURRENT_DATE = 57753
const NOW = 57754
const CURRENT_TIME = 57755
const LOCALTIME = 57756
const LOCALTIMESTAMP = 57757
const CURRENT_USER = 57758
const UTC_DATE = 57759
const UTC_TIME = 57760
const UTC_TIMESTAMP = 57761
const DAY = 57762
const DAY_HOUR = 57763
const DAY_MICROSECOND = 57764
const DAY_MINUTE = 57765
const DAY_SECOND = 57766
const HOUR = 57767
const HOUR_MICROSECOND = 57768
const HOUR_MINUTE = 57769
const HOUR_SECOND = 57770
const MICROSECOND = 57771
const MINUTE = 57772
const MINUTE_MICROSECOND = 57773
const MINUTE_SECOND = 57774
const MONTH = 57775
const QUARTER = 57776
const SECOND = 57777
const SECOND_MICROSECOND = 57778
const YEAR_MONTH = 57779
const WEEK = 57780
const REPLACE = 57781
const CONVERT = 57782
const CAST = 57783
const SUBSTR = 57784
const SUBSTRING = 57785
const SEPARATOR = 57786
const TIMESTAMPADD = 57787
const TIMESTAMPDIFF = 57788
const WEIGHT_STRING = 57789
const LTRIM = 57790
const RTRIM = 57791
const TRIM = 57792
const JSON_ARRAY = 57793
const JSON_OBJECT = 57794
const JSON_QUOTE = 57795
const JSON_DEPTH = 57796
const JSON_TYPE = 57797
const JSON_LENGTH = 57798
const JSON_VALID = 57799
const JSON_ARRAY_APPEND = 57800
const JSON_ARRAY_INSERT = 57801
const JSON_INSERT = 57802
const JSON_MERGE = 57803
const JSON_MERGE_PATCH = 57804
const JSON_MERGE_PRESERVE = 57805
const JSON_REMOVE = 57806
const JSON_REPLACE = 57807
const JSON_SET = 57808
const JSON_UNQUOTE = 57809
const COUNT = 57810
const AVG = 57811
const MAX = 57812
const MIN = 57813
const SUM = 57814
const GROUP_CONCAT = 57815
const BIT_AND = 57816
const BIT_OR = 57817
const BIT_XOR = 57818
const STD = 57819
const STDDEV = 57820
const STDDEV_POP = 57821
const STDDEV_SAMP = 57822
const VAR_POP = 57823
const VAR_SAMP = 57824
const VARIANCE = 57825
const REGEXP_INSTR = 57826
const REGEXP_LIKE = 57827
const REGEXP_REPLACE = 57828
const REGEXP_SUBSTR = 57829
const ExtractValue = 57830
const UpdateXML = 57831
const GET_LOCK = 57832
const RELEASE_LOCK = 57833
const RELEASE_ALL_LOCKS = 57834
const IS_FREE_LOCK = 57835
const IS_USED_LOCK = 57836
const LOCATE = 57837
const POSITION = 57838
const MATCH = 57839
const AGAINST = 57840
const BOOLEAN = 57841
const LANGUAGE = 57842
const WITH = 57843
const QUERY = 57844
const EXPANSION = 57845
const WITHOUT = 57846
const VALIDATION = 57847
const UNUSED = 57848
const ARRAY = 57849
const BYTE = 57850
const CUME_DIST = 57851
const DESCRIPTION = 57852
const DENSE_RANK = 57853
const EMPTY = 57854
const EXCEPT = 57855
const FIRST_VALUE = 57856
const GROUPING = 57857
const GROUPS = 57858
const JSON_TABLE = 57859
const LAG = 57860
const LAST_VALUE = 57861
const LATERAL = 57862
const LEAD = 57863
const NTH_VALUE = 57864
const NTILE = 57865
const OF = 57866
const OVER = 57867
const PERCENT_RANK = 57868
const RANK = 57869
const RECURSIVE = 57870
const ROW_NUMBER = 57871
const SYSTEM = 57872
const WINDOW = 57873
const ACTIVE = 57874
const ADMIN = 57875
const AUTOEXTEND_SIZE = 57876
const BUCKETS = 57877
const CLONE = 57878
const COLUMN_FORMAT = 57879
const COMPONENT = 57880
const DEFINITION = 57881
const ENFORCED = 57882
const ENGINE_ATTRIBUTE = 57883
const EXCLUDE = 57884
const FOLLOWING = 57885
const GET_MASTER_PUBLIC_KEY = 57886
const HISTOGRAM = 57887
const HISTORY = 57888
const INACTIVE = 57889
const INVISIBLE = 57890
const LOCKED = 57891
const MASTER_COMPRESSION_ALGORITHMS = 57892
const MASTER_PUBLIC_KEY_PATH = 57893
const MASTER_TLS_CIPHERSUITES = 57894
const MASTER_ZSTD_COMPRESSION_LEVEL = 57895
const NESTED = 57896
const NETWORK_NAMESPACE = 57897
const NOWAIT = 57898
const NULLS = 57899
const OJ = 57900
const OLD = 57901
const OPTIONAL = 57902
const ORDINALITY = 57903
const ORGANIZATION = 57904
const OTHERS = 57905
const PARTIAL = 57906
const PATH = 57907
const PERSIST = 57908
const PERSIST_ONLY = 57909
const PRECEDING = 57910
const PRIVILEGE_CHECKS_USER = 57911
const PROCESS = 57912
const RANDOM = 57913
const REFERENCE = 57914
const REQUIRE_ROW_FORMAT = 57915
const RESOURCE = 57916
const RESPECT = 57917
const RESTART = 57918
const RETAIN = 57919
const REUSE = 57920
const ROLE = 57921
const SECONDARY = 57922
const SECONDARY_ENGINE = 57923
const SECONDARY_ENGINE_ATTRIBUTE = 57924
const SECONDARY_LOAD = 57925
const SECONDARY_UNLOAD = 57926
const SIMPLE = 57927
const SKIP = 57928
const SRID = 57929
const THREAD_PRIORITY = 57930
const TIES = 57931
const UNBOUNDED = 57932
const VCPU = 57933
const VISIBLE = 57934
const RETURNING = 57935
const FORMAT_BYTES = 57936
const FORMAT_PICO_TIME = 57937
const PS_CURRENT_THREAD_ID = 57938
const PS_THREAD_ID = 57939
const GTID_SUBSET = 57940
const GTID_SUBTRACT = 57941
const WAIT_FOR_EXECUTED_GTID_SET = 57942
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57943
const FORMAT = 57944
const TREE = 57945
const VITESS = 57946
const TRADITIONAL = 57947
const VTEXPLAIN = 57948
const VEXPLAIN = 57949
const PLAN = 57950
const LOCAL = 57951
const LOW_PRIORITY = 57952
const KILL = 57953
const USERS = 57954
const NO_WRITE_TO_BINLOG = 57955
const LOGS = 57956
const ERROR = 57957
const GENERAL = 57958
const HOSTS = 57959
const OPTIMIZER_COSTS = 57960
const USER_RESOURCES = 57961
const SLOW = 57962
const CHANNEL = 57963
const RELAY = 57964
const EXPORT = 57965
const CURRENT = 57966
const ROW = 57967
const ROWS = 57968
const AVG_ROW_LENGTH = 57969
const CONNECTION = 57970
const CHECKSUM = 57971
const DELAY_KEY_WRITE = 57972
const ENCRYPTION = 57973
const ENGINE = 57974
const INSERT_METHOD = 57975
const MAX_ROWS = 57976
const MIN_ROWS = 57977
const PACK_KEYS = 57978
const PASSWORD = 57979
const FIXED = 57980
const DYNAMIC = 57981
const COMPRESSED = 57982
const REDUNDANT = 57983
const COMPACT = 57984
const ROW_FORMAT = 57985
const STATS_AUTO_RECALC = 57986
const STATS_PERSISTENT = 57987
const STATS_SAMPLE_PAGES = 57988
const STORAGE = 57989
const MEMORY = 57990
const DISK = 57991
const PARTITIONS = 57992
const LINEAR = 57993
const RANGE = 57994
const LIST = 57995
const SUBPARTITION = 57996
const SUBPARTITIONS = 57997
const HASH = 57998

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"RELOAD",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"WORKLOAD",
	"LASTSEENGTID",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"FAST",
	"QUICK",
	"CHANGED",
	"MEDIUM",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"KILL",
	"USERS",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 52,
	14, 52,
	-2, 41,
	-1, 53,
	1, 160,
	674, 160,
	-2, 168,
	-1, 54,
	135, 168,
	176, 168,
	346, 168,
	-2, 522,
	-1, 64,
	36, 779,
	240, 779,
	251, 779,
	286, 793,
	287, 793,
	-2, 781,
	-1, 69,
	242, 817,
	-2, 815,
	-1, 124,
	239, 1479,
	-2, 134,
	-1, 126,
	1, 161,
	674, 161,
	-2, 168,
	-1, 137,
	136, 408,
	245, 408,
	-2, 511,
	-1, 156,
	135, 168,
	176, 168,
	346, 168,
	-2, 531,
	-1, 827,
	87, 1496,
	-2, 1341,
	-1, 828,
	87, 1497,
	221, 1501,
	-2, 1342,
	-1, 829,
	221, 1500,
	-2, 43,
	-1, 909,
	60, 892,
	-2, 907,
	-1, 995,
	250, 44,
	255, 44,
	-2, 419,
	-1, 1080,
	1, 579,
	674, 579,
	-2, 168,
	-1, 1390,
	221, 1501,
	-2, 1342,
	-1, 1538,
	60, 893,
	-2, 912,
	-1, 1539,
	60, 894,
	-2, 913,
	-1, 1590,
	135, 168,
	176, 168,
	346, 168,
	-2, 458,
	-1, 1671,
	136, 408,
	245, 408,
	-2, 511,
	-1, 1680,
	250, 45,
	255, 45,
	-2, 420,
	-1, 2048,
	221, 1505,
	-2, 1499,
	-1, 2049,
	221, 1501,
	-2, 1497,
	-1, 2149,
	135, 168,
	176, 168,
	346, 168,
	-2, 459,
	-1, 2156,
	26, 189,
	-2, 191,
	-1, 2526,
	78, 99,
	88, 99,
	-2, 971,
	-1, 2595,
	649, 695,
	-2, 669,
	-1, 2762,
	50, 1447,
	-2, 1441,
	-1, 3415,
	649, 695,
	-2, 683,
	-1, 3503,
	90, 627,
	95, 627,
	105, 627,
	178, 627,
	179, 627,
	180, 627,
	181, 627,
	182, 627,
	183, 627,
	184, 627,
	185, 627,
	186, 627,
	187, 627,
	188, 627,
	189, 627,
	190, 627,
	191, 627,
	192, 627,
	193, 627,
	194, 627,
	195, 627,
	196, 627,
	197, 627,
	198, 627,
	199, 627,
	200, 627,
	201, 627,
	202, 627,
	203, 627,
	204, 627,
	205, 627,
	206, 627,
	207, 627,
	208, 627,
	209, 627,
	210, 627,
	211, 627,
	212, 627,
	213, 627,
	214, 627,
	215, 627,
	216, 627,
	217, 627,
	218, 627,
	219, 627,
	-2, 1864,
}

const yyPrivate = 57344

const yyLast = 47723

var yyAct = [...]int{
	1546, 1915, 828, 831, 701, 838, 3574, 3480, 3585, 3543,
	2097, 3544, 3133, 2990, 1593, 3446, 2912, 3501, 2146, 3469,
	2077, 2814, 2821, 3396, 3380, 3328, 3164, 2863, 2872, 2877,
	2874, 3162, 2873, 2871, 2876, 2875, 2775, 3163, 3378, 3120,
	902, 1148, 2426, 2079, 797, 798, 2778, 43, 3192, 3368,
	680, 1861, 2460, 2891, 5, 2829, 2721, 683, 2776, 197,
	793, 2892, 197, 2779, 925, 3197, 2220, 1553, 660, 3029,
	2656, 792, 3023, 666, 3049, 791, 711, 2894, 2120, 2499,
	2117, 2773, 2763, 830, 197, 2101, 2039, 2486, 2560, 2918,
	681, 2640, 3015, 2188, 2183, 2208, 679, 2561, 2592, 197,
	1096, 2562, 2251, 165, 1150, 2511, 42, 2134, 44, 1540,
	957, 2122, 2492, 2462, 2121, 2036, 2478, 2044, 2010, 1930,
	1869, 2632, 926, 2229, 666, 197, 666, 904, 1696, 1125,
	1911, 1649, 906, 151, 910, 2268, 1678, 2207, 2109, 2190,
	2553, 985, 1582, 1520, 1402, 990, 2528, 1562, 1888, 693,
	2124, 1329, 1934, 928, 1799, 1795, 1314, 102, 1804, 1685,
	964, 996, 993, 1003, 2009, 961, 106, 2205, 1777, 965,
	2179, 107, 991, 992, 1581, 2180, 1567, 688, 943, 2102,
	945, 2006, 2045, 101, 1386, 1362, 1943, 1860, 913, 1146,
	1027, 87, 916, 1516, 1813, 1139, 911, 1644, 912, 169,
	129, 109, 127, 128, 86, 134, 914, 1670, 135, 1076,
	108, 670, 687, 1406, 938, 3405, 2585, 100, 3575, 2222,
	2223, 2224, 95, 3121, 2882, 2860, 3431, 2222, 2615, 2614,
	2266, 2583, 1330, 933, 937, 3113, 3076, 2879, 97, 608,
	1762, 649, 97, 97, 613, 3527, 2648, 2649, 3167, 3167,
	3426, 2882, 3432, 130, 1410, 3427, 655, 1891, 1876, 919,
	1032, 655, 136, 1875, 1874, 1873, 97, 958, 951, 795,
	796, 675, 951, 795, 796, 1330, 847, 848, 849, 1872,
	2880, 1871, 983, 847, 848, 849, 920, 671, 1844, 673,
	3522, 612, 905, 674, 2074, 2075, 952, 903, 953, 1325,
	649, 1006, 1007, 2458, 2759, 1547, 2886, 2880, 2488, 2605,
	982, 2255, 649, 3547, 969, 2314, 649, 2725, 3531, 974,
	1033, 1036, 1037, 1347, 1040, 3481, 130, 981, 2995, 980,
	979, 927, 3595, 2886, 3542, 3166, 3166, 3565, 2994, 2,
	3529, 1341, 646, 3530, 1029, 2253, 2608, 3381, 2427, 1049,
	1881, 2937, 3324, 3427, 3323, 2254, 1031, 1046, 1047, 1048,
	1030, 1051, 1052, 1053, 1054, 3528, 3556, 1057, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1072, 1073, 1341, 113, 114, 115, 3126, 118,
	630, 3127, 124, 3334, 130, 193, 88, 88, 602, 88,
	3487, 2323, 90, 3525, 628, 88, 649, 3487, 3145, 3134,
	3470, 1316, 668, 669, 3477, 2248, 1920, 3333, 3506, 2883,
	2502, 2957, 898, 899, 900, 901, 3144, 1659, 909, 3410,
	2622, 2623, 2537, 2811, 2812, 2536, 2141, 2142, 2538, 1853,
	1854, 2199, 2459, 2810, 625, 2503, 2883, 1336, 2105, 1583,
	1328, 1584, 650, 640, 3210, 2647, 940, 941, 1344, 2320,
	1345, 1346, 2140, 2631, 2193, 1115, 2321, 3511, 635, 3397,
	1143, 896, 895, 2586, 97, 97, 1103, 97, 638, 2549,
	3026, 1104, 649, 97, 978, 3509, 1085, 1086, 2159, 2158,
	1336, 1805, 1103, 944, 3515, 3516, 2945, 1104, 1116, 2495,
	2496, 2690, 2831, 2832, 649, 1102, 2076, 1101, 3548, 3510,
	1109, 650, 1326, 1075, 1315, 2943, 2914, 2312, 1088, 1852,
	663, 1579, 1856, 650, 667, 661, 2919, 650, 611, 3549,
	2633, 1524, 2593, 1805, 2281, 2277, 2279, 2280, 2278, 2282,
	2283, 3356, 976, 3357, 615, 1050, 617, 631, 2230, 652,
	2907, 651, 621, 2618, 619, 623, 632, 624, 2908, 618,
	2274, 629, 1120, 1121, 620, 633, 634, 637, 641, 642,
	643, 639, 636, 644, 614, 2269, 627, 653, 2315, 2316,
	2318, 2317, 3577, 1142, 649, 1778, 1136, 954, 948, 946,
	1117, 954, 948, 946, 2635, 1141, 973, 1124, 1803, 975,
	1752, 2289, 1110, 2290, 197, 2291, 197, 1363, 2915, 197,
	197, 2830, 2192, 2303, 1132, 2275, 1134, 650, 1079, 1118,
	1119, 192, 1081, 2833, 3115, 3114, 2105, 3523, 2292, 2934,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1372, 1371, 1373,
	1374, 2103, 2104, 1056, 1753, 131, 1754, 1055, 666, 2916,
	666, 666, 2271, 2273, 1131, 1133, 3111, 3308, 174, 2233,
	1783, 1016, 609, 1527, 1122, 1014, 2724, 2691, 986, 3171,
	666, 197, 987, 977, 1123, 2118, 987, 1025, 1024, 1023,
	1022, 1021, 1020, 1019, 1337, 1018, 1335, 1332, 1333, 1334,
	1340, 1342, 1339, 650, 1338, 2272, 1013, 1663, 978, 1390,
	970, 2542, 1026, 2833, 1331, 1377, 962, 972, 971, 3596,
	998, 999, 3554, 1377, 171, 650, 1099, 172, 1105, 1106,
	1107, 1108, 962, 962, 3589, 1684, 960, 1337, 1796, 1335,
	1332, 1333, 1334, 1340, 1342, 1339, 1113, 1338, 1035, 2321,
	191, 2206, 1144, 1145, 998, 2639, 1580, 1331, 1034, 939,
	1042, 3404, 2584, 1398, 984, 2636, 976, 1388, 1129, 2252,
	2259, 2258, 1130, 1792, 1137, 1317, 2587, 2817, 2463, 2465,
	1043, 3110, 1135, 2620, 978, 1074, 2853, 3027, 2603, 1005,
	1380, 1381, 1382, 1383, 2617, 1657, 1656, 3483, 610, 1655,
	1394, 654, 2652, 844, 3483, 650, 2551, 844, 844, 1793,
	2335, 1307, 1128, 947, 1653, 607, 606, 947, 601, 1017,
	1378, 1379, 2818, 1015, 647, 2630, 2250, 3393, 2629, 2103,
	2104, 3482, 3063, 1782, 3045, 2533, 2498, 2435, 3482, 648,
	2884, 2885, 1923, 1571, 1683, 1479, 2820, 1308, 1309, 1078,
	1090, 1390, 2607, 2888, 2493, 1384, 91, 2147, 3165, 3165,
	126, 1377, 1809, 175, 2815, 1374, 2809, 2884, 2885, 3074,
	3075, 1005, 181, 1764, 1763, 1765, 1766, 1767, 3143, 922,
	2888, 2831, 2832, 121, 1786, 1126, 1784, 1785, 2816, 1787,
	1788, 2196, 1004, 1814, 1140, 3418, 2606, 977, 1514, 1098,
	1806, 1807, 1810, 1808, 1809, 1005, 2322, 2676, 197, 1028,
	1324, 3106, 666, 666, 2642, 96, 96, 3039, 96, 2641,
	2642, 2822, 1548, 1550, 96, 2641, 2657, 1084, 197, 2270,
	1865, 2197, 1087, 1944, 1408, 1100, 1409, 1789, 2195, 2979,
	1585, 3514, 1806, 1807, 1810, 1808, 2464, 1945, 666, 1935,
	1112, 197, 1077, 2576, 3587, 122, 1531, 3588, 1530, 3586,
	1515, 1114, 1534, 666, 1935, 3557, 2352, 1346, 906, 197,
	1345, 1346, 2198, 977, 1004, 3206, 1041, 1528, 3081, 1412,
	1038, 1779, 2194, 1780, 1893, 3513, 1781, 3080, 2237, 1693,
	2830, 1692, 1682, 2247, 2245, 2935, 166, 3597, 1894, 1375,
	1376, 1892, 2833, 1883, 1885, 1886, 666, 1016, 1004, 1014,
	3550, 2659, 3448, 3386, 998, 1001, 1002, 3064, 962, 1390,
	2249, 2242, 995, 999, 1515, 666, 666, 1884, 666, 918,
	666, 666, 1127, 666, 666, 666, 666, 666, 666, 1532,
	1815, 2242, 1097, 106, 1533, 3591, 1390, 1547, 107, 1390,
	666, 1390, 197, 1772, 1940, 1080, 1521, 3449, 3387, 3316,
	2246, 1508, 3315, 1941, 1485, 1486, 1487, 1488, 1489, 2327,
	2328, 2329, 197, 847, 848, 849, 1942, 1690, 109, 3306,
	2244, 2669, 2668, 2667, 3598, 666, 2661, 197, 2665, 3140,
	2660, 3141, 2658, 3156, 3155, 3088, 3087, 2663, 3077, 1005,
	2861, 666, 2849, 197, 1725, 1549, 2662, 1728, 1347, 1730,
	2558, 2557, 2556, 1747, 1676, 2202, 1518, 1771, 2819, 1773,
	1757, 1756, 1770, 197, 2664, 2666, 903, 1755, 905, 1745,
	197, 1739, 1552, 1669, 1736, 1735, 1529, 1734, 2041, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 666, 1759,
	1688, 1705, 1698, 1095, 1699, 2041, 1701, 1703, 1729, 2038,
	1707, 1709, 1711, 1713, 1715, 1576, 1577, 1363, 2040, 2651,
	1094, 2911, 1687, 1311, 167, 1686, 1686, 1347, 655, 1005,
	1579, 179, 842, 1660, 1661, 1662, 1769, 3551, 1652, 1556,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1372, 1371, 1373,
	1374, 1347, 1004, 1679, 1667, 1801, 1666, 1665, 998, 1001,
	1002, 3413, 962, 1758, 3412, 1347, 995, 999, 3071, 655,
	1818, 3390, 187, 2540, 655, 2110, 2111, 1822, 3389, 1824,
	1825, 1826, 1827, 1733, 2952, 1557, 1831, 994, 3388, 1347,
	3311, 1816, 1817, 1344, 3295, 1345, 1346, 3294, 1843, 3205,
	1737, 1738, 2678, 1797, 3203, 1821, 1743, 1744, 1535, 3152,
	1984, 3337, 1828, 1829, 1830, 2218, 2217, 168, 173, 170,
	176, 177, 178, 180, 182, 183, 184, 185, 1347, 1005,
	2216, 2215, 1004, 186, 188, 189, 190, 1008, 998, 1513,
	130, 981, 1010, 980, 979, 1512, 1011, 1009, 1511, 2823,
	1547, 1347, 3085, 2827, 1369, 1370, 1372, 1371, 1373, 1374,
	2826, 3070, 1344, 2342, 1345, 1346, 1820, 1012, 103, 666,
	666, 2214, 2213, 2341, 1658, 105, 2484, 3576, 1547, 104,
	3538, 1547, 666, 1343, 1547, 1841, 1344, 2389, 1345, 1346,
	2920, 197, 1842, 2917, 2828, 2484, 3476, 1343, 1547, 2824,
	1344, 2852, 1345, 1346, 2825, 1976, 1965, 1966, 1967, 1968,
	1978, 1969, 1970, 1971, 1983, 1979, 1972, 1973, 1980, 1981,
	1982, 1974, 1975, 1977, 1344, 43, 1345, 1346, 43, 2484,
	3456, 3406, 1004, 2851, 1547, 3561, 1547, 1008, 998, 2567,
	666, 1919, 1010, 2554, 1918, 1918, 1011, 1009, 1510, 1347,
	1390, 1365, 1366, 1367, 1368, 1369, 1370, 1372, 1371, 1373,
	1374, 666, 2264, 1344, 1889, 1345, 1346, 1390, 1938, 2484,
	3452, 1896, 1939, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1344, 2263, 1345, 1346,
	2100, 1347, 666, 666, 1367, 1368, 1369, 1370, 1372, 1371,
	1373, 1374, 1514, 3439, 1547, 3342, 2002, 1887, 1388, 1560,
	3124, 3403, 1897, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1349, 105, 1916, 1916, 2082, 1936, 3319, 1547, 2484, 3307,
	3341, 1347, 112, 3058, 2034, 3124, 1547, 112, 103, 1347,
	2484, 3122, 2049, 111, 1845, 110, 2242, 1547, 111, 104,
	110, 1811, 1998, 1768, 105, 1760, 1849, 1850, 1750, 2063,
	1746, 1347, 3043, 1547, 1515, 2400, 1547, 3299, 1890, 87,
	1363, 1866, 87, 2842, 2841, 1559, 1548, 2070, 2839, 2840,
	1547, 2046, 1742, 1347, 1344, 197, 1345, 1346, 2837, 2838,
	666, 1741, 2391, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1372, 1371, 1373, 1374, 1547, 1895, 1740, 2037, 2837, 2836,
	2094, 1347, 1558, 1547, 197, 3559, 1547, 666, 1547, 2508,
	1547, 3298, 2349, 3493, 1547, 3132, 1344, 197, 1345, 1346,
	1138, 666, 1922, 2594, 2049, 197, 2572, 197, 2155, 197,
	197, 1347, 1929, 1931, 2048, 3491, 1547, 1347, 2321, 2616,
	1648, 2597, 2590, 2591, 666, 2804, 2087, 3038, 2088, 2051,
	2052, 1946, 1947, 1948, 1949, 2321, 1344, 3009, 1345, 1346,
	2529, 111, 2156, 2046, 1344, 1960, 1345, 1346, 2484, 2483,
	1343, 2128, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1372,
	1371, 1373, 1374, 1996, 2047, 2348, 1344, 106, 1345, 1346,
	2529, 2480, 107, 2007, 1347, 2345, 1547, 1921, 1547, 2500,
	2093, 666, 2203, 1648, 1647, 1347, 105, 106, 1344, 3040,
	1345, 1346, 107, 2050, 2774, 3005, 2053, 2054, 1591, 1590,
	1347, 3489, 1547, 2530, 2500, 3038, 2048, 2379, 666, 3444,
	1343, 3417, 2484, 2532, 666, 2508, 1344, 2507, 1345, 1346,
	2165, 2166, 2167, 2168, 2150, 1347, 2999, 2839, 2132, 2069,
	2747, 2139, 2151, 2530, 2345, 2081, 2387, 919, 2243, 2400,
	2376, 2071, 2375, 2321, 2345, 2242, 1344, 2007, 1345, 1346,
	2092, 2508, 1344, 2225, 1345, 1346, 2115, 2108, 3365, 1547,
	2160, 666, 2161, 2162, 2163, 2164, 666, 2154, 2185, 2231,
	666, 666, 2508, 2191, 2095, 2113, 3038, 1551, 2171, 2172,
	2173, 2174, 2072, 1921, 2977, 2138, 952, 2137, 953, 2136,
	1867, 1851, 1347, 1791, 2153, 2152, 2242, 1347, 1578, 989,
	988, 1347, 97, 3519, 3459, 1347, 3330, 1554, 197, 1344,
	1547, 1345, 1346, 3089, 3296, 197, 2228, 908, 2201, 3217,
	1344, 3105, 1345, 1346, 197, 197, 3102, 3083, 197, 2962,
	197, 2961, 1650, 2184, 2909, 1344, 197, 1345, 1346, 2864,
	2186, 2866, 2182, 2175, 2177, 2178, 197, 2862, 2200, 2236,
	2598, 2204, 2239, 197, 2240, 2181, 2212, 2176, 2170, 1347,
	1344, 2169, 1345, 1346, 3090, 3091, 3092, 1006, 1007, 2256,
	1775, 2234, 2235, 1681, 2238, 2186, 3363, 1547, 1686, 197,
	2563, 1363, 1547, 2257, 1359, 2973, 1360, 1677, 666, 3360,
	1547, 1646, 1363, 123, 2260, 97, 2564, 1079, 2261, 2262,
	1361, 1375, 1376, 1358, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1372, 1371, 1373, 1374, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1372, 1371, 1373, 1374, 2267, 1344, 2564, 1345,
	1346, 2913, 1344, 3571, 1345, 1346, 1344, 3331, 1345, 1346,
	1344, 1347, 1345, 1346, 3552, 3050, 3051, 2305, 2306, 2199,
	2085, 1347, 2308, 2338, 1390, 3569, 2049, 2343, 1721, 1347,
	2346, 2309, 2347, 3545, 3425, 3351, 1847, 2354, 1889, 3053,
	2858, 2356, 2357, 2358, 2331, 1363, 2333, 2334, 2857, 2295,
	2856, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372,
	2373, 2301, 2774, 2577, 1344, 2339, 1345, 1346, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1372, 1371, 1373, 1374, 1722,
	1723, 1724, 2337, 3093, 1555, 2332, 2296, 2380, 2381, 2382,
	2383, 2384, 3421, 2386, 2796, 3346, 1547, 2388, 1848, 2797,
	3056, 2393, 2394, 1347, 2395, 3014, 1547, 2398, 2311, 2399,
	3055, 1347, 2793, 2402, 3401, 1347, 2792, 2406, 3332, 2319,
	2794, 2411, 2412, 2413, 2414, 2795, 2099, 2091, 2048, 3044,
	3094, 3095, 3096, 2752, 2425, 2751, 2428, 2429, 1347, 3385,
	3196, 2330, 1890, 1347, 2431, 2433, 1344, 1347, 1345, 1346,
	3198, 2436, 2437, 2438, 2439, 2440, 1344, 1790, 1345, 1346,
	1347, 2761, 2447, 2448, 1344, 2449, 1345, 1346, 2452, 2454,
	2094, 3187, 2456, 3186, 1347, 197, 3031, 2798, 2047, 2517,
	2518, 3034, 2468, 197, 3030, 2469, 2351, 3007, 1547, 1918,
	923, 894, 2835, 1347, 666, 3004, 1547, 1347, 924, 3002,
	1547, 2547, 2568, 1347, 1045, 666, 2928, 2513, 2516, 2517,
	2518, 2514, 1944, 2515, 2519, 1044, 1717, 3050, 3051, 2340,
	1347, 3185, 2967, 1547, 2467, 2563, 1945, 2950, 1547, 197,
	2645, 2455, 1547, 1310, 197, 1347, 2385, 2359, 1344, 2604,
	1345, 1346, 131, 3036, 2453, 1547, 1344, 105, 1345, 1346,
	1344, 676, 1345, 1346, 2374, 2110, 2111, 1347, 2432, 1547,
	3583, 1522, 43, 1718, 1719, 1720, 1347, 1916, 2854, 2504,
	2470, 2522, 2472, 1344, 2524, 1345, 1346, 2959, 1344, 1347,
	1345, 1346, 1344, 1347, 1345, 1346, 2485, 2415, 1547, 3498,
	103, 2764, 2766, 2299, 3402, 1344, 3326, 1345, 1346, 1347,
	2767, 104, 666, 2481, 2958, 2523, 2834, 103, 197, 1344,
	2288, 1345, 1346, 2521, 105, 197, 2457, 2494, 104, 2407,
	1547, 604, 2096, 1521, 931, 932, 2287, 2286, 1344, 666,
	1345, 1346, 1344, 1515, 1345, 1346, 666, 2589, 1344, 2285,
	1345, 1346, 3303, 897, 2284, 666, 2482, 2550, 2552, 3016,
	2477, 3107, 2527, 2543, 2325, 1344, 2497, 1345, 1346, 1347,
	110, 1390, 929, 2955, 3373, 935, 935, 1347, 2559, 3372,
	1344, 3354, 1345, 1346, 197, 197, 197, 197, 197, 2613,
	2531, 2750, 2534, 2451, 963, 2191, 1347, 3204, 3202, 2749,
	2541, 3201, 1344, 3194, 1345, 1346, 112, 2544, 197, 197,
	3103, 1344, 111, 1345, 1346, 3035, 1347, 111, 3024, 110,
	3033, 2555, 2867, 2226, 1344, 1347, 1345, 1346, 1344, 2611,
	1345, 1346, 1347, 1664, 197, 930, 1347, 112, 3193, 2565,
	2500, 3175, 2480, 1347, 1344, 2692, 1345, 1346, 111, 2377,
	2574, 1347, 2573, 2450, 3572, 666, 2083, 2578, 2579, 2580,
	1572, 2446, 3573, 3572, 3573, 1347, 2610, 1564, 3391, 1669,
	2680, 2681, 2682, 2683, 2684, 2513, 2516, 2517, 2518, 2514,
	2445, 2515, 2519, 112, 2599, 2600, 116, 117, 3, 2689,
	2609, 3069, 921, 2566, 111, 99, 110, 2655, 2569, 2570,
	2444, 1, 666, 1092, 1344, 105, 1345, 1346, 1864, 2443,
	1862, 10, 1344, 9, 1345, 1346, 2442, 1545, 1541, 2634,
	2441, 1863, 2670, 1802, 8, 2685, 2637, 2430, 1313, 1312,
	3073, 1344, 1542, 1345, 1346, 2424, 2654, 3508, 626, 2073,
	666, 2653, 1347, 1519, 2643, 3546, 3504, 2644, 666, 2423,
	3505, 1344, 1761, 1345, 1346, 1751, 3135, 2089, 2090, 1544,
	1344, 1543, 1345, 1346, 2008, 3327, 2870, 1344, 2232, 1345,
	1346, 1344, 3101, 1345, 1346, 2673, 2189, 997, 1344, 666,
	1345, 1346, 2726, 2671, 156, 2148, 1344, 2731, 1345, 1346,
	2149, 3472, 120, 197, 955, 119, 1000, 666, 2728, 1111,
	1344, 2227, 1345, 1346, 3125, 1347, 2548, 2157, 1597, 1595,
	1596, 666, 2037, 1594, 2037, 1390, 2783, 1599, 666, 666,
	1390, 197, 197, 197, 197, 197, 2422, 1598, 2936, 2700,
	2694, 1347, 2378, 197, 2801, 2128, 2978, 1855, 662, 197,
	2520, 197, 656, 194, 197, 197, 197, 1586, 2672, 1565,
	2731, 2991, 1039, 616, 2786, 2843, 2727, 2803, 2729, 2780,
	910, 2265, 2730, 2128, 2128, 2128, 2128, 2128, 2754, 2755,
	622, 1395, 1846, 2777, 2771, 2748, 2535, 1344, 2777, 1345,
	1346, 950, 942, 2128, 2084, 2742, 2128, 2471, 949, 2421,
	197, 2710, 2711, 2712, 2713, 2714, 3304, 2782, 3028, 2760,
	2762, 2756, 2487, 666, 2753, 2746, 1390, 2702, 2765, 2704,
	2758, 666, 2768, 2769, 3384, 2420, 197, 2805, 3195, 2890,
	2806, 3457, 911, 2545, 912, 2715, 2716, 2717, 2718, 1561,
	197, 2788, 2789, 2787, 2791, 2799, 2790, 2743, 2744, 2745,
	1344, 2998, 1345, 1346, 2350, 2785, 1933, 1347, 1801, 197,
	2807, 1347, 197, 1385, 2125, 106, 2813, 3170, 1882, 685,
	107, 2930, 684, 682, 2869, 2473, 1344, 2501, 1345, 1346,
	2846, 1350, 2844, 2845, 832, 1347, 2461, 1573, 2512, 2510,
	2509, 2947, 2948, 2949, 1347, 2951, 2953, 2897, 1347, 2297,
	2133, 2898, 1347, 3052, 3048, 3500, 1347, 2127, 2123, 2960,
	2479, 2889, 783, 2191, 2964, 2965, 2966, 2968, 2969, 2970,
	2971, 2868, 782, 2972, 1347, 2974, 2975, 2976, 2904, 694,
	2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989,
	686, 2419, 666, 678, 2921, 2418, 781, 2924, 2996, 2923,
	780, 3000, 3066, 3001, 3003, 2896, 3006, 3008, 1347, 3010,
	3011, 3012, 3013, 2932, 2926, 2927, 3484, 3019, 2931, 2417,
	2619, 197, 2910, 2621, 2847, 2848, 2941, 2546, 2416, 2906,
	1327, 1537, 2410, 1083, 2993, 1089, 2409, 672, 1091, 1093,
	2408, 2997, 1344, 968, 1345, 1346, 1344, 2933, 1345, 1346,
	3408, 2324, 3041, 3042, 2956, 1536, 3046, 1963, 2405, 2938,
	2939, 1964, 2940, 3415, 2878, 2942, 3119, 2944, 1347, 2946,
	1344, 2859, 1345, 1346, 1347, 2595, 2219, 197, 72, 1344,
	47, 1345, 1346, 1344, 1347, 1345, 1346, 1344, 1347, 1345,
	1346, 1344, 2404, 1345, 1346, 1347, 3379, 3445, 779, 1348,
	1319, 1347, 776, 3022, 3020, 3172, 197, 3017, 3018, 1344,
	3173, 1345, 1346, 1347, 3174, 3032, 3025, 1347, 2722, 2128,
	2723, 3428, 3429, 775, 3430, 1991, 197, 3037, 1403, 197,
	197, 197, 1323, 1320, 3521, 3054, 3047, 1857, 3057, 666,
	666, 98, 38, 1344, 37, 1345, 1346, 3108, 3109, 36,
	35, 34, 2403, 3060, 3059, 3061, 3062, 28, 2401, 2897,
	27, 26, 3123, 2898, 3067, 3068, 25, 24, 2397, 21,
	20, 31, 2396, 3129, 3130, 23, 1545, 1541, 22, 2392,
	19, 18, 2881, 3541, 3582, 2390, 666, 666, 666, 666,
	125, 1542, 3084, 56, 3086, 53, 51, 2355, 133, 132,
	54, 2344, 50, 1344, 3142, 1345, 1346, 3146, 1082, 1344,
	48, 1345, 1346, 33, 32, 17, 1538, 1539, 1544, 1344,
	1543, 1345, 1346, 1344, 16, 1345, 1346, 15, 14, 13,
	1344, 12, 1345, 1346, 3157, 11, 1344, 7, 1345, 1346,
	6, 41, 40, 3131, 30, 39, 29, 4, 1344, 3161,
	1345, 1346, 1344, 2582, 1345, 1346, 2221, 0, 0, 0,
	0, 3169, 0, 0, 0, 0, 0, 0, 0, 3176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3078, 3079,
	0, 3151, 197, 0, 0, 3147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3190, 1390, 0, 0, 0, 0, 666, 0, 666, 0,
	3168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3219, 0, 0, 0, 1918, 0, 0, 0, 0, 0,
	0, 3112, 0, 0, 0, 3116, 3117, 3118, 0, 0,
	0, 0, 1563, 0, 0, 0, 2780, 43, 3215, 0,
	2780, 3213, 0, 3199, 3211, 3191, 0, 3207, 3200, 2777,
	1575, 0, 0, 0, 3209, 0, 843, 0, 666, 89,
	0, 0, 0, 0, 0, 0, 3305, 0, 1592, 1651,
	3318, 197, 0, 0, 666, 0, 0, 3223, 0, 3325,
	0, 0, 0, 0, 0, 0, 0, 666, 0, 3220,
	3221, 0, 1916, 0, 0, 0, 0, 0, 0, 3335,
	3336, 0, 3338, 0, 3339, 3340, 3301, 3309, 0, 3343,
	3344, 3345, 3317, 3347, 3350, 3300, 0, 3159, 0, 3352,
	3302, 0, 0, 1918, 0, 0, 3329, 0, 3321, 3359,
	3361, 3362, 3364, 3366, 3367, 3369, 3322, 666, 0, 3349,
	0, 666, 666, 0, 907, 0, 89, 0, 0, 0,
	3348, 1731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3353, 0, 0, 0, 907, 0, 0, 0, 0,
	666, 0, 0, 3399, 0, 0, 0, 0, 3395, 3355,
	967, 0, 0, 3358, 0, 0, 1776, 0, 3374, 3375,
	3377, 0, 0, 3376, 0, 0, 0, 0, 0, 0,
	1812, 1916, 0, 0, 0, 0, 2780, 3392, 0, 0,
	0, 3398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 1823,
	3394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 0, 0, 666,
	0, 0, 0, 0, 3312, 3313, 3314, 3400, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 666, 197, 0, 0, 0, 0, 0,
	0, 3419, 0, 0, 0, 0, 0, 0, 0, 3424,
	0, 0, 0, 0, 3407, 0, 3411, 0, 0, 3414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3440,
	0, 43, 0, 0, 0, 3441, 3442, 0, 3416, 0,
	0, 0, 0, 0, 666, 0, 0, 0, 3383, 0,
	0, 0, 0, 0, 1390, 0, 666, 3453, 3434, 0,
	0, 3435, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3443, 0, 0, 0,
	666, 666, 0, 3478, 3479, 0, 0, 0, 3450, 0,
	0, 0, 0, 3460, 3485, 3486, 0, 3488, 3490, 3492,
	0, 0, 666, 3471, 3463, 3468, 3465, 43, 3464, 3462,
	3467, 3466, 2777, 0, 3458, 0, 197, 666, 0, 3329,
	3473, 0, 3520, 3455, 0, 0, 0, 0, 0, 3496,
	0, 0, 0, 0, 3499, 0, 0, 0, 3517, 3507,
	3512, 0, 0, 0, 0, 3485, 3486, 0, 0, 3526,
	1870, 0, 0, 3524, 0, 1877, 1878, 1879, 1880, 0,
	666, 3537, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3535, 0, 0, 0, 3540, 0, 0,
	0, 0, 666, 0, 0, 0, 0, 0, 0, 0,
	3553, 0, 0, 3558, 3560, 3562, 0, 3555, 1398, 666,
	3423, 666, 0, 3567, 1924, 1925, 0, 1918, 3433, 1927,
	3563, 935, 935, 1932, 3570, 3568, 3564, 1937, 0, 3566,
	0, 3485, 3486, 0, 3581, 3578, 0, 0, 0, 0,
	1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	3593, 3594, 3590, 3592, 1985, 1986, 1987, 1988, 1989, 1990,
	1992, 3584, 1997, 0, 1999, 2000, 2001, 3599, 2003, 2004,
	2005, 1918, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
	2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028,
	2029, 2030, 2031, 2032, 2033, 1916, 2035, 3349, 2042, 2043,
	935, 3600, 935, 935, 935, 935, 935, 3601, 3602, 0,
	0, 0, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062,
	0, 2064, 2065, 2066, 2067, 2068, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 845, 0,
	2041, 0, 0, 846, 0, 0, 0, 0, 0, 1916,
	0, 0, 0, 1917, 0, 0, 0, 0, 0, 935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2106, 2107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2112, 0, 0, 0,
	0, 0, 0, 0, 2116, 0, 2119, 2145, 0, 1870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1147, 0, 1147, 1147, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 867, 868, 869, 870, 871, 872, 873, 874, 875,
	876, 877, 878, 879, 880, 881, 882, 883, 884, 885,
	886, 887, 888, 889, 890, 891, 892, 893, 2187, 0,
	0, 0, 907, 1387, 1392, 1393, 0, 1396, 0, 1397,
	1399, 1400, 1401, 0, 1404, 1405, 1407, 1407, 0, 1407,
	1411, 1411, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
	1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440,
	1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460,
	1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 1476, 1477, 0, 0, 0,
	0, 1478, 0, 1480, 1481, 1482, 1483, 1484, 0, 0,
	0, 0, 0, 0, 0, 0, 1411, 1411, 1411, 1411,
	1411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 845, 0, 0, 1870, 0, 846,
	0, 0, 0, 0, 2276, 0, 0, 0, 0, 1917,
	0, 1517, 0, 2293, 2294, 0, 0, 2298, 0, 0,
	0, 0, 0, 0, 0, 2302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2304, 0, 0, 0, 0,
	0, 0, 2307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1523, 0, 0, 0, 2310, 0,
	907, 0, 0, 0, 907, 0, 0, 0, 0, 0,
	907, 0, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2353, 0, 0,
	131, 0, 153, 0, 0, 0, 0, 0, 2360, 2361,
	2362, 2363, 0, 174, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 0,
	0, 192, 0, 0, 164, 0, 0, 0, 0, 0,
	152, 174, 2588, 1403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 0, 153, 0, 171,
	0, 0, 172, 0, 0, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 140, 141, 163, 162, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 164,
	172, 0, 0, 0, 0, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 171, 0, 0, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1147, 0, 0, 0, 1672, 1673, 163, 162,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1563, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 138, 160, 145, 137, 0,
	158, 159, 0, 2526, 0, 0, 0, 0, 175, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 147, 142, 143, 144, 148, 0, 0,
	0, 0, 0, 0, 139, 0, 175, 0, 0, 0,
	0, 0, 0, 150, 827, 181, 0, 0, 0, 157,
	1674, 160, 0, 1671, 0, 158, 159, 0, 0, 0,
	0, 0, 0, 175, 0, 0, 0, 2575, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 1147, 1147, 665, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	89, 166, 0, 2624, 2625, 2626, 2627, 2628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 2638, 0,
	0, 0, 0, 0, 0, 0, 665, 0, 665, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 2650, 0,
	0, 0, 0, 2646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 935, 0, 0,
	2674, 2675, 0, 0, 2677, 0, 0, 2679, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2686, 2687, 2688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2693,
	0, 0, 2695, 2696, 2697, 0, 0, 0, 2698, 2699,
	0, 0, 2011, 2701, 0, 0, 2703, 0, 0, 2705,
	2706, 2707, 2708, 0, 0, 0, 0, 2709, 2011, 2011,
	2011, 2011, 2011, 0, 0, 0, 154, 0, 0, 155,
	161, 0, 0, 0, 0, 0, 935, 0, 0, 0,
	0, 0, 0, 2732, 2733, 2734, 2735, 2736, 2737, 0,
	0, 0, 2738, 2739, 0, 2740, 0, 2741, 0, 167,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3539, 0, 0, 0, 0, 0, 0,
	0, 154, 0, 1614, 155, 0, 0, 167, 0, 0,
	0, 0, 2772, 0, 179, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 2802, 0, 0,
	0, 179, 0, 2126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 168, 173, 170, 176, 177, 178, 180, 182,
	183, 184, 185, 0, 0, 0, 0, 0, 186, 188,
	189, 190, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2865, 2855,
	168, 173, 170, 176, 177, 178, 180, 182, 183, 184,
	185, 0, 0, 0, 0, 967, 186, 188, 189, 190,
	0, 0, 0, 0, 0, 2893, 0, 168, 173, 170,
	176, 177, 178, 180, 182, 183, 184, 185, 0, 2905,
	0, 0, 0, 186, 188, 189, 190, 1602, 967, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2922, 0,
	0, 2925, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1668, 0, 0, 0, 0, 0, 0, 0,
	2954, 0, 0, 0, 0, 131, 0, 153, 0, 0,
	0, 0, 0, 0, 2963, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1615, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 172, 0, 0,
	3021, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1672, 1673, 163, 162,
	191, 0, 0, 0, 1628, 1631, 1632, 1633, 1634, 1635,
	1636, 0, 1637, 1638, 1640, 1641, 1639, 1642, 1643, 1616,
	1617, 1618, 1619, 1600, 1601, 1629, 0, 1603, 0, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 0, 0,
	1613, 1620, 1621, 1622, 1623, 0, 1624, 1625, 1626, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 2326, 0,
	665, 1306, 665, 665, 0, 3082, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 0, 3104, 3097, 0, 0, 3098, 3099,
	3100, 0, 0, 0, 0, 0, 0, 2336, 0, 157,
	1674, 160, 0, 1671, 0, 158, 159, 0, 0, 0,
	0, 1389, 0, 175, 0, 0, 0, 3128, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3148, 0, 3149, 0, 0, 3150, 0, 0,
	3153, 3154, 0, 0, 0, 0, 0, 0, 0, 3158,
	0, 0, 0, 0, 0, 0, 1630, 0, 0, 3160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	784, 3177, 0, 2434, 3178, 0, 3179, 3180, 0, 3181,
	0, 3182, 0, 0, 0, 0, 3183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 1389, 0, 2466, 0, 0, 0, 0,
	0, 3208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3216, 907, 0, 3218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3222, 0, 0,
	0, 664, 0, 0, 2505, 2506, 0, 0, 0, 0,
	0, 0, 0, 2126, 0, 3297, 907, 2525, 0, 0,
	0, 0, 0, 0, 665, 665, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 1614, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 959, 0, 966, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 665, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1654, 0, 0, 0, 0,
	0, 154, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 665, 0,
	1680, 0, 0, 0, 0, 3382, 0, 0, 1689, 0,
	2602, 1389, 1691, 0, 167, 1694, 1695, 665, 665, 0,
	665, 179, 665, 665, 0, 665, 665, 665, 665, 665,
	665, 0, 0, 0, 0, 0, 0, 0, 1389, 1726,
	1727, 1389, 665, 1389, 0, 1732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 1602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 665, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1794, 0, 0, 665, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 173, 170,
	176, 177, 178, 180, 182, 183, 184, 185, 0, 0,
	0, 0, 0, 186, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 88, 45, 46, 90, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 0, 3422,
	0, 1615, 0, 3420, 94, 0, 0, 0, 49, 79,
	80, 0, 77, 81, 0, 0, 0, 0, 0, 0,
	0, 78, 3436, 0, 0, 3437, 0, 3438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2719, 0, 0, 0, 0, 0,
	65, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 97, 1628, 1631, 1632, 1633, 1634, 1635, 1636,
	0, 1637, 1638, 1640, 1641, 1639, 1642, 1643, 1616, 1617,
	1618, 1619, 1600, 1601, 1629, 0, 1603, 0, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 2126, 0, 1613,
	1620, 1621, 1622, 1623, 0, 1624, 1625, 1626, 1627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2781, 3518, 89, 0, 0, 2126, 2126, 2126, 2126, 2126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2126, 0, 0, 2126, 0,
	0, 3532, 0, 3533, 0, 3534, 0, 0, 0, 0,
	0, 665, 665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 55, 58, 57, 60, 0, 76, 0, 0, 85,
	63, 82, 2887, 0, 0, 0, 0, 0, 0, 0,
	0, 3579, 2895, 3580, 0, 61, 0, 0, 0, 0,
	0, 0, 665, 0, 64, 93, 92, 0, 0, 74,
	75, 59, 1389, 0, 0, 0, 0, 83, 84, 0,
	0, 1926, 0, 665, 0, 1630, 0, 0, 0, 1389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 665, 0, 0, 0, 66,
	67, 0, 68, 69, 70, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1149, 0, 1149, 1149,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1318, 0,
	0, 0, 0, 0, 665, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2126, 0, 665, 0, 0, 665, 0, 0, 0,
	0, 91, 0, 0, 3065, 785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 96, 0, 605, 0, 0, 0, 0,
	0, 0, 0, 665, 0, 0, 0, 0, 0, 0,
	2209, 2210, 2211, 0, 0, 0, 0, 605, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 917, 0, 0, 0, 665, 1689, 0, 0,
	1689, 0, 1689, 0, 0, 0, 0, 0, 2241, 936,
	936, 0, 0, 0, 0, 0, 0, 0, 605, 0,
	1525, 1526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 665, 0, 0, 0, 0, 665, 0,
	0, 0, 665, 665, 0, 0, 1569, 0, 0, 73,
	0, 0, 0, 62, 0, 0, 0, 0, 0, 0,
	0, 1587, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3184, 0, 3188, 3189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 959, 0, 0, 2781, 0, 89,
	0, 2781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1697, 1697, 0, 1697, 0, 1697, 1697,
	0, 1706, 1697, 1697, 1697, 1697, 1697, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 959, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3310, 0,
	0, 0, 0, 1774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1389, 0, 665, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 665, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1149, 1149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2539, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3454, 0, 0, 0, 0, 89,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 605, 1912, 605,
	0, 0, 605, 605, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 0, 0, 0, 0, 1928,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 665, 0, 0, 0, 0, 0, 0, 665, 0,
	1961, 1962, 1689, 1689, 0, 0, 0, 665, 0, 0,
	0, 0, 0, 0, 605, 0, 0, 0, 0, 0,
	0, 0, 0, 1389, 2612, 3536, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1391, 0, 0, 0, 0, 0, 0, 0,
	1149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2086, 0,
	0, 0, 0, 0, 0, 0, 0, 665, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2098, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1569,
	0, 0, 1149, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 0, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1391, 0, 0, 0, 0, 0,
	0, 0, 665, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 966,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 665, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 605, 0, 0, 0, 0, 959, 0, 0, 665,
	0, 0, 966, 0, 0, 0, 0, 0, 0, 0,
	0, 917, 0, 665, 0, 0, 0, 1389, 0, 0,
	665, 665, 1389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 605, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 959,
	0, 0, 605, 0, 1912, 0, 0, 0, 1912, 1912,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1391, 0, 0, 665, 0, 0, 1389, 0,
	0, 0, 0, 665, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1391,
	0, 0, 1391, 0, 1391, 605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1748, 0, 0, 0, 0,
	0, 0, 0, 0, 2929, 0, 0, 0, 0, 0,
	605, 0, 0, 0, 0, 0, 2313, 0, 0, 0,
	0, 0, 97, 0, 0, 845, 1800, 0, 0, 833,
	846, 847, 848, 849, 834, 0, 0, 835, 836, 0,
	837, 0, 0, 0, 0, 0, 605, 0, 0, 0,
	0, 0, 0, 605, 842, 850, 851, 0, 0, 0,
	0, 0, 1832, 1833, 605, 605, 605, 605, 605, 605,
	605, 0, 0, 0, 665, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2899, 2900, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 865, 866, 867, 868,
	869, 870, 871, 872, 873, 874, 875, 876, 877, 878,
	879, 880, 881, 882, 883, 884, 885, 886, 887, 888,
	889, 890, 891, 892, 893, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3072, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 665, 665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2489, 605, 0, 0, 0, 665, 665,
	665, 665, 0, 0, 2902, 2903, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 936, 936, 0, 0, 0,
	1391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2571, 799, 0, 0, 803, 0, 800, 801, 0, 0,
	0, 802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2098, 0, 0,
	0, 0, 0, 1389, 2596, 0, 0, 0, 665, 0,
	665, 0, 0, 2601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 936, 1800, 936, 936, 936, 936,
	936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1748, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 936, 0, 0, 665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 917, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	605, 0, 0, 1912, 0, 0, 0, 1800, 605, 0,
	605, 0, 605, 2135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 665, 665, 0, 0, 0, 0, 0,
	1912, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2720, 0,
	0, 0, 0, 0, 0, 0, 1149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1697, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2757, 0, 0, 0, 0,
	0, 665, 0, 0, 0, 0, 0, 0, 0, 1149,
	0, 0, 0, 0, 0, 0, 2784, 1697, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 665, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 605, 0, 0, 0, 0, 0, 0, 605, 0,
	0, 0, 0, 0, 0, 0, 0, 605, 605, 0,
	0, 605, 0, 2300, 0, 0, 665, 0, 0, 605,
	0, 0, 0, 0, 0, 0, 1389, 0, 665, 605,
	0, 959, 0, 0, 0, 0, 605, 0, 0, 2098,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 665, 0, 0, 0, 0, 0, 0,
	0, 0, 605, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 0, 0, 845, 0, 0, 665,
	833, 846, 847, 848, 849, 834, 0, 0, 835, 836,
	0, 837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 842, 850, 851, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 0, 0, 0, 0, 1391, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 0, 0, 0, 0, 0,
	2992, 0, 2899, 2900, 0, 0, 0, 0, 0, 0,
	0, 665, 0, 665, 852, 853, 854, 855, 856, 857,
	858, 859, 860, 861, 862, 863, 864, 865, 866, 867,
	868, 869, 870, 871, 872, 873, 874, 875, 876, 877,
	878, 879, 880, 881, 882, 883, 884, 885, 886, 887,
	888, 889, 890, 891, 892, 893, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2901, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 605, 0,
	0, 0, 0, 0, 0, 0, 1748, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2098, 2098, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2902, 2903, 0, 0, 0,
	0, 0, 605, 0, 0, 0, 0, 605, 0, 0,
	0, 0, 0, 0, 3136, 3137, 3138, 3139, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 605, 0, 0, 0, 0, 0, 0, 2581, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3212, 0, 3214, 605, 605, 605,
	605, 605, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 605, 605, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 605, 0, 0,
	0, 0, 0, 0, 0, 0, 2098, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 936, 3320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1149, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3370, 0, 0, 0, 3370,
	3370, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	936, 0, 0, 0, 0, 0, 0, 0, 2098, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 605, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1391, 0,
	0, 0, 0, 1391, 605, 605, 605, 605, 605, 0,
	0, 0, 0, 0, 0, 0, 2800, 2098, 0, 0,
	0, 0, 1748, 0, 605, 0, 0, 605, 2808, 1800,
	0, 0, 0, 0, 0, 0, 0, 3241, 3243, 3242,
	3260, 3261, 3262, 3263, 3264, 3265, 3266, 733, 0, 0,
	0, 2098, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 605, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1391,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 605,
	0, 0, 3447, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 605, 3451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 605, 0, 0, 605, 0, 0, 1149, 1149,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3502, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3447, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2098, 0, 0, 0, 605, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2992, 0, 3502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3255, 3256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 605,
	0, 0, 605, 605, 605, 799, 0, 712, 803, 714,
	800, 801, 0, 710, 713, 802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 731, 732, 3240, 3244, 3245, 3246, 3257, 3258, 3259,
	3267, 3269, 764, 3268, 3270, 3271, 3272, 3275, 3276, 3277,
	3278, 3273, 3274, 3279, 3224, 3228, 3225, 3226, 3227, 3239,
	3229, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238,
	3280, 3281, 3282, 3283, 3284, 3285, 3250, 3254, 3253, 3251,
	3252, 3248, 3249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 804, 0, 805, 0, 0,
	809, 0, 0, 0, 811, 810, 0, 812, 778, 777,
	0, 0, 806, 807, 0, 808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1748, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1391, 0, 0, 0, 0, 0,
	3286, 3287, 3288, 3289, 3290, 3291, 3292, 3293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 0, 1283, 1268,
	508, 0, 1211, 1286, 1180, 1199, 1296, 1202, 1205, 1247,
	1159, 1225, 408, 1196, 1152, 1184, 1154, 1191, 1155, 1182,
	1213, 266, 1179, 1270, 1229, 1285, 359, 263, 1161, 1185,
	422, 1201, 204, 1249, 477, 250, 370, 367, 516, 278,
	269, 265, 248, 312, 378, 420, 498, 414, 1292, 363,
	1235, 0, 487, 393, 0, 0, 0, 1215, 1274, 1223,
	1261, 1210, 1248, 1169, 1234, 1287, 1197, 1244, 1288, 318,
	246, 320, 203, 405, 488, 282, 0, 0, 1748, 0,
	3474, 655, 0, 0, 0, 0, 3475, 0, 0, 0,
	0, 236, 0, 0, 243, 0, 0, 605, 344, 353,
	352, 333, 334, 336, 338, 343, 350, 356, 1193, 1241,
	1282, 1194, 1243, 261, 316, 268, 260, 513, 1293, 1273,
	1158, 1222, 1281, 0, 0, 227, 1284, 1217, 0, 1246,
	0, 1299, 1153, 1237, 0, 1156, 1160, 1295, 1277, 1188,
	271, 0, 0, 0, 0, 0, 0, 0, 1214, 1224,
	1258, 1262, 1208, 0, 0, 0, 0, 1391, 0, 0,
	1186, 0, 1233, 0, 0, 0, 1165, 1157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1212, 0, 0, 0, 0, 1168, 0, 1187, 1259, 1748,
	1151, 293, 1162, 394, 253, 1305, 0, 444, 1266, 1276,
	1209, 556, 1280, 1207, 1206, 1253, 1166, 1272, 1200, 358,
	1164, 325, 199, 223, 0, 1198, 404, 452, 464, 1271,
	1183, 1192, 251, 1190, 462, 418, 533, 231, 280, 449,
	424, 460, 432, 283, 1232, 1251, 461, 365, 518, 442,
	530, 557, 558, 259, 398, 542, 502, 551, 577, 224,
	256, 412, 495, 536, 484, 390, 514, 515, 324, 483,
	291, 202, 362, 563, 222, 470, 364, 240, 229, 520,
	539, 285, 447, 572, 211, 497, 528, 237, 474, 0,
	0, 579, 245, 494, 213, 525, 493, 386, 321, 322,
	212, 0, 448, 264, 289, 0, 0, 254, 407, 522,
	523, 252, 580, 226, 550, 218, 1163, 549, 400, 517,
	526, 387, 376, 217, 524, 385, 375, 329, 348, 349,
	276, 302, 439, 368, 440, 301, 303, 396, 395, 397,
	206, 537, 0, 207, 0, 489, 538, 581, 232, 233,
	235, 1178, 275, 279, 287, 290, 298, 299, 308, 360,
	411, 438, 434, 443, 1267, 512, 531, 543, 555, 561,
	562, 564, 565, 566, 567, 568, 573, 571, 569, 570,
	399, 306, 485, 328, 366, 1256, 1298, 417, 463, 238,
	535, 486, 1301, 1302, 1303, 1304, 1173, 1177, 1171, 1238,
	1172, 1227, 1228, 1174, 1289, 1290, 1291, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 0, 1260, 1167, 0, 1175,
	1176, 1269, 1278, 1279, 600, 377, 476, 532, 330, 342,
	345, 335, 354, 0, 355, 331, 332, 337, 339, 340,
	341, 346, 347, 351, 357, 247, 209, 383, 391, 511,
	307, 214, 215, 216, 504, 505, 506, 507, 547, 548,
	552, 453, 454, 455, 456, 288, 541, 304, 459, 458,
	326, 327, 372, 441, 1231, 198, 219, 361, 1294, 445,
	284, 578, 546, 540, 205, 221, 1170, 258, 1181, 1189,
	0, 1195, 1203, 1204, 1216, 1218, 1219, 1220, 1221, 1239,
	1240, 1242, 1250, 1252, 1255, 1257, 1264, 1275, 1297, 200,
	201, 208, 220, 230, 234, 241, 257, 272, 274, 281,
	294, 305, 313, 314, 317, 323, 373, 379, 380, 381,
	382, 401, 402, 403, 406, 409, 410, 413, 415, 416,
	419, 423, 427, 428, 429, 431, 433, 435, 446, 451,
	465, 466, 467, 468, 469, 472, 473, 478, 479, 480,
	481, 482, 490, 491, 496, 519, 521, 534, 553, 559,
	471, 296, 297, 436, 437, 309, 310, 575, 576, 295,
	529, 560, 527, 574, 554, 430, 371, 1230, 1300, 544,
	1236, 374, 277, 300, 315, 1245, 545, 492, 225, 457,
	286, 249, 1263, 1265, 210, 244, 228, 255, 270, 273,
	319, 384, 392, 421, 426, 292, 267, 242, 450, 239,
	475, 499, 500, 501, 503, 388, 262, 425, 1226, 1254,
	369, 509, 510, 311, 389, 0, 0, 0, 1283, 1268,
	508, 0, 1211, 1286, 1180, 1199, 1296, 1202, 1205, 1247,
	1159, 1225, 408, 1196, 1152, 1184, 1154, 1191, 1155, 1182,
	1213, 266, 1179, 1270, 1229, 1285, 359, 263, 1161, 1185,
	422, 1201, 204, 1249, 477, 250, 370, 367, 516, 278,
	269, 265, 248, 312, 378, 420, 498, 414, 1292, 363,
	1235, 0, 487, 393, 0, 0, 0, 1215, 1274, 1223,
	1261, 1210, 1248, 1169, 1234, 1287, 1197, 1244, 1288, 318,
	246, 320, 203, 405, 488, 282, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 243, 0, 0, 0, 344, 353,
	352, 333, 334, 336, 338, 343, 350, 356, 1193, 1241,
	1282, 1194, 1243, 261, 316, 268, 260, 513, 1293, 1273,
	1158, 1222, 1281, 0, 0, 227, 1284, 1217, 0, 1246,
	0, 1299, 1153, 1237, 0, 1156, 1160, 1295, 1277, 1188,
	271, 0, 0, 0, 0, 0, 0, 0, 1214, 1224,
	1258, 1262, 1208, 0, 0, 0, 0, 0, 2809, 0,
	1186, 0, 1233, 0, 0, 0, 1165, 1157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1212, 0, 0, 0, 0, 1168, 0, 1187, 1259, 0,
	1151, 293, 1162, 394, 253, 1305, 0, 444, 1266, 1276,
	1209, 556, 1280, 1207, 1206, 1253, 1166, 1272, 1200, 358,
	1164, 325, 199, 223, 0, 1198, 404, 452, 464, 1271,
	1183, 1192, 251, 1190, 462, 418, 533, 231, 280, 449,
	424, 460, 432, 283, 1232, 1251, 461, 365, 518, 442,
	530, 557, 558, 259, 398, 542, 502, 551, 577, 224,
	256, 412, 495, 536, 484, 390, 514, 515, 324, 483,
	291, 202, 362, 563, 222, 470, 364, 240, 229, 520,
	539, 285, 447, 572, 211, 497, 528, 237, 474, 0,
	0, 579, 245, 494, 213, 525, 493, 386, 321, 322,
	212, 0, 448, 264, 289, 0, 0, 254, 407, 522,
	523, 252, 580, 226, 550, 218, 1163, 549, 400, 517,
	526, 387, 376, 217, 524, 385, 375, 329, 348, 349,
	276, 302, 439, 368, 440, 301, 303, 396, 395, 397,
	206, 537, 0, 207, 0, 489, 538, 581, 232, 233,
	235, 1178, 275, 279, 287, 290, 298, 299, 308, 360,
	411, 438, 434, 443, 1267, 512, 531, 543, 555, 561,
	562, 564, 565, 566, 567, 568, 573, 571, 569, 570,
	399, 306, 485, 328, 366, 1256, 1298, 417, 463, 238,
	535, 486, 1301, 1302, 1303, 1304, 1173, 1177, 1171, 1238,
	1172, 1227, 1228, 1174, 1289, 1290, 1291, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 0, 1260, 1167, 0, 1175,
	1176, 1269, 1278, 1279, 600, 377, 476, 532, 330, 342,
	345, 335, 354, 0, 355, 331, 332, 337, 339, 340,
	341, 346, 347, 351, 357, 247, 209, 383, 391, 511,
	307, 214, 215, 216, 504, 505, 506, 507, 547, 548,
	552, 453, 454, 455, 456, 288, 541, 304, 459, 458,
	326, 327, 372, 441, 1231, 198, 219, 361, 1294, 445,
	284, 578, 546, 540, 205, 221, 1170, 258, 1181, 1189,
	0, 1195, 1203, 1204, 1216, 1218, 1219, 1220, 1221, 1239,
	1240, 1242, 1250, 1252, 1255, 1257, 1264, 1275, 1297, 200,
	201, 208, 220, 230, 234, 241, 257, 272, 274, 281,
	294, 305, 313, 314, 317, 323, 373, 379, 380, 381,
	382, 401, 402, 403, 406, 409, 410, 413, 415, 416,
	419, 423, 427, 428, 429, 431, 433, 435, 446, 451,
	465, 466, 467, 468, 469, 472, 473, 478, 479, 480,
	481, 482, 490, 491, 496, 519, 521, 534, 553, 559,
	471, 296, 297, 436, 437, 309, 310, 575, 576, 295,
	529, 560, 527, 574, 554, 430, 371, 1230, 1300, 544,
	1236, 374, 277, 300, 315, 1245, 545, 492, 225, 457,
	286, 249, 1263, 1265, 210, 244, 228, 255, 270, 273,
	319, 384, 392, 421, 426, 292, 267, 242, 450, 239,
	475, 499, 500, 501, 503, 388, 262, 425, 1226, 1254,
	369, 509, 510, 311, 389, 0, 0, 0, 1283, 1268,
	508, 0, 1211, 1286, 1180, 1199, 1296, 1202, 1205, 1247,
	1159, 1225, 408, 1196, 1152, 1184, 1154, 1191, 1155, 1182,
	1213, 266, 1179, 1270, 1229, 1285, 359, 263, 1161, 1185,
	422, 1201, 204, 1249, 477, 250, 370, 367, 516, 278,
	269, 265, 248, 312, 378, 420, 498, 414, 1292, 363,
	1235, 0, 487, 393, 0, 0, 0, 1215, 1274, 1223,
	1261, 1210, 1248, 1169, 1234, 1287, 1197, 1244, 1288, 318,
	246, 320, 203, 405, 488, 282, 0, 0, 0, 0,
	0, 655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 243, 0, 0, 0, 344, 353,
	352, 333, 334, 336, 338, 343, 350, 356, 1193, 1241,
	1282, 1194, 1243, 261, 316, 268, 260, 513, 1293, 1273,
	1158, 1222, 1281, 0, 0, 227, 1284, 1217, 0, 1246,
	0, 1299, 1153, 1237, 0, 1156, 1160, 1295, 1277, 1188,
	271, 0, 0, 0, 0, 0, 0, 0, 1214, 1224,
	1258, 1262, 1208, 0, 0, 0, 0, 0, 2770, 0,
	1186, 0, 1233, 0, 0, 0, 1165, 1157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1212, 0, 0, 0, 0, 1168, 0, 1187, 1259, 0,
	1151, 293, 1162, 394, 253, 1305, 0, 444, 1266, 1276,
	1209, 556, 1280, 1207, 1206, 1253, 1166, 1272, 1200, 358,
	1164, 325, 199, 223, 0, 1198, 404, 452, 464, 1271,
	1183, 1192, 251, 1190, 462, 418, 533, 231, 280, 449,
	424, 460, 432, 283, 1232, 1251, 461, 365, 518, 442,
	530, 557, 558, 259, 398, 542, 502, 551, 577, 224,
	256, 412, 495, 536, 484, 390, 514, 515, 324, 483,
	291, 202, 362, 563, 222, 470, 364, 240, 229, 520,
	539, 285, 447, 572, 211, 497, 528, 237, 474, 0,
	0, 579, 245, 494, 213, 525, 493, 386, 321, 322,
	212, 0, 448, 264, 289, 0, 0, 254, 407, 522,
	523, 252, 580, 226, 550, 218, 1163, 549, 400, 517,
	526, 387, 376, 217, 524, 385, 375, 329, 348, 349,
	276, 302, 439, 368, 440, 301, 303, 396, 395, 397,
	206, 537, 0, 207, 0, 489, 538, 581, 232, 233,
	235, 1178, 275, 279, 287, 290, 298, 299, 308, 360,
	411, 438, 434, 443, 1267, 512, 531, 543, 555, 561,
	562, 564, 565, 566, 567, 568, 573, 571, 569, 570,
	399, 306, 485, 328, 366, 1256, 1298, 417, 463, 238,
	535, 486, 1301, 1302, 1303, 1304, 1173, 1177, 1171, 1238,
	1172, 1227, 1228, 1174, 1289, 1290, 1291, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 0, 1260, 1167, 0, 1175,
	1176, 1269, 1278, 1279, 600, 377, 476, 532, 330, 342,
	345, 335, 354, 0, 355, 331, 332, 337, 339, 340,
	341, 346, 347, 351, 357, 247, 209, 383, 391, 511,
	307, 214, 215, 216, 504, 505, 506, 507, 547, 548,
	552, 453, 454, 455, 456, 288, 541, 304, 459, 458,
	326, 327, 372, 441, 1231, 198, 219, 361, 1294, 445,
	284, 578, 546, 540, 205, 221, 1170, 258, 1181, 1189,
	0, 1195, 1203, 1204, 1216, 1218, 1219, 1220, 1221, 1239,
	1240, 1242, 1250, 1252, 1255, 1257, 1264, 1275, 1297, 200,
	201, 208, 220, 230, 234, 241, 257, 272, 274, 281,
	294, 305, 313, 314, 317, 323, 373, 379, 380, 381,
	382, 401, 402, 403, 406, 409, 410, 413, 415, 416,
	419, 423, 427, 428, 429, 431, 433, 435, 446, 451,
	465, 466, 467, 468, 469, 472, 473, 478, 479, 480,
	481, 482, 490, 491, 496, 519, 521, 534, 553, 559,
	471, 296, 297, 436, 437, 309, 310, 575, 576, 295,
	529, 560, 527, 574, 554, 430, 371, 1230, 1300, 544,
	1236, 374, 277, 300, 315, 1245, 545, 492, 225, 457,
	286, 249, 1263, 1265, 210, 244, 228, 255, 270, 273,
	319, 384, 392, 421, 426, 292, 267, 242, 450, 239,
	475, 499, 500, 501, 503, 388, 262, 425, 1226, 1254,
	369, 509, 510, 311, 389, 0, 0, 0, 1283, 1268,
	508, 0, 1211, 1286, 1180, 1199, 1296, 1202, 1205, 1247,
	1159, 1225, 408, 1196, 1152, 1184, 1154, 1191, 1155, 1182,
	1213, 266, 1179, 1270, 1229, 1285, 359, 263, 1161, 1185,
	422, 1201, 204, 1249, 477, 250, 370, 367, 516, 278,
	269, 265, 248, 312, 378, 420, 498, 414, 1292, 363,
	1235, 0, 487, 393, 0, 0, 0, 1215, 1274, 1223,
	1261, 1210, 1248, 1169, 1234, 1287, 1197, 1244, 1288, 318,
	246, 320, 203, 405, 488, 282, 0, 0, 0, 0,
	0, 829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 243, 0, 0, 0, 344, 353,
	352, 333, 334, 336, 338, 343, 350, 356, 1193, 1241,
	1282, 1194, 1243, 261, 316, 268, 260, 513, 1293, 1273,
	1158, 1222, 1281, 0, 0, 227, 1284, 1217, 0, 1246,
	0, 1299, 1153, 1237, 0, 1156, 1160, 1295, 1277, 1188,
	271, 0, 0, 0, 0, 0, 0, 0, 1214, 1224,
	1258, 1262, 1208, 0, 0, 0, 0, 0, 2114, 0,
	1186, 0, 1233, 0, 0, 0, 1165, 1157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1212, 0, 0, 0, 0, 1168, 0, 1187, 1259, 0,
	1151, 293, 1162, 394, 253, 1305, 0, 444, 1266, 1276,
	1209, 556, 1280, 1207, 1206, 1253, 1166, 1272, 1200, 358,
	1164, 325, 199, 223, 0, 1198, 404, 452, 464, 1271,
	1183, 1192, 251, 1190, 462, 418, 533, 231, 280, 449,
	424, 460, 432, 283, 1232, 1251, 461, 365, 518, 442,
	530, 557, 558, 259, 398, 542, 502, 551, 577, 224,
	256, 412, 495, 536, 484, 390, 514, 515, 324, 483,
	291, 202, 362, 563, 222, 470, 364, 240, 229, 520,
	539, 285, 447, 572, 211, 497, 528, 237, 474, 0,
	0, 579, 245, 494, 213, 525, 493, 386, 321, 322,
	212, 0, 448, 264, 289, 0, 0, 254, 407, 522,
	523, 252, 580, 226, 550, 218, 1163, 549, 400, 517,
	526, 387, 376, 217, 524, 385, 375, 329, 348, 349,
	276, 302, 439, 368, 440, 301, 303, 396, 395, 397,
	206, 537, 0, 207, 0, 489, 538, 581, 232, 233,
	235, 1178, 275, 279, 287, 290, 298, 299, 308, 360,
	411, 438, 434, 443, 1267, 512, 531, 543, 555, 561,
	562, 564, 565, 566, 567, 568, 573, 571, 569, 570,
	399, 306, 485, 328, 366, 1256, 1298, 417, 463, 238,
	535, 486, 1301, 1302, 1303, 1304, 1173, 1177, 1171, 1238,
	1172, 1227, 1228, 1174, 1289, 1290, 1291, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 0, 1260, 1167, 0, 1175,
	1176, 1269, 1278, 1279, 600, 377, 476, 532, 330, 342,
	345, 335, 354, 0, 355, 331, 332, 337, 339, 340,
	341, 346, 347, 351, 357, 247, 209, 383, 391, 511,
	307, 214, 215, 216, 504, 505, 506, 507, 547, 548,
	552, 453, 454, 455, 456, 288, 541, 304, 459, 458,
	326, 327, 372, 441, 1231, 198, 219, 361, 1294, 445,
	284, 578, 546, 540, 205, 221, 1170, 258, 1181, 1189,
	0, 1195, 1203, 1204, 1216, 1218, 1219, 1220, 1221, 1239,
	1240, 1242, 1250, 1252, 1255, 1257, 1264, 1275, 1297, 200,
	201, 208, 220, 230, 234, 241, 257, 272, 274, 281,
	294, 305, 313, 314, 317, 323, 373, 379, 380, 381,
	382, 401, 402, 403, 406, 409, 410, 413, 415, 416,
	419, 423, 427, 428, 429, 431, 433, 435, 446, 451,
	465, 466, 467, 468, 469, 472, 473, 478, 479, 480,
	481, 482, 490, 491, 496, 519, 521, 534, 553, 559,
	471, 296, 297, 436, 437, 309, 310, 575, 576, 295,
	529, 560, 527, 574, 554, 430, 371, 1230, 1300, 544,
	1236, 374, 277, 300, 315, 1245, 545, 492, 225, 457,
	286, 249, 1263, 1265, 210, 244, 228, 255, 270, 273,
	319, 384, 392, 421, 426, 292, 267, 242, 450, 239,
	475, 499, 500, 501, 503, 388, 262, 425, 1226, 1254,
	369, 509, 510, 311, 389, 0, 0, 0, 1283, 1268,
	508, 0, 1211, 1286, 1180, 1199, 1296, 1202, 1205, 1247,
	1159, 1225, 408, 1196, 1152, 1184, 1154, 1191, 1155, 1182,
	1213, 266, 1179, 1270, 1229, 1285, 359, 263, 1161, 1185,
	422, 1201, 204, 1249, 477, 250, 370, 367, 516, 278,
	269, 265, 248, 312, 378, 420, 498, 414, 1292, 363,
	1235, 0, 487, 393, 0, 0, 0, 1215, 1274, 1223,
	1261, 1210, 1248, 1169, 1234, 1287, 1197, 1244, 1288, 318,
	246, 320, 203, 405, 488, 282, 0, 97, 0, 0,
	0, 655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 243, 0, 0, 0, 344, 353,
	352, 333, 334, 336, 338, 343, 350, 356, 1193, 1241,
	1282, 1194, 1243, 261, 316, 268, 260, 513, 1293, 1273,
	1158, 1222, 1281, 0, 0, 227, 1284, 1217, 0, 1246,
	0, 1299, 1153, 1237, 0, 1156, 1160, 1295, 1277, 1188,
	271, 0, 0, 0, 0, 0, 0, 0, 1214, 1224,
	1258, 1262, 1208, 0, 0, 0, 0, 0, 0, 0,
	1186, 0, 1233, 0, 0, 0, 1165, 1157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1212, 0, 0, 0, 0, 1168, 0, 1187, 1259, 0,
	1151, 293, 1162, 394, 253, 1305, 0, 444, 1266, 1276,
	1209, 556, 1280, 1207, 1206, 1253, 1166, 1272, 1200, 358,
	1164, 325, 199, 223, 0, 1198, 404, 452, 464, 1271,
	1183, 1192, 251, 1190, 462, 418, 533, 231, 280, 449,
	424, 460, 432, 283, 1232, 1251, 461, 365, 518, 442,
	530, 557, 558, 259, 398, 542, 502, 551, 577, 224,
	256, 412, 495, 536, 484, 390, 514, 515, 324, 483,
	291, 202, 362, 563, 222, 470, 364, 240, 229, 520,
	539, 285, 447, 572, 211, 497, 528, 237, 474, 0,
	0, 579, 245, 494, 213, 525, 493, 386, 321, 322,
	212, 0, 448, 264, 289, 0, 0, 254, 407, 522,
	523, 252, 580, 226, 550, 218, 1163, 549, 400, 517,
	526, 387, 376, 217, 524, 385, 375, 329, 348, 349,
	276, 302, 439, 368, 440, 301, 303, 396, 395, 397,
	206, 537, 0, 207, 0, 489, 538, 581, 232, 233,
	235, 1178, 275, 279, 287, 290, 298, 299, 308, 360,
	411, 438, 434, 443, 1267, 512, 531, 543, 555, 561,
	562, 564, 565, 566, 567, 568, 573, 571, 569, 570,
	399, 306, 485, 328, 366, 1256, 1298, 417, 463, 238,
	535, 486, 1301, 1302, 1303, 1304, 1173, 1177, 1171, 1238,
	1172, 1227, 1228, 1174, 1289, 1290, 1291, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 0, 1260, 1167, 0, 1175,
	1176, 1269, 1278, 1279, 600, 377, 476, 532, 330, 342,
	345, 335, 354, 0, 355, 331, 332, 337, 339, 340,
	341, 346, 347, 351, 357, 247, 209, 383, 391, 511,
	307, 214, 215, 216, 504, 505, 506, 507, 547, 548,
	552, 453, 454, 455, 456, 288, 541, 304, 459, 458,
	326, 327, 372, 441, 1231, 198, 219, 361, 1294, 445,
	284, 578, 546, 540, 205, 221, 1170, 258, 1181, 1189,
	0, 1195, 1203, 1204, 1216, 1218, 1219, 1220, 1221, 1239,
	1240, 1242, 1250, 1252, 1255, 1257, 1264, 1275, 1297, 200,
	201, 208, 220, 230, 234, 241, 257, 272, 274, 281,
	294, 305, 313, 314, 317, 323, 373, 379, 380, 381,
	382, 401, 402, 403, 406, 409, 410, 413, 415, 416,
	419, 423, 427, 428, 429, 431, 433, 435, 446, 451,
	465, 466, 467, 468, 469, 472, 473, 478, 479, 480,
	481, 482, 490, 491, 496, 519, 521, 534, 553, 559,
	471, 296, 297, 436, 437, 309, 310, 575, 576, 295,
	529, 560, 527, 574, 554, 430, 371, 1230, 1300, 544,
	1236, 374, 277, 300, 315, 1245, 545, 492, 225, 457,
	286, 249, 1263, 1265, 210, 244, 228, 255, 270, 273,
	319, 384, 392, 421, 426, 292, 267, 242, 450, 239,
	475, 499, 500, 501, 503, 388, 262, 425, 1226, 1254,
	369, 509, 510, 311, 389, 0, 0, 0, 1283, 1268,
	508, 0, 1211, 1286, 1180, 1199, 1296, 1202, 1205, 1247,
	1159, 1225, 408, 1196, 1152, 1184, 1154, 1191, 1155, 1182,
	1213, 266, 1179, 1270, 1229, 1285, 359, 263, 1161, 1185,
	422, 1201, 204, 1249, 477, 250, 370, 367, 516, 278,
	269, 265, 248, 312, 378, 420, 498, 414, 1292, 363,
	1235, 0, 487, 393, 0, 0, 0, 1215, 1274, 1223,
	1261, 1210, 1248, 1169, 1234, 1287, 1197, 1244, 1288, 318,
	246, 320, 203, 405, 488, 282, 0, 0, 0, 0,
	0, 655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 243, 0, 0, 0, 344, 353,
	352, 333, 334, 336, 338, 343, 350, 356, 1193, 1241,
	1282, 1194, 1243, 261, 316, 268, 260, 513, 1293, 1273,
	1158, 1222, 1281, 0, 0, 227, 1284, 1217, 0, 1246,
	0, 1299, 1153, 1237, 0, 1156, 1160, 1295, 1277, 1188,
	271, 0, 0, 0, 0, 0, 0, 0, 1214, 1224,
	1258, 1262, 1208, 0, 0, 0, 0, 0, 0, 0,
	1186, 0, 1233, 0, 0, 0, 1165, 1157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1212, 0, 0, 0, 0, 1168, 0, 1187, 1259, 0,
	1151, 293, 1162, 394, 253, 1305, 0, 444, 1266, 1276,
	1209, 556, 1280, 1207, 1206, 1253, 1166, 1272, 1200, 358,
	1164, 325, 199, 223, 0, 1198, 404, 452, 464, 1271,
	1183, 1192, 251, 1190, 462, 418, 533, 231, 280, 449,
	424, 460, 432, 283, 1232, 1251, 461, 365, 518, 442,
	530, 557, 558, 259, 398, 542, 502, 551, 577, 224,
	256, 412, 495, 536, 484, 390, 514, 515, 324, 483,
	291, 202, 362, 563, 222, 470, 364, 240, 229, 520,
	539, 285, 447, 572, 211, 497, 528, 237, 474, 0,
	0, 579, 245, 494, 213, 525, 493, 386, 321, 322,
	212, 0, 448, 264, 289, 0, 0, 254, 407, 522,
	523, 252, 580, 226, 550, 218, 1163, 549, 400, 517,
	526, 387, 376, 217, 524, 385, 375, 329, 348, 349,
	276, 302, 439, 368, 440, 301, 303, 396, 395, 397,
	206, 537, 0, 207, 0, 489, 538, 581, 232, 233,
	235, 1178, 275, 279, 287, 290, 298, 299, 308, 360,
	411, 438, 434, 443, 1267, 512, 531, 543, 555, 561,
	562, 564, 565, 566, 567, 568, 573, 571, 569, 570,
	399, 306, 485, 328, 366, 1256, 1298, 417, 463, 238,
	535, 486, 1301, 1302, 1303, 1304, 1173, 1177, 1171, 1238,
	1172, 1227, 1228, 1174, 1289, 1290, 1291, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 0, 1260, 1167, 0, 1175,
	1176, 1269, 1278, 1279, 600, 377, 476, 532, 330, 342,
	345, 335, 354, 0, 355, 331, 332, 337, 339, 340,
	341, 346, 347, 351, 357, 247, 209, 383, 391, 511,
	307, 214, 215, 216, 504, 505, 506, 507, 547, 548,
	552, 453, 454, 455, 456, 288, 541, 304, 459, 458,
	326, 327, 372, 441, 1231, 198, 219, 361, 1294, 445,
	284, 578, 546, 540, 205, 221, 1170, 258, 1181, 1189,
	0, 1195, 1203, 1204, 1216, 1218, 1219, 1220, 1221, 1239,
	1240, 1242, 1250, 1252, 1255, 1257, 1264, 1275, 1297, 200,
	201, 208, 220, 230, 234, 241, 257, 272, 274, 281,
	294, 305, 313, 314, 317, 323, 373, 379, 380, 381,
	382, 401, 402, 403, 406, 409, 410, 413, 415, 416,
	419, 423, 427, 428, 429, 431, 433, 435, 446, 451,
	465, 466, 467, 468, 469, 472, 473, 478, 479, 480,
	481, 482, 490, 491, 496, 519, 521, 534, 553, 559,
	471, 296, 297, 436, 437, 309, 310, 575, 576, 295,
	529, 560, 527, 574, 554, 430, 371, 1230, 1300, 544,
	1236, 374, 277, 300, 315, 1245, 545, 492, 225, 457,
	286, 249, 1263, 1265, 210, 244, 228, 255, 270, 273,
	319, 384, 392, 421, 426, 292, 267, 242, 450, 239,
	475, 499, 500, 501, 503, 388, 262, 425, 1226, 1254,
	369, 509, 510, 311, 389, 0, 0, 0, 1283, 1268,
	508, 0, 1211, 1286, 1180, 1199, 1296, 1202, 1205, 1247,
	1159, 1225, 408, 1196, 1152, 1184, 1154, 1191, 1155, 1182,
	1213, 266, 1179, 1270, 1229, 1285, 359, 263, 1161, 1185,
	422, 1201, 204, 1249, 477, 250, 370, 367, 516, 278,
	269, 265, 248, 312, 378, 420, 498, 414, 1292, 363,
	1235, 0, 487, 393, 0, 0, 0, 1215, 1274, 1223,
	1261, 1210, 1248, 1169, 1234, 1287, 1197, 1244, 1288, 318,
	246, 320, 203, 405, 488, 282, 0, 0, 0, 0,
	0, 829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 243, 0, 0, 0, 344, 353,
	352, 333, 334, 336, 338, 343, 350, 356, 1193, 1241,
	1282, 1194, 1243, 261, 316, 268, 260, 513, 1293, 1273,
	1158, 1222, 1281, 0, 0, 227, 1284, 1217, 0, 1246,
	0, 1299, 1153, 1237, 0, 1156, 1160, 1295, 1277, 1188,
	271, 0, 0, 0, 0, 0, 0, 0, 1214, 1224,
	1258, 1262, 1208, 0, 0, 0, 0, 0, 0, 0,
	1186, 0, 1233, 0, 0, 0, 1165, 1157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1212, 0, 0, 0, 0, 1168, 0, 1187, 1259, 0,
	1151, 293, 1162, 394, 253, 1305, 0, 444, 1266, 1276,
	1209, 556, 1280, 1207, 1206, 1253, 1166, 1272, 1200, 358,
	1164, 325, 199, 223, 0, 1198, 404, 452, 464, 1271,
	1183, 1192, 251, 1190, 462, 418, 533, 231, 280, 449,
	424, 460, 432, 283, 1232, 1251, 461, 365, 518, 442,
	530, 557, 558, 259, 398, 542, 502, 551, 577, 224,
	256, 412, 495, 536, 484, 390, 514, 515, 324, 483,
	291, 202, 362, 563, 222, 470, 364, 240, 229, 520,
	539, 285, 447, 572, 211, 497, 528, 237, 474, 0,
	0, 579, 245, 494, 213, 525, 493, 386, 321, 322,
	212, 0, 448, 264, 289, 0, 0, 254, 407, 522,
	523, 252, 580, 226, 550, 218, 1163, 549, 400, 517,
	526, 387, 376, 217, 524, 385, 375, 329, 348, 349,
	276, 302, 439, 368, 440, 301, 303, 396, 395, 397,
	206, 537, 0, 207, 0, 489, 538, 581, 232, 233,
	235, 1178, 275, 279, 287, 290, 298, 299, 308, 360,
	411, 438, 434, 443, 1267, 512, 531, 543, 555, 561,
	562, 564, 565, 566, 567, 568, 573, 571, 569, 570,
	399, 306, 485, 328, 366, 1256, 1298, 417, 463, 238,
	535, 486, 1301, 1302, 1303, 1304, 1173, 1177, 1171, 1238,
	1172, 1227, 1228, 1174, 1289, 1290, 1291, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 0, 1260, 1167, 0, 1175,
	1176, 1269, 1278, 1279, 600, 377, 476, 532, 330, 342,
	345, 335, 354, 0, 355, 331, 332, 337, 339, 340,
	341, 346, 347, 351, 357, 247, 209, 383, 391, 511,
	307, 214, 215, 216, 504, 505, 506, 507, 547, 548,
	552, 453, 454, 455, 456, 288, 541, 304, 459, 458,
	326, 327, 372, 441, 1231, 198, 219, 361, 1294, 445,
	284, 578, 546, 540, 205, 221, 1170, 258, 1181, 1189,
	0, 1195, 1203, 1204, 1216, 1218, 1219, 1220, 1221, 1239,
	1240, 1242, 1250, 1252, 1255, 1257, 1264, 1275, 1297, 200,
	201, 208, 220, 230, 234, 241, 257, 272, 274, 281,
	294, 305, 313, 314, 317, 323, 373, 379, 380, 381,
	382, 401, 402, 403, 406, 409, 410, 413, 415, 416,
	419, 423, 427, 428, 429, 431, 433, 435, 446, 451,
	465, 466, 467, 468, 469, 472, 473, 478, 479, 480,
	481, 482, 490, 491, 496, 519, 521, 534, 553, 559,
	471, 296, 297, 436, 437, 309, 310, 575, 576, 295,
	529, 560, 527, 574, 554, 430, 371, 1230, 1300, 544,
	1236, 374, 277, 300, 315, 1245, 545, 492, 225, 457,
	286, 249, 1263, 1265, 210, 244, 228, 255, 270, 273,
	319, 384, 392, 421, 426, 292, 267, 242, 450, 239,
	475, 499, 500, 501, 503, 388, 262, 425, 1226, 1254,
	369, 509, 510, 311, 389, 0, 0, 0, 1283, 1268,
	508, 0, 1211, 1286, 1180, 1199, 1296, 1202, 1205, 1247,
	1159, 1225, 408, 1196, 1152, 1184, 1154, 1191, 1155, 1182,
	1213, 266, 1179, 1270, 1229, 1285, 359, 263, 1161, 1185,
	422, 1201, 204, 1249, 477, 250, 370, 367, 516, 278,
	269, 265, 248, 312, 378, 420, 498, 414, 1292, 363,
	1235, 0, 487, 393, 0, 0, 0, 1215, 1274, 1223,
	1261, 1210, 1248, 1169, 1234, 1287, 1197, 1244, 1288, 318,
	246, 320, 203, 405, 488, 282, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 243, 0, 0, 0, 344, 353,
	352, 333, 334, 336, 338, 343, 350, 356, 1193, 1241,
	1282, 1194, 1243, 261, 316, 268, 260, 513, 1293, 1273,
	1158, 1222, 1281, 0, 0, 227, 1284, 1217, 0, 1246,
	0, 1299, 1153, 1237, 0, 1156, 1160, 1295, 1277, 1188,
	271, 0, 0, 0, 0, 0, 0, 0, 1214, 1224,
	1258, 1262, 1208, 0, 0, 0, 0, 0, 0, 0,
	1186, 0, 1233, 0, 0, 0, 1165, 1157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1212, 0, 0, 0, 0, 1168, 0, 1187, 1259, 0,
	1151, 293, 1162, 394, 253, 1305, 0, 444, 1266, 1276,
	1209, 556, 1280, 1207, 1206, 1253, 1166, 1272, 1200, 358,
	1164, 325, 199, 223, 0, 1198, 404, 452, 464, 1271,
	1183, 1192, 251, 1190, 462, 418, 533, 231, 280, 449,
	424, 460, 432, 283, 1232, 1251, 461, 365, 518, 442,
	530, 557, 558, 259, 398, 542, 502, 551, 577, 224,
	256, 412, 495, 536, 484, 390, 514, 515, 324, 483,
	291, 202, 362, 563, 222, 470, 364, 240, 229, 520,
	539, 285, 447, 572, 211, 497, 528, 237, 474, 0,
	0, 579, 245, 494, 213, 525, 493, 386, 321, 322,
	212, 0, 448, 264, 289, 0, 0, 254, 407, 522,
	523, 252, 580, 226, 550, 218, 1163, 549, 400, 517,
	526, 387, 376, 217, 524, 385, 375, 329, 348, 349,
	276, 302, 439, 368, 440, 301, 303, 396, 395, 397,
	206, 537, 0, 207, 0, 489, 538, 581, 232, 233,
	235, 1178, 275, 279, 287, 290, 298, 299, 308, 360,
	411, 438, 434, 443, 1267, 512, 531, 543, 555, 561,
	562, 564, 565, 566, 567, 568, 573, 571, 569, 570,
	399, 306, 485, 328, 366, 1256, 1298, 417, 463, 238,
	535, 486, 1301, 1302, 1303, 1304, 1173, 1177, 1171, 1238,
	1172, 1227, 1228, 1174, 1289, 1290, 1291, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 0, 1260, 1167, 0, 1175,
	1176, 1269, 1278, 1279, 600, 377, 476, 532, 330, 342,
	345, 335, 354, 0, 355, 331, 332, 337, 339, 340,
	341, 346, 347, 351, 357, 247, 209, 383, 391, 511,
	307, 214, 215, 216, 504, 505, 506, 507, 547, 548,
	552, 453, 454, 455, 456, 288, 541, 304, 459, 458,
	326, 327, 372, 441, 1231, 198, 219, 361, 1294, 445,
	284, 578, 546, 540, 205, 221, 1170, 258, 1181, 1189,
	0, 1195, 1203, 1204, 1216, 1218, 1219, 1220, 1221, 1239,
	1240, 1242, 1250, 1252, 1255, 1257, 1264, 1275, 1297, 200,
	201, 208, 220, 230, 234, 241, 257, 272, 274, 281,
	294, 305, 313, 314, 317, 323, 373, 379, 380, 381,
	382, 401, 402, 403, 406, 409, 410, 413, 415, 416,
	419, 423, 427, 428, 429, 431, 433, 435, 446, 451,
	465, 466, 467, 468, 469, 472, 473, 478, 479, 480,
	481, 482, 490, 491, 496, 519, 521, 534, 553, 559,
	471, 296, 297, 436, 437, 309, 310, 575, 576, 295,
	529, 560, 527, 574, 554, 430, 371, 1230, 1300, 544,
	1236, 374, 277, 300, 315, 1245, 545, 492, 225, 457,
	286, 249, 1263, 1265, 210, 244, 228, 255, 270, 273,
	319, 384, 392, 421, 426, 292, 267, 242, 450, 239,
	475, 499, 500, 501, 503, 388, 262, 425, 1226, 1254,
	369, 509, 510, 311, 389, 0, 0, 0, 0, 0,
	508, 0, 708, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 695, 0, 0,
	0, 266, 700, 0, 0, 0, 359, 263, 0, 0,
	422, 0, 204, 0, 477, 250, 370, 367, 516, 278,
	269, 265, 248, 312, 378, 420, 498, 414, 707, 363,
	0, 0, 487, 393, 0, 0, 0, 0, 0, 703,
	704, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	246, 320, 203, 405, 488, 282, 0, 97, 0, 0,
	845, 829, 795, 796, 833, 846, 847, 848, 849, 834,
	0, 236, 835, 836, 243, 837, 0, 794, 735, 737,
	736, 754, 755, 756, 757, 758, 759, 760, 733, 842,
	850, 851, 0, 261, 316, 268, 260, 513, 0, 0,
	1993, 1994, 1995, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 677, 692, 0, 706, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 689, 690, 0, 0,
	0, 0, 789, 0, 691, 0, 0, 699, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 888, 889, 890, 891, 892, 893,
	702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 394, 253, 0, 0, 444, 788, 0,
	0, 556, 0, 0, 786, 0, 0, 0, 0, 358,
	0, 325, 199, 223, 0, 0, 404, 452, 464, 0,
	0, 0, 839, 0, 462, 418, 533, 231, 280, 449,
	424, 460, 432, 283, 0, 0, 461, 365, 518, 442,
	530, 557, 558, 259, 398, 542, 502, 551, 577, 224,
	256, 412, 495, 536, 484, 390, 514, 515, 324, 483,
	291, 202, 362, 563, 222, 470, 364, 240, 229, 520,
	539, 285, 447, 572, 211, 497, 528, 237, 474, 0,
	0, 579, 245, 494, 213, 525, 493, 386, 321, 322,
	212, 0, 448, 264, 289, 0, 0, 254, 407, 840,
	841, 252, 580, 741, 550, 218, 0, 549, 400, 517,
	526, 387, 376, 217, 524, 385, 375, 329, 749, 750,
	276, 302, 439, 368, 440, 301, 303, 396, 395, 397,
	206, 537, 0, 207, 0, 489, 538, 581, 232, 233,
	235, 0, 275, 279, 287, 290, 298, 299, 308, 360,
	411, 438, 434, 443, 0, 512, 531, 543, 555, 561,
	562, 564, 565, 566, 567, 568, 573, 571, 569, 570,
	399, 306, 485, 328, 366, 0, 0, 417, 463, 238,
	535, 486, 0, 0, 0, 0, 799, 787, 712, 803,
	714, 800, 801, 709, 710, 713, 802, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 0, 790, 698, 697, 0,
	705, 0, 731, 732, 734, 738, 739, 740, 751, 752,
	753, 761, 763, 764, 762, 765, 766, 767, 770, 771,
	772, 773, 768, 769, 774, 715, 719, 716, 717, 718,
	730, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 813, 814, 815, 816, 817, 818, 744, 748, 747,
	745, 746, 742, 743, 696, 198, 219, 361, 0, 445,
	284, 578, 546, 540, 205, 221, 804, 258, 805, 0,
	0, 809, 0, 0, 0, 811, 810, 0, 812, 778,
	777, 0, 0, 806, 807, 0, 808, 0, 0, 200,
	201, 208, 220, 230, 234, 241, 257, 272, 274, 281,
	294, 305, 313, 314, 317, 323, 373, 379, 380, 381,
	382, 401, 402, 403, 406, 409, 410, 413, 415, 416,
	419, 423, 427, 428, 429, 431, 433, 435, 446, 451,
	465, 466, 467, 468, 469, 472, 473, 478, 479, 480,
	481, 482, 490, 491, 496, 519, 521, 534, 553, 559,
	471, 819, 820, 821, 822, 823, 824, 825, 826, 295,
	529, 560, 527, 574, 554, 430, 371, 0, 0, 544,
	0, 374, 277, 300, 315, 0, 545, 492, 225, 457,
	286, 249, 844, 0, 210, 244, 228, 255, 270, 273,
	319, 384, 392, 421, 426, 292, 267, 242, 450, 239,
	475, 499, 500, 501, 503, 388, 262, 425, 389, 0,
	369, 509, 510, 311, 508, 0, 708, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 695, 0, 0, 0, 266, 700, 0, 0, 0,
	359, 263, 0, 0, 422, 0, 204, 0, 477, 250,
	370, 367, 516, 278, 269, 265, 248, 312, 378, 420,
	498, 414, 707, 363, 0, 0, 487, 393, 0, 0,
	0, 0, 0, 703, 704, 0, 0, 0, 0, 0,
	0, 2143, 0, 318, 246, 320, 203, 405, 488, 282,
	0, 97, 0, 0, 845, 829, 795, 796, 833, 846,
	847, 848, 849, 834, 0, 236, 835, 836, 243, 837,
	0, 794, 735, 737, 736, 754, 755, 756, 757, 758,
	759, 760, 733, 842, 850, 851, 2144, 261, 316, 268,
	260, 513, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 677, 692, 0,
	706, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	689, 690, 0, 0, 0, 0, 789, 0, 691, 0,
	0, 699, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 702, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 0, 394, 253, 0,
	0, 444, 788, 0, 0, 556, 0, 0, 786, 0,
	0, 0, 0, 358, 0, 325, 199, 223, 0, 0,
	404, 452, 464, 0, 0, 0, 839, 0, 462, 418,
	533, 231, 280, 449, 424, 460, 432, 283, 0, 0,
	461, 365, 518, 442, 530, 557, 558, 259, 398, 542,
	502, 551, 577, 224, 256, 412, 495, 536, 484, 390,
	514, 515, 324, 483, 291, 202, 362, 563, 222, 470,
	364, 240, 229, 520, 539, 285, 447, 572, 211, 497,
	528, 237, 474, 0, 0, 579, 245, 494, 213, 525,
	493, 386, 321, 322, 212, 0, 448, 264, 289, 0,
	0, 254, 407, 840, 841, 252, 580, 741, 550, 218,
	0, 549, 400, 517, 526, 387, 376, 217, 524, 385,
	375, 329, 749, 750, 276, 302, 439, 368, 440, 301,
	303, 396, 395, 397, 206, 537, 0, 207, 0, 489,
	538, 581, 232, 233, 235, 0, 275, 279, 287, 290,
	298, 299, 308, 360, 411, 438, 434, 443, 0, 512,
	531, 543, 555, 561, 562, 564, 565, 566, 567, 568,
	573, 571, 569, 570, 399, 306, 485, 328, 366, 0,
	0, 417, 463, 238, 535, 486, 0, 0, 0, 0,
	799, 787, 712, 803, 714, 800, 801, 709, 710, 713,
	802, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 0,
	790, 698, 697, 0, 705, 0, 731, 732, 734, 738,
	739, 740, 751, 752, 753, 761, 763, 764, 762, 765,
	766, 767, 770, 771, 772, 773, 768, 769, 774, 715,
	719, 716, 717, 718, 730, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 813, 814, 815, 816, 817,
	818, 744, 748, 747, 745, 746, 742, 743, 696, 198,
	219, 361, 0, 445, 284, 578, 546, 540, 205, 221,
	804, 258, 805, 0, 0, 809, 0, 0, 0, 811,
	810, 0, 812, 778, 777, 0, 0, 806, 807, 0,
	808, 0, 0, 200, 201, 208, 220, 230, 234, 241,
	257, 272, 274, 281, 294, 305, 313, 314, 317, 323,
	373, 379, 380, 381, 382, 401, 402, 403, 406, 409,
	410, 413, 415, 416, 419, 423, 427, 428, 429, 431,
	433, 435, 446, 451, 465, 466, 467, 468, 469, 472,
	473, 478, 479, 480, 481, 482, 490, 491, 496, 519,
	521, 534, 553, 559, 471, 819, 820, 821, 822, 823,
	824, 825, 826, 295, 529, 560, 527, 574, 554, 430,
	371, 0, 0, 544, 0, 374, 277, 300, 315, 0,
	545, 492, 225, 457, 286, 249, 844, 0, 210, 244,
	228, 255, 270, 273, 319, 384, 392, 421, 426, 292,
	267, 242, 450, 239, 475, 499, 500, 501, 503, 388,
	262, 425, 0, 389, 369, 509, 510, 311, 88, 508,
	0, 708, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 695, 0, 0, 0,
	266, 700, 0, 0, 0, 359, 263, 0, 0, 422,
	0, 204, 0, 477, 250, 370, 367, 516, 278, 269,
	265, 248, 312, 378, 420, 498, 414, 707, 363, 0,
	0, 487, 393, 0, 0, 0, 0, 0, 703, 704,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 246,
	320, 203, 405, 488, 282, 0, 97, 0, 0, 845,
	829, 795, 796, 833, 846, 847, 848, 849, 834, 0,
	236, 835, 836, 243, 837, 0, 794, 735, 737, 736,
	754, 755, 756, 757, 758, 759, 760, 733, 842, 850,
	851, 0, 261, 316, 268, 260, 513, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 677, 692, 0, 706, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 689, 690, 0, 0, 0,
	0, 789, 0, 691, 0, 0, 699, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 877, 878, 879, 880, 881, 882, 883, 884,
	885, 886, 887, 888, 889, 890, 891, 892, 893, 702,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 394, 253, 0, 0, 444, 788, 0, 0,
	556, 0, 0, 786, 0, 0, 0, 0, 358, 0,
	325, 199, 223, 0, 0, 404, 452, 464, 0, 0,
	0, 839, 0, 462, 418, 533, 231, 280, 449, 424,
	460, 432, 283, 0, 0, 461, 365, 518, 442, 530,
	557, 558, 259, 398, 542, 502, 551, 577, 224, 256,
	412, 495, 536, 484, 390, 514, 515, 324, 483, 291,
	202, 362, 563, 222, 470, 364, 240, 229, 520, 539,
	285, 447, 572, 211, 497, 528, 237, 474, 0, 0,
	579, 245, 494, 213, 525, 493, 386, 321, 322, 212,
	0, 448, 264, 289, 0, 0, 254, 407, 840, 841,
	252, 580, 741, 550, 218, 0, 549, 400, 517, 526,
	387, 376, 217, 524, 385, 375, 329, 749, 750, 276,
	302, 439, 368, 440, 301, 303, 396, 395, 397, 206,
	537, 0, 207, 0, 489, 538, 581, 232, 233, 235,
	0, 275, 279, 287, 290, 298, 299, 308, 360, 411,
	438, 434, 443, 0, 512, 531, 543, 555, 561, 562,
	564, 565, 566, 567, 568, 573, 571, 569, 570, 399,
	306, 485, 328, 366, 0, 0, 417, 463, 238, 535,
	486, 0, 0, 0, 0, 799, 787, 712, 803, 714,
	800, 801, 709, 710, 713, 802, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 0, 790, 698, 697, 0, 705,
	0, 731, 732, 734, 738, 739, 740, 751, 752, 753,
	761, 763, 764, 762, 765, 766, 767, 770, 771, 772,
	773, 768, 769, 774, 715, 719, 716, 717, 718, 730,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	813, 814, 815, 816, 817, 818, 744, 748, 747, 745,
	746, 742, 743, 696, 198, 219, 361, 96, 445, 284,
	578, 546, 540, 205, 221, 804, 258, 805, 0, 0,
	809, 0, 0, 0, 811, 810, 0, 812, 778, 777,
	0, 0, 806, 807, 0, 808, 0, 0, 200, 201,
	208, 220, 230, 234, 241, 257, 272, 274, 281, 294,
	305, 313, 314, 317, 323, 373, 379, 380, 381, 382,
	401, 402, 403, 406, 409, 410, 413, 415, 416, 419,
	423, 427, 428, 429, 431, 433, 435, 446, 451, 465,
	466, 467, 468, 469, 472, 473, 478, 479, 480, 481,
	482, 490, 491, 496, 519, 521, 534, 553, 559, 471,
	819, 820, 821, 822, 823, 824, 825, 826, 295, 529,
	560, 527, 574, 554, 430, 371, 0, 0, 544, 0,
	374, 277, 300, 315, 0, 545, 492, 225, 457, 286,
	249, 844, 0, 210, 244, 228, 255, 270, 273, 319,
	384, 392, 421, 426, 292, 267, 242, 450, 239, 475,
	499, 500, 501, 503, 388, 262, 425, 389, 0, 369,
	509, 510, 311, 508, 0, 708, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	695, 0, 0, 0, 266, 700, 0, 0, 0, 359,
	263, 0, 0, 422, 0, 204, 0, 477, 250, 370,
	367, 516, 278, 269, 265, 248, 312, 378, 420, 498,
	414, 707, 363, 0, 0, 487, 393, 0, 0, 0,
	0, 0, 703, 704, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 246, 320, 203, 405, 488, 282, 0,
	97, 0, 0, 845, 829, 795, 796, 833, 846, 847,
	848, 849, 834, 0, 236, 835, 836, 243, 837, 0,
	794, 735, 737, 736, 754, 755, 756, 757, 758, 759,
	760, 733, 842, 850, 851, 0, 261, 316, 268, 260,
	513, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 677, 692, 0, 706,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 689,
	690, 0, 0, 0, 0, 789, 0, 691, 0, 0,
	699, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 869, 870,
	871, 872, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 893, 702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 394, 253, 0, 0,
	444, 788, 0, 0, 556, 0, 0, 786, 0, 0,
	0, 0, 358, 0, 325, 199, 223, 0, 0, 404,
	452, 464, 0, 0, 0, 839, 0, 462, 418, 533,
	231, 280, 449, 424, 460, 432, 283, 3461, 0, 461,
	365, 518, 442, 530, 557, 558, 259, 398, 542, 502,
	551, 577, 224, 256, 412, 495, 536, 484, 390, 514,
	515, 324, 483, 291, 202, 362, 563, 222, 470, 364,
	240, 229, 520, 539, 285, 447, 572, 211, 497, 528,
	237, 474, 0, 0, 579, 245, 494, 213, 525, 493,
	386, 321, 322, 212, 0, 448, 264, 289, 0, 0,
	254, 407, 840, 841, 252, 580, 741, 550, 218, 0,
	549, 400, 517, 526, 387, 376, 217, 524, 385, 375,
	329, 749, 750, 276, 302, 439, 368, 440, 301, 303,
	396, 395, 397, 206, 537, 0, 207, 0, 489, 538,
	581, 232, 233, 235, 0, 275, 279, 287, 290, 298,
	299, 308, 360, 411, 438, 434, 443, 0, 512, 531,
	543, 555, 561, 562, 564, 565, 566, 567, 568, 573,
	571, 569, 570, 399, 306, 485, 328, 366, 0, 0,
	417, 463, 238, 535, 486, 0, 0, 0, 0, 799,
	787, 712, 803, 714, 800, 801, 709, 710, 713, 802,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 0, 790,
	698, 697, 0, 705, 0, 731, 732, 734, 738, 739,
	740, 751, 752, 753, 761, 763, 764, 762, 765, 766,
	767, 770, 771, 772, 773, 768, 769, 774, 715, 719,
	716, 717, 718, 730, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 813, 814, 815, 816, 817, 818,
	744, 748, 747, 745, 746, 742, 743, 696, 198, 219,
	361, 0, 445, 284, 578, 546, 540, 205, 221, 804,
	258, 805, 0, 0, 809, 0, 0, 0, 811, 810,
	0, 812, 778, 777, 0, 0, 806, 807, 0, 808,
	0, 0, 200, 201, 208, 220, 230, 234, 241, 257,
	272, 274, 281, 294, 305, 313, 314, 317, 323, 373,
	379, 380, 381, 382, 401, 402, 403, 406, 409, 410,
	413, 415, 416, 419, 423, 427, 428, 429, 431, 433,
	435, 446, 451, 465, 466, 467, 468, 469, 472, 473,
	478, 479, 480, 481, 482, 490, 491, 496, 519, 521,
	534, 553, 559, 471, 819, 820, 821, 822, 823, 824,
	825, 826, 295, 529, 560, 527, 574, 554, 430, 371,
	0, 0, 544, 0, 374, 277, 300, 315, 0, 545,
	492, 225, 457, 286, 249, 844, 0, 210, 244, 228,
	255, 270, 273, 319, 384, 392, 421, 426, 292, 267,
	242, 450, 239, 475, 499, 500, 501, 503, 388, 262,
	425, 389, 0, 369, 509, 510, 311, 508, 0, 708,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 695, 0, 0, 0, 266, 700,
	0, 0, 0, 359, 263, 0, 0, 422, 0, 204,
	0, 477, 250, 370, 367, 516, 278, 269, 265, 248,
	312, 378, 420, 498, 414, 707, 363, 0, 0, 487,
	393, 0, 0, 0, 0, 0, 703, 704, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 246, 320, 203,
	405, 488, 282, 0, 97, 0, 1547, 845, 829, 795,
	796, 833, 846, 847, 848, 849, 834, 0, 236, 835,
	836, 243, 837, 0, 794, 735, 737, 736, 754, 755,
	756, 757, 758, 759, 760, 733, 842, 850, 851, 0,
	261, 316, 268, 260, 513, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	677, 692, 0, 706, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 689, 690, 0, 0, 0, 0, 789,
	0, 691, 0, 0, 699, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 869, 870, 871, 872, 873, 874, 875, 876,
	877, 878, 879, 880, 881, 882, 883, 884, 885, 886,
	887, 888, 889, 890, 891, 892, 893, 702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	394, 253, 0, 0, 444, 788, 0, 0, 556, 0,
	0, 786, 0, 0, 0, 0, 358, 0, 325, 199,
	223, 0, 0, 404, 452, 464, 0, 0, 0, 839,
	0, 462, 418, 533, 231, 280, 449, 424, 460, 432,
	283, 0, 0, 461, 365, 518, 442, 530, 557, 558,
	259, 398, 542, 502, 551, 577, 224, 256, 412, 495,
	536, 484, 390, 514, 515, 324, 483, 291, 202, 362,
	563, 222, 470, 364, 240, 229, 520, 539, 285, 447,
	572, 211, 497, 528, 237, 474, 0, 0, 579, 245,
	494, 213, 525, 493, 386, 321, 322, 212, 0, 448,
	264, 289, 0, 0, 254, 407, 840, 841, 252, 580,
	741, 550, 218, 0, 549, 400, 517, 526, 387, 376,
	217, 524, 385, 375, 329, 749, 750, 276, 302, 439,
	368, 440, 301, 303, 396, 395, 397, 206, 537, 0,
	207, 0, 489, 538, 581, 232, 233, 235, 0, 275,
	279, 287, 290, 298, 299, 308, 360, 411, 438, 434,
	443, 0, 512, 531, 543, 555, 561, 562, 564, 565,
	566, 567, 568, 573, 571, 569, 570, 399, 306, 485,
	328, 366, 0, 0, 417, 463, 238, 535, 486, 0,
	0, 0, 0, 799, 787, 712, 803, 714, 800, 801,
	709, 710, 713, 802, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 0, 790, 698, 697, 0, 705, 0, 731,
	732, 734, 738, 739, 740, 751, 752, 753, 761, 763,
	764, 762, 765, 766, 767, 770, 771, 772, 773, 768,
	769, 774, 715, 719, 716, 717, 718, 730, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 813, 814,
	815, 816, 817, 818, 744, 748, 747, 745, 746, 742,
	743, 696, 198, 219, 361, 0, 445, 284, 578, 546,
	540, 205, 221, 804, 258, 805, 0, 0, 809, 0,
	0, 0, 811, 810, 0, 812, 778, 777, 0, 0,
	806, 807, 0, 808, 0, 0, 200, 201, 208, 220,
	230, 234, 241, 257, 272, 274, 281, 294, 305, 313,
	314, 317, 323, 373, 379, 380, 381, 382, 401, 402,
	403, 406, 409, 410, 413, 415, 416, 419, 423, 427,
	428, 429, 431, 433, 435, 446, 451, 465, 466, 467,
	468, 469, 472, 473, 478, 479, 480, 481, 482, 490,
	491, 496, 519, 521, 534, 553, 559, 471, 819, 820,
	821, 822, 823, 824, 825, 826, 295, 529, 560, 527,
	574, 554, 430, 371, 0, 0, 544, 0, 374, 277,
	300, 315, 0, 545, 492, 225, 457, 286, 249, 844,
	0, 210, 244, 228, 255, 270, 273, 319, 384, 392,
	421, 426, 292, 267, 242, 450, 239, 475, 499, 500,
	501, 503, 388, 262, 425, 389, 0, 369, 509, 510,
	311, 508, 0, 708, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 695, 0,
	0, 0, 266, 700, 0, 0, 0, 359, 263, 0,
	0, 422, 0, 204, 0, 477, 250, 370, 367, 516,
	278, 269, 265, 248, 312, 378, 420, 498, 414, 707,
	363, 0, 0, 487, 393, 0, 0, 0, 0, 0,
	703, 704, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 246, 320, 203, 405, 488, 282, 0, 97, 0,
	0, 845, 829, 795, 796, 833, 846, 847, 848, 849,
	834, 0, 236, 835, 836, 243, 837, 0, 794, 735,
	737, 736, 754, 755, 756, 757, 758, 759, 760, 733,
	842, 850, 851, 0, 261, 316, 268, 260, 513, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 677, 692, 0, 706, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 689, 690, 934,
	0, 0, 0, 789, 0, 691, 0, 0, 699, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 867, 868, 869, 870, 871, 872,
	873, 874, 875, 876, 877, 878, 879, 880, 881, 882,
	883, 884, 885, 886, 887, 888, 889, 890, 891, 892,
	893, 702, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 394, 253, 0, 0, 444, 788,
	0, 0, 556, 0, 0, 786, 0, 0, 0, 0,
	358, 0, 325, 199, 223, 0, 0, 404, 452, 464,
	0, 0, 0, 839, 0, 462, 418, 533, 231, 280,
	449, 424, 460, 432, 283, 0, 0, 461, 365, 518,
	442, 530, 557, 558, 259, 398, 542, 502, 551, 577,
	224, 256, 412, 495, 536, 484, 390, 514, 515, 324,
	483, 291, 202, 362, 563, 222, 470, 364, 240, 229,
	520, 539, 285, 447, 572, 211, 497, 528, 237, 474,
	0, 0, 579, 245, 494, 213, 525, 493, 386, 321,
	322, 212, 0, 448, 264, 289, 0, 0, 254, 407,
	840, 841, 252, 580, 741, 550, 218, 0, 549, 400,
	517, 526, 387, 376, 217, 524, 385, 375, 329, 749,
	750, 276, 302, 439, 368, 440, 301, 303, 396, 395,
	397, 206, 537, 0, 207, 0, 489, 538, 581, 232,
	233, 235, 0, 275, 279, 287, 290, 298, 299, 308,
	360, 411, 438, 434, 443, 0, 512, 531, 543, 555,
	561, 562, 564, 565, 566, 567, 568, 573, 571, 569,
	570, 399, 306, 485, 328, 366, 0, 0, 417, 463,
	238, 535, 486, 0, 0, 0, 0, 799, 787, 712,
	803, 714, 800, 801, 709, 710, 713, 802, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 0, 790, 698, 697,
	0, 705, 0, 731, 732, 734, 738, 739, 740, 751,
	752, 753, 761, 763, 764, 762, 765, 766, 767, 770,
	771, 772, 773, 768, 769, 774, 715, 719, 716, 717,
	718, 730, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 813, 814, 815, 816, 817, 818, 744, 748,
	747, 745, 746, 742, 743, 696, 198, 219, 361, 0,
	445, 284, 578, 546, 540, 205, 221, 804, 258, 805,
	0, 0, 809, 0, 0, 0, 811, 810, 0, 812,
	778, 777, 0, 0, 806, 807, 0, 808, 0, 0,
	200, 201, 208, 220, 230, 234, 241, 257, 272, 274,
	281, 294, 305, 313, 314, 317, 323, 373, 379, 380,
	381, 382, 401, 402, 403, 406, 409, 410, 413, 415,
	416, 419, 423, 427, 428, 429, 431, 433, 435, 446,
	451, 465, 466, 467, 468, 469, 472, 473, 478, 479,
	480, 481, 482, 490, 491, 496, 519, 521, 534, 553,
	559, 471, 819, 820, 821, 822, 823, 824, 825, 826,
	295, 529, 560, 527, 574, 554, 430, 371, 0, 0,
	544, 0, 374, 277, 300, 315, 0, 545, 492, 225,
	457, 286, 249, 844, 0, 210, 244, 228, 255, 270,
	273, 319, 384, 392, 421, 426, 292, 267, 242, 450,
	239, 475, 499, 500, 501, 503, 388, 262, 425, 389,
	0, 369, 509, 510, 311, 508, 0, 708, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 695, 0, 0, 0, 266, 700, 0, 0,
	0, 359, 263, 0, 0, 422, 0, 204, 0, 477,
	250, 370, 367, 516, 278, 269, 265, 248, 312, 378,
	420, 498, 414, 707, 363, 0, 0, 487, 393, 0,
	0, 0, 0, 0, 703, 704, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 246, 320, 203, 405, 488,
	282, 0, 97, 0, 0, 845, 829, 795, 796, 833,
	846, 847, 848, 849, 834, 0, 236, 835, 836, 243,
	837, 0, 794, 735, 737, 736, 754, 755, 756, 757,
	758, 759, 760, 733, 842, 850, 851, 0, 261, 316,
	268, 260, 513, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 677, 692,
	0, 706, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 689, 690, 0, 0, 0, 0, 789, 0, 691,
	0, 0, 699, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 865, 866, 867, 868,
	869, 870, 871, 872, 873, 874, 875, 876, 877, 878,
	879, 880, 881, 882, 883, 884, 885, 886, 887, 888,
	889, 890, 891, 892, 893, 702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 394, 253,
	0, 0, 444, 788, 0, 0, 556, 0, 0, 786,
	0, 0, 0, 0, 358, 0, 325, 199, 223, 0,
	0, 404, 452, 464, 0, 0, 0, 839, 0, 462,
	418, 533, 231, 280, 449, 424, 460, 432, 283, 0,
	0, 461, 365, 518, 442, 530, 557, 558, 259, 398,
	542, 502, 551, 577, 224, 256, 412, 495, 536, 484,
	390, 514, 515, 324, 483, 291, 202, 362, 563, 222,
	470, 364, 240, 229, 520, 539, 285, 447, 572, 211,
	497, 528, 237, 474, 0, 0, 579, 245, 494, 213,
	525, 493, 386, 321, 322, 212, 0, 448, 264, 289,
	0, 0, 254, 407, 840, 841, 252, 580, 741, 550,
	218, 0, 549, 400, 517, 526, 387, 376, 217, 524,
	385, 375, 329, 749, 750, 276, 302, 439, 368, 440,
	301, 303, 396, 395, 397, 206, 537, 0, 207, 0,
	489, 538, 581, 232, 233, 235, 0, 275, 279, 287,
	290, 298, 299, 308, 360, 411, 438, 434, 443, 0,
	512, 531, 543, 555, 561, 562, 564, 565, 566, 567,
	568, 573, 571, 569, 570, 399, 306, 485, 328, 366,
	0, 0, 417, 463, 238, 535, 486, 0, 0, 0,
	0, 799, 787, 712, 803, 714, 800, 801, 709, 710,
	713, 802, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	0, 790, 698, 697, 0, 705, 0, 731, 732, 734,
	738, 739, 740, 751, 752, 753, 761, 763, 764, 762,
	765, 766, 767, 770, 771, 772, 773, 768, 769, 774,
	715, 719, 716, 717, 718, 730, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 813, 814, 815, 816,
	817, 818, 744, 748, 747, 745, 746, 742, 743, 696,
	198, 219, 361, 0, 445, 284, 578, 546, 540, 205,
	221, 804, 258, 805, 0, 0, 809, 0, 0, 0,
	811, 810, 0, 812, 778, 777, 0, 0, 806, 807,
	0, 808, 0, 0, 200, 201, 208, 220, 230, 234,
	241, 257, 272, 274, 281, 294, 305, 313, 314, 317,
	323, 373, 379, 380, 381, 382, 401, 402, 403, 406,
	409, 410, 413, 415, 416, 419, 423, 427, 428, 429,
	431, 433, 435, 446, 451, 465, 466, 467, 468, 469,
	472, 473, 478, 479, 480, 481, 482, 490, 491, 496,
	519, 521, 534, 553, 559, 471, 819, 820, 821, 822,
	823, 824, 825, 826, 295, 529, 560, 527, 574, 554,
	430, 371, 0, 0, 544, 0, 374, 277, 300, 315,
	0, 545, 492, 225, 457, 286, 249, 844, 0, 210,
	244, 228, 255, 270, 273, 319, 384, 392, 421, 426,
	292, 267, 242, 450, 239, 475, 499, 500, 501, 503,
	388, 262, 425, 389, 0, 369, 509, 510, 311, 508,
	0, 708, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 695, 0, 0, 0,
	266, 700, 0, 0, 0, 359, 263, 0, 0, 422,
	0, 204, 0, 477, 250, 370, 367, 516, 278, 269,
	265, 248, 312, 378, 420, 498, 414, 707, 363, 0,
	0, 487, 393, 0, 0, 0, 0, 0, 703, 704,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 246,
	320, 203, 405, 488, 282, 0, 97, 0, 0, 845,
	829, 795, 796, 833, 846, 847, 848, 849, 834, 0,
	236, 835, 836, 243, 837, 0, 794, 735, 737, 736,
	754, 755, 756, 757, 758, 759, 760, 733, 842, 850,
	851, 0, 261, 316, 268, 260, 513, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 692, 0, 706, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 689, 690, 0, 0, 0,
	0, 789, 0, 691, 0, 0, 699, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 877, 878, 879, 880, 881, 882, 883, 884,
	885, 886, 887, 888, 889, 890, 891, 892, 893, 702,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 394, 253, 0, 0, 444, 788, 0, 0,
	556, 0, 0, 786, 0, 0, 0, 0, 358, 0,
	325, 199, 223, 0, 0, 404, 452, 464, 0, 0,
	0, 839, 0, 462, 418, 533, 231, 280, 449, 424,
	460, 432, 283, 0, 0, 461, 365, 518, 442, 530,
	557, 558, 259, 398, 542, 502, 551, 577, 224, 256,
	412, 495, 536, 484, 390, 514, 515, 324, 483, 291,
	202, 362, 563, 222, 470, 364, 240, 229, 520, 539,
	285, 447, 572, 211, 497, 528, 237, 474, 0, 0,
	579, 245, 494, 213, 525, 493, 386, 321, 322, 212,
	0, 448, 264, 289, 0, 0, 254, 407, 840, 841,
	252, 580, 741, 550, 218, 0, 549, 400, 517, 526,
	387, 376, 217, 524, 385, 375, 329, 749, 750, 276,
	302, 439, 368, 440, 301, 303, 396, 395, 397, 206,
	537, 0, 207, 0, 489, 538, 581, 232, 233, 235,
	0, 275, 279, 287, 290, 298, 299, 308, 360, 411,
	438, 434, 443, 0, 512, 531, 543, 555, 561, 562,
	564, 565, 566, 567, 568, 573, 571, 569, 570, 399,
	306, 485, 328, 366, 0, 0, 417, 463, 238, 535,
	486, 0, 0, 0, 0, 799, 787, 712, 803, 714,
	800, 801, 709, 710, 713, 802, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 0, 790, 698, 697, 0, 705,
	0, 731, 732, 734, 738, 739, 740, 751, 752, 753,
	761, 763, 764, 762, 765, 766, 767, 770, 771, 772,
	773, 768, 769, 774, 715, 719, 716, 717, 718, 730,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	813, 814, 815, 816, 817, 818, 744, 748, 747, 745,
	746, 742, 743, 696, 198, 219, 361, 0, 445, 284,
	578, 546, 540, 205, 221, 804, 258, 805, 0, 0,
	809, 0, 0, 0, 811, 810, 0, 812, 778, 777,
	0, 0, 806, 807, 0, 808, 0, 0, 200, 201,
	208, 220, 230, 234, 241, 257, 272, 274, 281, 294,
	305, 313, 314, 317, 323, 373, 379, 380, 381, 382,
	401, 402, 403, 406, 409, 410, 413, 415, 416, 419,
	423, 427, 428, 429, 431, 433, 435, 446, 451, 465,
	466, 467, 468, 469, 472, 473, 478, 479, 480, 481,
	482, 490, 491, 496, 519, 521, 534, 553, 559, 471,
	819, 820, 821, 822, 823, 824, 825, 826, 295, 529,
	560, 527, 574, 554, 430, 371, 0, 0, 544, 0,
	374, 277, 300, 315, 0, 545, 492, 225, 457, 286,
	249, 844, 0, 210, 244, 228, 255, 270, 273, 319,
	384, 392, 421, 426, 292, 267, 242, 450, 239, 475,
	499, 500, 501, 503, 388, 262, 425, 389, 0, 369,
	509, 510, 311, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 359,
	263, 0, 0, 422, 0, 204, 0, 477, 250, 370,
	367, 516, 278, 269, 265, 248, 312, 378, 420, 498,
	414, 0, 363, 0, 0, 487, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 246, 320, 203, 405, 488, 282, 0,
	0, 0, 0, 0, 655, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 243, 0, 0,
	0, 344, 353, 352, 333, 334, 336, 338, 343, 350,
	356, 0, 0, 0, 0, 0, 261, 316, 268, 260,
	513, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 1363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1372, 1371, 1373, 1374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 394, 253, 0, 0,
	444, 0, 0, 0, 556, 0, 0, 0, 0, 0,
	0, 0, 358, 0, 325, 199, 223, 0, 0, 404,
	452, 464, 0, 0, 0, 251, 0, 462, 418, 533,
	231, 280, 449, 424, 460, 432, 283, 0, 0, 461,
	365, 518, 442, 530, 557, 558, 259, 398, 542, 502,
	551, 577, 224, 256, 412, 495, 536, 484, 390, 514,
	515, 324, 483, 291, 202, 362, 563, 222, 470, 364,
	240, 229, 520, 539, 285, 447, 572, 211, 497, 528,
	237, 474, 0, 0, 579, 245, 494, 213, 525, 493,
	386, 321, 322, 212, 0, 448, 264, 289, 0, 0,
	254, 407, 522, 523, 252, 580, 226, 550, 218, 0,
	549, 400, 517, 526, 387, 376, 217, 524, 385, 375,
	329, 348, 349, 276, 302, 439, 368, 440, 301, 303,
	396, 395, 397, 206, 537, 0, 207, 0, 489, 538,
	581, 232, 233, 235, 0, 275, 279, 287, 290, 298,
	299, 308, 360, 411, 438, 434, 443, 0, 512, 531,
	543, 555, 561, 562, 564, 565, 566, 567, 568, 573,
	571, 569, 570, 399, 306, 485, 328, 366, 0, 0,
	417, 463, 238, 535, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 377, 476,
	532, 330, 342, 345, 335, 354, 0, 355, 331, 332,
	337, 339, 340, 341, 346, 347, 351, 357, 247, 209,
	383, 391, 511, 307, 214, 215, 216, 504, 505, 506,
	507, 547, 548, 552, 453, 454, 455, 456, 288, 541,
	304, 459, 458, 326, 327, 372, 441, 0, 198, 219,
	361, 0, 445, 284, 578, 546, 540, 205, 221, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 201, 208, 220, 230, 234, 241, 257,
	272, 274, 281, 294, 305, 313, 314, 317, 323, 373,
	379, 380, 381, 382, 401, 402, 403, 406, 409, 410,
	413, 415, 416, 419, 423, 427, 428, 429, 431, 433,
	435, 446, 451, 465, 466, 467, 468, 469, 472, 473,
	478, 479, 480, 481, 482, 490, 491, 496, 519, 521,
	534, 553, 559, 471, 296, 297, 436, 437, 309, 310,
	575, 576, 295, 529, 560, 527, 574, 554, 430, 371,
	0, 0, 544, 0, 374, 277, 300, 315, 0, 545,
	492, 225, 457, 286, 249, 0, 0, 210, 244, 228,
	255, 270, 273, 319, 384, 392, 421, 426, 292, 267,
	242, 450, 239, 475, 499, 500, 501, 503, 388, 262,
	425, 389, 0, 369, 509, 510, 311, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 359, 263, 0, 0, 422, 0, 204,
	0, 477, 250, 370, 367, 516, 278, 269, 265, 248,
	312, 378, 420, 498, 414, 0, 363, 0, 0, 487,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 246, 320, 203,
	405, 488, 282, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 243, 0, 0, 0, 344, 353, 352, 333, 334,
	336, 338, 343, 350, 356, 0, 0, 0, 0, 0,
	261, 316, 268, 260, 513, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 1005, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	394, 253, 0, 0, 444, 0, 0, 1004, 556, 0,
	0, 0, 0, 0, 1001, 1002, 358, 962, 325, 199,
	223, 995, 999, 404, 452, 464, 0, 0, 0, 251,
	0, 462, 418, 533, 231, 280, 449, 424, 460, 432,
	283, 0, 0, 461, 365, 518, 442, 530, 557, 558,
	259, 398, 542, 502, 551, 577, 224, 256, 412, 495,
	536, 484, 390, 514, 515, 324, 483, 291, 202, 362,
	563, 222, 470, 364, 240, 229, 520, 539, 285, 447,
	572, 211, 497, 528, 237, 474, 0, 0, 579, 245,
	494, 213, 525, 493, 386, 321, 322, 212, 0, 448,
	264, 289, 0, 0, 254, 407, 522, 523, 252, 580,
	226, 550, 218, 0, 549, 400, 517, 526, 387, 376,
	217, 524, 385, 375, 329, 348, 349, 276, 302, 439,
	368, 440, 301, 303, 396, 395, 397, 206, 537, 0,
	207, 0, 489, 538, 581, 232, 233, 235, 0, 275,
	279, 287, 290, 298, 299, 308, 360, 411, 438, 434,
	443, 0, 512, 531, 543, 555, 561, 562, 564, 565,
	566, 567, 568, 573, 571, 569, 570, 399, 306, 485,
	328, 366, 0, 0, 417, 463, 238, 535, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 377, 476, 532, 330, 342, 345, 335, 354,
	0, 355, 331, 332, 337, 339, 340, 341, 346, 347,
	351, 357, 247, 209, 383, 391, 511, 307, 214, 215,
	216, 504, 505, 506, 507, 547, 548, 552, 453, 454,
	455, 456, 288, 541, 304, 459, 458, 326, 327, 372,
	441, 0, 198, 219, 361, 0, 445, 284, 578, 546,
	540, 205, 221, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 201, 208, 220,
	230, 234, 241, 257, 272, 274, 281, 294, 305, 313,
	314, 317, 323, 373, 379, 380, 381, 382, 401, 402,
	403, 406, 409, 410, 413, 415, 416, 419, 423, 427,
	428, 429, 431, 433, 435, 446, 451, 465, 466, 467,
	468, 469, 472, 473, 478, 479, 480, 481, 482, 490,
	491, 496, 519, 521, 534, 553, 559, 471, 296, 297,
	436, 437, 309, 310, 575, 576, 295, 529, 560, 527,
	574, 554, 430, 371, 0, 0, 544, 0, 374, 277,
	300, 315, 0, 545, 492, 225, 457, 286, 249, 0,
	0, 210, 244, 228, 255, 270, 273, 319, 384, 392,
	421, 426, 292, 267, 242, 450, 239, 475, 499, 500,
	501, 503, 388, 262, 425, 389, 0, 369, 509, 510,
	311, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 359, 263, 0,
	0, 422, 0, 204, 0, 477, 250, 370, 367, 516,
	278, 269, 265, 248, 312, 378, 420, 498, 414, 0,
	363, 0, 0, 487, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 246, 320, 203, 405, 488, 282, 0, 0, 0,
	0, 1510, 829, 0, 0, 1507, 0, 0, 0, 0,
	1505, 0, 236, 1506, 1504, 243, 1509, 0, 794, 344,
	353, 352, 333, 334, 336, 338, 343, 350, 356, 0,
	0, 0, 0, 0, 261, 316, 268, 260, 513, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 394, 253, 0, 0, 444, 0,
	0, 0, 556, 0, 0, 0, 0, 0, 0, 0,
	358, 0, 325, 199, 223, 0, 0, 404, 452, 464,
	0, 0, 0, 251, 0, 462, 418, 533, 231, 280,
	449, 424, 460, 432, 283, 0, 0, 461, 365, 518,
	442, 530, 557, 558, 259, 398, 542, 502, 551, 577,
	224, 256, 412, 495, 536, 484, 390, 514, 515, 324,
	483, 291, 202, 362, 563, 222, 470, 364, 240, 229,
	520, 539, 285, 447, 572, 211, 497, 528, 237, 474,
	0, 0, 579, 245, 494, 213, 525, 493, 386, 321,
	322, 212, 0, 448, 264, 289, 0, 0, 254, 407,
	522, 523, 252, 580, 226, 550, 218, 0, 549, 400,
	517, 526, 387, 376, 217, 524, 385, 375, 329, 348,
	349, 276, 302, 439, 368, 440, 301, 303, 396, 395,
	397, 206, 537, 0, 207, 0, 489, 538, 581, 232,
	233, 235, 0, 275, 279, 287, 290, 298, 299, 308,
	360, 411, 438, 434, 443, 0, 512, 531, 543, 555,
	561, 562, 564, 565, 566, 567, 568, 573, 571, 569,
	570, 399, 306, 485, 328, 366, 0, 0, 417, 463,
	238, 535, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 377, 476, 532, 330,
	342, 345, 335, 354, 0, 355, 331, 332, 337, 339,
	340, 341, 346, 347, 351, 357, 247, 209, 383, 391,
	511, 307, 214, 215, 216, 504, 505, 506, 507, 547,
	548, 552, 453, 454, 455, 456, 288, 541, 304, 459,
	458, 326, 327, 372, 441, 0, 198, 219, 361, 0,
	445, 284, 578, 546, 540, 205, 221, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 201, 208, 220, 230, 234, 241, 257, 272, 274,
	281, 294, 305, 313, 314, 317, 323, 373, 379, 380,
	381, 382, 401, 402, 403, 406, 409, 410, 413, 415,
	416, 419, 423, 427, 428, 429, 431, 433, 435, 446,
	451, 465, 466, 467, 468, 469, 472, 473, 478, 479,
	480, 481, 482, 490, 491, 496, 519, 521, 534, 553,
	559, 471, 296, 297, 436, 437, 309, 310, 575, 576,
	295, 529, 560, 527, 574, 554, 430, 371, 0, 0,
	544, 0, 374, 277, 300, 315, 0, 545, 492, 225,
	457, 286, 249, 0, 0, 210, 244, 228, 255, 270,
	273, 319, 384, 392, 421, 426, 292, 267, 242, 450,
	239, 475, 499, 500, 501, 503, 388, 262, 425, 0,
	389, 369, 509, 510, 311, 88, 508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 359, 263, 0, 0, 422, 0, 204, 0,
	477, 250, 370, 367, 516, 278, 269, 265, 248, 312,
	378, 420, 498, 414, 0, 363, 0, 0, 487, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 246, 320, 203, 405,
	488, 282, 0, 97, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	243, 0, 0, 0, 344, 353, 352, 333, 334, 336,
	338, 343, 350, 356, 0, 0, 0, 0, 0, 261,
	316, 268, 260, 513, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 394,
	253, 0, 0, 444, 0, 0, 0, 556, 0, 0,
	0, 0, 0, 0, 0, 358, 0, 325, 199, 223,
	0, 0, 404, 452, 464, 0, 0, 0, 251, 0,
	462, 418, 533, 231, 280, 449, 424, 460, 432, 283,
	0, 0, 461, 365, 518, 442, 530, 557, 558, 259,
	398, 542, 502, 551, 577, 224, 256, 412, 495, 536,
	484, 390, 514, 515, 324, 483, 291, 202, 362, 563,
	222, 470, 364, 240, 229, 520, 539, 285, 447, 572,
	211, 497, 528, 237, 474, 0, 0, 579, 245, 494,
	213, 525, 493, 386, 321, 322, 212, 0, 448, 264,
	289, 0, 0, 254, 407, 522, 523, 252, 580, 226,
	550, 218, 0, 549, 400, 517, 526, 387, 376, 217,
	524, 385, 375, 329, 348, 349, 276, 302, 439, 368,
	440, 301, 303, 396, 395, 397, 206, 537, 0, 207,
	0, 489, 538, 581, 232, 233, 235, 0, 275, 279,
	287, 290, 298, 299, 308, 360, 411, 438, 434, 443,
	0, 512, 531, 543, 555, 561, 562, 564, 565, 566,
	567, 568, 573, 571, 569, 570, 399, 306, 485, 328,
	366, 0, 0, 417, 463, 238, 535, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	600, 377, 476, 532, 330, 342, 345, 335, 354, 0,
	355, 331, 332, 337, 339, 340, 341, 346, 347, 351,
	357, 247, 209, 383, 391, 511, 307, 214, 215, 216,
	504, 505, 506, 507, 547, 548, 552, 453, 454, 455,
	456, 288, 541, 304, 459, 458, 326, 327, 372, 441,
	0, 198, 219, 361, 96, 445, 284, 578, 546, 540,
	205, 221, 0, 258, 0, 0, 0, 0, 0, 0,
	2130, 0, 0, 2129, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 201, 208, 220, 230,
	234, 241, 257, 272, 274, 281, 294, 305, 313, 314,
	317, 323, 373, 379, 380, 381, 382, 401, 402, 403,
	406, 409, 410, 413, 415, 416, 419, 423, 427, 428,
	429, 431, 433, 435, 446, 451, 465, 466, 467, 468,
	469, 472, 473, 478, 479, 480, 481, 482, 490, 491,
	496, 519, 521, 534, 553, 559, 471, 296, 297, 436,
	437, 309, 310, 575, 576, 295, 529, 560, 527, 574,
	554, 430, 371, 0, 0, 544, 0, 374, 277, 300,
	315, 0, 545, 492, 225, 457, 286, 249, 0, 0,
	210, 244, 228, 255, 270, 273, 319, 384, 392, 421,
	426, 292, 267, 242, 450, 239, 475, 499, 500, 501,
	503, 388, 262, 425, 1566, 0, 369, 509, 510, 311,
	508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 1568, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 359, 263, 0, 0,
	422, 0, 204, 0, 477, 250, 370, 367, 516, 278,
	269, 265, 248, 312, 378, 420, 498, 414, 0, 363,
	0, 0, 487, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	246, 320, 203, 405, 488, 282, 0, 0, 0, 0,
	1570, 655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 243, 0, 0, 0, 344, 353,
	352, 333, 334, 336, 338, 343, 350, 356, 0, 0,
	0, 0, 0, 261, 316, 268, 260, 513, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 1344,
	0, 1345, 1346, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 394, 253, 0, 0, 444, 0, 0,
	0, 556, 0, 0, 0, 0, 0, 0, 0, 358,
	0, 325, 199, 223, 0, 0, 404, 452, 464, 0,
	0, 0, 251, 0, 462, 418, 533, 231, 280, 449,
	424, 460, 432, 283, 0, 0, 461, 365, 518, 442,
	530, 557, 558, 259, 398, 542, 502, 551, 577, 224,
	256, 412, 495, 536, 484, 390, 514, 515, 324, 483,
	291, 202, 362, 563, 222, 470, 364, 240, 229, 520,
	539, 285, 447, 572, 211, 497, 528, 237, 474, 0,
	0, 579, 245, 494, 213, 525, 493, 386, 321, 322,
	212, 0, 448, 264, 289, 0, 0, 254, 407, 522,
	523, 252, 580, 226, 550, 218, 0, 549, 400, 517,
	526, 387, 376, 217, 524, 385, 375, 329, 348, 349,
	276, 302, 439, 368, 440, 301, 303, 396, 395, 397,
	206, 537, 0, 207, 0, 489, 538, 581, 232, 233,
	235, 0, 275, 279, 287, 290, 298, 299, 308, 360,
	411, 438, 434, 443, 0, 512, 531, 543, 555, 561,
	562, 564, 565, 566, 567, 568, 573, 571, 569, 570,
	399, 306, 485, 328, 366, 0, 0, 417, 463, 238,
	535, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 377, 476, 532, 330, 342,
	345, 335, 354, 0, 355, 331, 332, 337, 339, 340,
	341, 346, 347, 351, 357, 247, 209, 383, 391, 511,
	307, 214, 215, 216, 504, 505, 506, 507, 547, 548,
	552, 453, 454, 455, 456, 288, 541, 304, 459, 458,
	326, 327, 372, 441, 0, 198, 219, 361, 0, 445,
	284, 578, 546, 540, 205, 221, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	201, 208, 220, 230, 234, 241, 257, 272, 274, 281,
	294, 305, 313, 314, 317, 323, 373, 379, 380, 381,
	382, 401, 402, 403, 406, 409, 410, 413, 415, 416,
	419, 423, 427, 428, 429, 431, 433, 435, 446, 451,
	465, 466, 467, 468, 469, 472, 473, 478, 479, 480,
	481, 482, 490, 491, 496, 519, 521, 534, 553, 559,
	471, 296, 297, 436, 437, 309, 310, 575, 576, 295,
	529, 560, 527, 574, 554, 430, 371, 0, 0, 544,
	0, 374, 277, 300, 315, 0, 545, 492, 225, 457,
	286, 249, 0, 0, 210, 244, 228, 255, 270, 273,
	319, 384, 392, 421, 426, 292, 267, 242, 450, 239,
	475, 499, 500, 501, 503, 388, 262, 425, 0, 389,
	369, 509, 510, 311, 88, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 359, 263, 0, 0, 422, 0, 204, 0, 477,
	250, 370, 367, 516, 278, 269, 265, 248, 312, 378,
	420, 498, 414, 0, 363, 0, 0, 487, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 246, 320, 203, 405, 488,
	282, 0, 97, 0, 1547, 0, 655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 243,
	0, 0, 0, 344, 353, 352, 333, 334, 336, 338,
	343, 350, 356, 0, 0, 0, 0, 0, 261, 316,
	268, 260, 513, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 394, 253,
	0, 0, 444, 0, 0, 0, 556, 0, 0, 0,
	0, 0, 0, 0, 358, 0, 325, 199, 223, 0,
	0, 404, 452, 464, 0, 0, 0, 251, 0, 462,
	418, 533, 231, 280, 449, 424, 460, 432, 283, 0,
	0, 461, 365, 518, 442, 530, 557, 558, 259, 398,
	542, 502, 551, 577, 224, 256, 412, 495, 536, 484,
	390, 514, 515, 324, 483, 291, 202, 362, 563, 222,
	470, 364, 240, 229, 520, 539, 285, 447, 572, 211,
	497, 528, 237, 474, 0, 0, 579, 245, 494, 213,
	525, 493, 386, 321, 322, 212, 0, 448, 264, 289,
	0, 0, 254, 407, 522, 523, 252, 580, 226, 550,
	218, 0, 549, 400, 517, 526, 387, 376, 217, 524,
	385, 375, 329, 348, 349, 276, 302, 439, 368, 440,
	301, 303, 396, 395, 397, 206, 537, 0, 207, 0,
	489, 538, 581, 232, 233, 235, 0, 275, 279, 287,
	290, 298, 299, 308, 360, 411, 438, 434, 443, 0,
	512, 531, 543, 555, 561, 562, 564, 565, 566, 567,
	568, 573, 571, 569, 570, 399, 306, 485, 328, 366,
	0, 0, 417, 463, 238, 535, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	377, 476, 532, 330, 342, 345, 335, 354, 0, 355,
	331, 332, 337, 339, 340, 341, 346, 347, 351, 357,
	247, 209, 383, 391, 511, 307, 214, 215, 216, 504,
	505, 506, 507, 547, 548, 552, 453, 454, 455, 456,
	288, 541, 304, 459, 458, 326, 327, 372, 441, 0,
	198, 219, 361, 96, 445, 284, 578, 546, 540, 205,
	221, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 201, 208, 220, 230, 234,
	241, 257, 272, 274, 281, 294, 305, 313, 314, 317,
	323, 373, 379, 380, 381, 382, 401, 402, 403, 406,
	409, 410, 413, 415, 416, 419, 423, 427, 428, 429,
	431, 433, 435, 446, 451, 465, 466, 467, 468, 469,
	472, 473, 478, 479, 480, 481, 482, 490, 491, 496,
	519, 521, 534, 553, 559, 471, 296, 297, 436, 437,
	309, 310, 575, 576, 295, 529, 560, 527, 574, 554,
	430, 371, 0, 0, 544, 0, 374, 277, 300, 315,
	0, 545, 492, 225, 457, 286, 249, 0, 0, 210,
	244, 228, 255, 270, 273, 319, 384, 392, 421, 426,
	292, 267, 242, 450, 239, 475, 499, 500, 501, 503,
	388, 262, 425, 389, 0, 369, 509, 510, 311, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 359, 263, 0, 0, 422,
	0, 204, 0, 477, 250, 370, 367, 516, 278, 269,
	265, 248, 312, 378, 420, 498, 414, 0, 363, 0,
	0, 487, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 246,
	320, 203, 405, 488, 282, 0, 97, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 243, 0, 0, 0, 344, 353, 352,
	333, 334, 336, 338, 343, 350, 356, 0, 0, 0,
	0, 0, 261, 316, 268, 260, 513, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 394, 253, 0, 0, 444, 0, 0, 0,
	556, 0, 0, 0, 0, 0, 0, 0, 358, 0,
	325, 199, 223, 0, 0, 404, 452, 464, 0, 0,
	0, 251, 0, 462, 418, 533, 231, 280, 449, 424,
	460, 432, 283, 0, 0, 461, 365, 518, 442, 530,
	557, 558, 259, 398, 542, 502, 551, 577, 224, 256,
	412, 495, 536, 484, 390, 514, 515, 324, 483, 291,
	202, 362, 563, 222, 470, 364, 240, 229, 520, 539,
	285, 447, 572, 211, 497, 528, 237, 474, 0, 0,
	579, 245, 494, 213, 525, 493, 386, 321, 322, 212,
	0, 448, 264, 289, 0, 0, 254, 407, 522, 523,
	252, 580, 226, 550, 218, 0, 549, 400, 517, 526,
	387, 376, 217, 524, 385, 375, 329, 348, 349, 276,
	302, 439, 368, 440, 301, 303, 396, 395, 397, 206,
	537, 0, 207, 0, 489, 538, 581, 232, 233, 235,
	0, 275, 279, 287, 290, 298, 299, 308, 360, 411,
	438, 434, 443, 0, 512, 531, 543, 555, 561, 562,
	564, 565, 566, 567, 568, 573, 571, 569, 570, 399,
	306, 485, 328, 366, 0, 0, 417, 463, 238, 535,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 377, 476, 532, 330, 342, 345,
	335, 354, 0, 355, 331, 332, 337, 339, 340, 341,
	346, 347, 351, 357, 247, 209, 383, 391, 511, 307,
	214, 215, 216, 504, 505, 506, 507, 547, 548, 552,
	453, 454, 455, 456, 288, 541, 304, 459, 458, 326,
	327, 372, 441, 0, 198, 219, 361, 0, 445, 284,
	578, 546, 540, 205, 221, 0, 258, 0, 0, 0,
	0, 0, 0, 2130, 0, 0, 2129, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 201,
	208, 220, 230, 234, 241, 257, 272, 274, 281, 294,
	305, 313, 314, 317, 323, 373, 379, 380, 381, 382,
	401, 402, 403, 406, 409, 410, 413, 415, 416, 419,
	423, 427, 428, 429, 431, 433, 435, 446, 451, 465,
	466, 467, 468, 469, 472, 473, 478, 479, 480, 481,
	482, 490, 491, 496, 519, 521, 534, 553, 559, 471,
	296, 297, 436, 437, 309, 310, 575, 576, 295, 529,
	560, 527, 574, 554, 430, 371, 0, 0, 544, 0,
	374, 277, 300, 315, 0, 545, 492, 225, 457, 286,
	249, 0, 0, 210, 244, 228, 255, 270, 273, 319,
	384, 392, 421, 426, 292, 267, 242, 450, 239, 475,
	499, 500, 501, 503, 388, 262, 425, 389, 0, 369,
	509, 510, 311, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 2080,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 359,
	263, 0, 0, 422, 0, 204, 0, 477, 250, 370,
	367, 516, 278, 269, 265, 248, 312, 378, 420, 498,
	414, 0, 363, 0, 0, 487, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 246, 320, 203, 405, 488, 282, 0,
	0, 0, 0, 1749, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 243, 0, 0,
	0, 344, 353, 352, 333, 334, 336, 338, 343, 350,
	356, 0, 0, 0, 0, 0, 261, 316, 268, 260,
	513, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 394, 253, 0, 0,
	444, 0, 0, 0, 556, 0, 0, 0, 0, 0,
	0, 0, 358, 0, 325, 199, 223, 0, 0, 404,
	452, 464, 0, 0, 0, 251, 0, 462, 418, 533,
	231, 280, 449, 424, 460, 432, 283, 0, 2078, 461,
	365, 518, 442, 530, 557, 558, 259, 398, 542, 502,
	551, 577, 224, 256, 412, 495, 536, 484, 390, 514,
	515, 324, 483, 291, 202, 362, 563, 222, 470, 364,
	240, 229, 520, 539, 285, 447, 572, 211, 497, 528,
	237, 474, 0, 0, 579, 245, 494, 213, 525, 493,
	386, 321, 322, 212, 0, 448, 264, 289, 0, 0,
	254, 407, 522, 523, 252, 580, 226, 550, 218, 0,
	549, 400, 517, 526, 387, 376, 217, 524, 385, 375,
	329, 348, 349, 276, 302, 439, 368, 440, 301, 303,
	396, 395, 397, 206, 537, 0, 207, 0, 489, 538,
	581, 232, 233, 235, 0, 275, 279, 287, 290, 298,
	299, 308, 360, 411, 438, 434, 443, 0, 512, 531,
	543, 555, 561, 562, 564, 565, 566, 567, 568, 573,
	571, 569, 570, 399, 306, 485, 328, 366, 0, 0,
	417, 463, 238, 535, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 377, 476,
	532, 330, 342, 345, 335, 354, 0, 355, 331, 332,
	337, 339, 340, 341, 346, 347, 351, 357, 247, 209,
	383, 391, 511, 307, 214, 215, 216, 504, 505, 506,
	507, 547, 548, 552, 453, 454, 455, 456, 288, 541,
	304, 459, 458, 326, 327, 372, 441, 0, 198, 219,
	361, 0, 445, 284, 578, 546, 540, 205, 221, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 201, 208, 220, 230, 234, 241, 257,
	272, 274, 281, 294, 305, 313, 314, 317, 323, 373,
	379, 380, 381, 382, 401, 402, 403, 406, 409, 410,
	413, 415, 416, 419, 423, 427, 428, 429, 431, 433,
	435, 446, 451, 465, 466, 467, 468, 469, 472, 473,
	478, 479, 480, 481, 482, 490, 491, 496, 519, 521,
	534, 553, 559, 471, 296, 297, 436, 437, 309, 310,
	575, 576, 295, 529, 560, 527, 574, 554, 430, 371,
	0, 0, 544, 0, 374, 277, 300, 315, 0, 545,
	492, 225, 457, 286, 249, 0, 0, 210, 244, 228,
	255, 270, 273, 319, 384, 392, 421, 426, 292, 267,
	242, 450, 239, 475, 499, 500, 501, 503, 388, 262,
	425, 389, 0, 369, 509, 510, 311, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 359, 263, 0, 0, 422, 0, 204,
	0, 477, 250, 370, 367, 516, 278, 269, 265, 248,
	312, 378, 420, 498, 414, 0, 363, 0, 0, 487,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 246, 320, 203,
	405, 488, 282, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 243, 0, 0, 0, 344, 353, 352, 333, 334,
	336, 338, 343, 350, 356, 0, 0, 0, 0, 0,
	261, 316, 268, 260, 513, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	394, 253, 0, 0, 444, 0, 0, 0, 556, 0,
	0, 0, 0, 0, 0, 0, 358, 962, 325, 199,
	223, 960, 0, 404, 452, 464, 0, 0, 0, 251,
	0, 462, 418, 533, 231, 280, 449, 424, 460, 432,
	283, 0, 0, 461, 365, 518, 442, 530, 557, 558,
	259, 398, 542, 502, 551, 577, 224, 256, 412, 495,
	536, 484, 390, 514, 515, 324, 483, 291, 202, 362,
	563, 222, 470, 364, 240, 229, 520, 539, 285, 447,
	572, 211, 497, 528, 237, 474, 0, 0, 579, 245,
	494, 213, 525, 493, 386, 321, 322, 212, 0, 448,
	264, 289, 0, 0, 254, 407, 522, 523, 252, 580,
	226, 550, 218, 0, 549, 400, 517, 526, 387, 376,
	217, 524, 385, 375, 329, 348, 349, 276, 302, 439,
	368, 440, 301, 303, 396, 395, 397, 206, 537, 0,
	207, 0, 489, 538, 581, 232, 233, 235, 0, 275,
	279, 287, 290, 298, 299, 308, 360, 411, 438, 434,
	443, 0, 512, 531, 543, 555, 561, 562, 564, 565,
	566, 567, 568, 573, 571, 569, 570, 399, 306, 485,
	328, 366, 0, 0, 417, 463, 238, 535, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 377, 476, 532, 330, 342, 345, 335, 354,
	0, 355, 331, 332, 337, 339, 340, 341, 346, 347,
	351, 357, 247, 209, 383, 391, 511, 307, 214, 215,
	216, 504, 505, 506, 507, 547, 548, 552, 453, 454,
	455, 456, 288, 541, 304, 459, 458, 326, 327, 372,
	441, 0, 198, 219, 361, 0, 445, 284, 578, 546,
	540, 205, 221, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 201, 208, 220,
	230, 234, 241, 257, 272, 274, 281, 294, 305, 313,
	314, 317, 323, 373, 379, 380, 381, 382, 401, 402,
	403, 406, 409, 410, 413, 415, 416, 419, 423, 427,
	428, 429, 431, 433, 435, 446, 451, 465, 466, 467,
	468, 469, 472, 473, 478, 479, 480, 481, 482, 490,
	491, 496, 519, 521, 534, 553, 559, 471, 296, 297,
	436, 437, 309, 310, 575, 576, 295, 529, 560, 527,
	574, 554, 430, 371, 0, 0, 544, 0, 374, 277,
	300, 315, 0, 545, 492, 225, 457, 286, 249, 0,
	0, 210, 244, 228, 255, 270, 273, 319, 384, 392,
	421, 426, 292, 267, 242, 450, 239, 475, 499, 500,
	501, 503, 388, 262, 425, 389, 0, 369, 509, 510,
	311, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 2080, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 359, 263, 0,
	0, 422, 0, 204, 0, 477, 250, 370, 367, 516,
	278, 269, 265, 248, 312, 378, 420, 498, 414, 0,
	363, 0, 0, 487, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 246, 320, 203, 405, 488, 282, 0, 0, 0,
	0, 1749, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 243, 0, 0, 0, 344,
	353, 352, 333, 334, 336, 338, 343, 350, 356, 0,
	0, 0, 0, 0, 261, 316, 268, 260, 513, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 394, 253, 0, 0, 444, 0,
	0, 0, 556, 0, 0, 0, 0, 0, 0, 0,
	358, 0, 325, 199, 223, 0, 0, 404, 452, 464,
	0, 0, 0, 251, 0, 462, 418, 533, 231, 280,
	449, 424, 460, 432, 283, 0, 0, 461, 365, 518,
	442, 530, 557, 558, 259, 398, 542, 502, 551, 577,
	224, 256, 412, 495, 536, 484, 390, 514, 515, 324,
	483, 291, 202, 362, 563, 222, 470, 364, 240, 229,
	520, 539, 285, 447, 572, 211, 497, 528, 237, 474,
	0, 0, 579, 245, 494, 213, 525, 493, 386, 321,
	322, 212, 0, 448, 264, 289, 0, 0, 254, 407,
	522, 523, 252, 580, 226, 550, 218, 0, 549, 400,
	517, 526, 387, 376, 217, 524, 385, 375, 329, 348,
	349, 276, 302, 439, 368, 440, 301, 303, 396, 395,
	397, 206, 537, 0, 207, 0, 489, 538, 581, 232,
	233, 235, 0, 275, 279, 287, 290, 298, 299, 308,
	360, 411, 438, 434, 443, 0, 512, 531, 543, 555,
	561, 562, 564, 565, 566, 567, 568, 573, 571, 569,
	570, 399, 306, 485, 328, 366, 0, 0, 417, 463,
	238, 535, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 377, 476, 532, 330,
	342, 345, 335, 354, 0, 355, 331, 332, 337, 339,
	340, 341, 346, 347, 351, 357, 247, 209, 383, 391,
	511, 307, 214, 215, 216, 504, 505, 506, 507, 547,
	548, 552, 453, 454, 455, 456, 288, 541, 304, 459,
	458, 326, 327, 372, 441, 0, 198, 219, 361, 0,
	445, 284, 578, 546, 540, 205, 221, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 201, 208, 220, 230, 234, 241, 257, 272, 274,
	281, 294, 305, 313, 314, 317, 323, 373, 379, 380,
	381, 382, 401, 402, 403, 406, 409, 410, 413, 415,
	416, 419, 423, 427, 428, 429, 431, 433, 435, 446,
	451, 465, 466, 467, 468, 469, 472, 473, 478, 479,
	480, 481, 482, 490, 491, 496, 519, 521, 534, 553,
	559, 471, 296, 297, 436, 437, 309, 310, 575, 576,
	295, 529, 560, 527, 574, 554, 430, 371, 0, 0,
	544, 0, 374, 277, 300, 315, 0, 545, 492, 225,
	457, 286, 249, 0, 0, 210, 244, 228, 255, 270,
	273, 319, 384, 392, 421, 426, 292, 267, 242, 450,
	239, 475, 499, 500, 501, 503, 388, 262, 425, 389,
	0, 369, 509, 510, 311, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 359, 263, 0, 0, 422, 0, 204, 0, 477,
	250, 370, 367, 516, 278, 269, 265, 248, 312, 378,
	420, 498, 414, 0, 363, 0, 0, 487, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 246, 320, 203, 405, 488,
	282, 0, 0, 0, 1547, 0, 655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 243,
	0, 0, 0, 344, 353, 352, 333, 334, 336, 338,
	343, 350, 356, 0, 0, 0, 0, 0, 261, 316,
	268, 260, 513, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 394, 253,
	0, 0, 444, 0, 0, 0, 556, 0, 0, 0,
	3371, 0, 0, 0, 358, 0, 325, 199, 223, 0,
	0, 404, 452, 464, 0, 0, 0, 251, 0, 462,
	418, 533, 231, 280, 449, 424, 460, 432, 283, 0,
	0, 461, 365, 518, 442, 530, 557, 558, 259, 398,
	542, 502, 551, 577, 224, 256, 412, 495, 536, 484,
	390, 514, 515, 324, 483, 291, 202, 362, 563, 222,
	470, 364, 240, 229, 520, 539, 285, 447, 572, 211,
	497, 528, 237, 474, 0, 0, 579, 245, 494, 213,
	525, 493, 386, 321, 322, 212, 0, 448, 264, 289,
	0, 0, 254, 407, 522, 523, 252, 580, 226, 550,
	218, 0, 549, 400, 517, 526, 387, 376, 217, 524,
	385, 375, 329, 348, 349, 276, 302, 439, 368, 440,
	301, 303, 396, 395, 397, 206, 537, 0, 207, 0,
	489, 538, 581, 232, 233, 235, 0, 275, 279, 287,
	290, 298, 299, 308, 360, 411, 438, 434, 443, 0,
	512, 531, 543, 555, 561, 562, 564, 565, 566, 567,
	568, 573, 571, 569, 570, 399, 306, 485, 328, 366,
	0, 0, 417, 463, 238, 535, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	377, 476, 532, 330, 342, 345, 335, 354, 0, 355,
	331, 332, 337, 339, 340, 341, 346, 347, 351, 357,
	247, 209, 383, 391, 511, 307, 214, 215, 216, 504,
	505, 506, 507, 547, 548, 552, 453, 454, 455, 456,
	288, 541, 304, 459, 458, 326, 327, 372, 441, 0,
	198, 219, 361, 0, 445, 284, 578, 546, 540, 205,
	221, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 201, 208, 220, 230, 234,
	241, 257, 272, 274, 281, 294, 305, 313, 314, 317,
	323, 373, 379, 380, 381, 382, 401, 402, 403, 406,
	409, 410, 413, 415, 416, 419, 423, 427, 428, 429,
	431, 433, 435, 446, 451, 465, 466, 467, 468, 469,
	472, 473, 478, 479, 480, 481, 482, 490, 491, 496,
	519, 521, 534, 553, 559, 471, 296, 297, 436, 437,
	309, 310, 575, 576, 295, 529, 560, 527, 574, 554,
	430, 371, 0, 0, 544, 0, 374, 277, 300, 315,
	0, 545, 492, 225, 457, 286, 249, 0, 0, 210,
	244, 228, 255, 270, 273, 319, 384, 392, 421, 426,
	292, 267, 242, 450, 239, 475, 499, 500, 501, 503,
	388, 262, 425, 389, 0, 369, 509, 510, 311, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 359, 263, 0, 0, 422,
	0, 204, 0, 477, 250, 370, 367, 516, 278, 269,
	265, 248, 312, 378, 420, 498, 414, 0, 363, 0,
	0, 487, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 246,
	320, 203, 405, 488, 282, 0, 0, 0, 0, 1913,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 243, 0, 0, 0, 344, 353, 352,
	333, 334, 336, 338, 343, 350, 356, 0, 0, 0,
	0, 0, 261, 316, 268, 260, 513, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1914, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 394, 253, 0, 0, 444, 0, 0, 0,
	556, 0, 0, 0, 0, 0, 0, 0, 358, 0,
	325, 199, 223, 0, 0, 404, 452, 464, 0, 0,
	0, 251, 0, 462, 418, 533, 231, 280, 449, 424,
	460, 432, 283, 0, 0, 461, 365, 518, 442, 530,
	557, 558, 259, 398, 542, 502, 551, 577, 224, 256,
	412, 495, 536, 484, 390, 514, 515, 324, 483, 291,
	202, 362, 563, 222, 470, 364, 240, 229, 520, 539,
	285, 447, 572, 211, 497, 528, 237, 474, 0, 0,
	579, 245, 494, 213, 525, 493, 386, 321, 322, 212,
	0, 448, 264, 289, 0, 0, 254, 407, 522, 523,
	252, 580, 226, 550, 218, 0, 549, 400, 517, 526,
	387, 376, 217, 524, 385, 375, 329, 348, 349, 276,
	302, 439, 368, 440, 301, 303, 396, 395, 397, 206,
	537, 0, 207, 0, 489, 538, 581, 232, 233, 235,
	0, 275, 279, 287, 290, 298, 299, 308, 360, 411,
	438, 434, 443, 0, 512, 531, 543, 555, 561, 562,
	564, 565, 566, 567, 568, 573, 571, 569, 570, 399,
	306, 485, 328, 366, 0, 0, 417, 463, 238, 535,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 377, 476, 532, 330, 342, 345,
	335, 354, 0, 355, 331, 332, 337, 339, 340, 341,
	346, 347, 351, 357, 247, 209, 383, 391, 511, 307,
	214, 215, 216, 504, 505, 506, 507, 547, 548, 552,
	453, 454, 455, 456, 288, 541, 304, 459, 458, 326,
	327, 372, 441, 0, 198, 219, 361, 0, 445, 284,
	578, 546, 540, 205, 221, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 201,
	208, 220, 230, 234, 241, 257, 272, 274, 281, 294,
	305, 313, 314, 317, 323, 373, 379, 380, 381, 382,
	401, 402, 403, 406, 409, 410, 413, 415, 416, 419,
	423, 427, 428, 429, 431, 433, 435, 446, 451, 465,
	466, 467, 468, 469, 472, 473, 478, 479, 480, 481,
	482, 490, 491, 496, 519, 521, 534, 553, 559, 471,
	296, 297, 436, 437, 309, 310, 575, 576, 295, 529,
	560, 527, 574, 554, 430, 371, 0, 0, 544, 0,
	374, 277, 300, 315, 0, 545, 492, 225, 457, 286,
	249, 0, 0, 210, 244, 228, 255, 270, 273, 319,
	384, 392, 421, 426, 292, 267, 242, 450, 239, 475,
	499, 500, 501, 503, 388, 262, 425, 389, 0, 369,
	509, 510, 311, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 359,
	263, 0, 0, 422, 0, 204, 0, 477, 250, 370,
	367, 516, 278, 269, 265, 248, 312, 378, 420, 498,
	414, 0, 363, 0, 0, 487, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 246, 320, 203, 405, 488, 282, 0,
	0, 0, 0, 2490, 655, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 243, 0, 0,
	0, 344, 353, 352, 333, 334, 336, 338, 343, 350,
	356, 0, 0, 0, 0, 0, 261, 316, 268, 260,
	513, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 394, 253, 0, 0,
	444, 0, 0, 0, 556, 0, 0, 0, 0, 0,
	0, 0, 358, 0, 325, 199, 223, 0, 0, 404,
	452, 464, 0, 0, 0, 251, 0, 462, 418, 533,
	231, 280, 449, 424, 460, 432, 283, 0, 0, 461,
	365, 518, 442, 530, 557, 558, 259, 398, 542, 502,
	551, 577, 224, 256, 412, 495, 536, 484, 390, 514,
	515, 324, 483, 291, 202, 362, 563, 222, 470, 364,
	240, 229, 520, 539, 285, 447, 572, 211, 497, 528,
	237, 474, 0, 0, 579, 245, 494, 213, 525, 493,
	386, 321, 322, 212, 0, 448, 264, 289, 0, 0,
	254, 407, 522, 523, 252, 580, 226, 550, 218, 0,
	549, 400, 517, 526, 387, 376, 217, 524, 385, 375,
	329, 348, 349, 276, 302, 439, 368, 440, 301, 303,
	396, 395, 397, 206, 537, 0, 207, 0, 489, 538,
	581, 232, 233, 235, 0, 275, 279, 287, 290, 298,
	299, 308, 360, 411, 438, 434, 443, 0, 512, 531,
	543, 555, 561, 562, 564, 565, 566, 567, 568, 573,
	571, 569, 570, 399, 306, 485, 328, 366, 0, 0,
	417, 463, 238, 535, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 377, 476,
	532, 330, 342, 345, 335, 354, 0, 355, 331, 332,
	337, 339, 340, 341, 346, 347, 351, 357, 247, 209,
	383, 391, 511, 307, 214, 215, 216, 504, 505, 506,
	507, 547, 548, 552, 453, 454, 455, 456, 288, 541,
	304, 459, 458, 326, 327, 372, 441, 0, 198, 219,
	361, 0, 445, 284, 578, 546, 540, 205, 221, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 201, 208, 220, 230, 234, 241, 257,
	272, 274, 281, 294, 305, 313, 314, 317, 323, 373,
	379, 380, 381, 382, 401, 402, 403, 406, 409, 410,
	413, 415, 416, 419, 423, 427, 428, 429, 431, 433,
	435, 446, 451, 465, 466, 467, 468, 469, 472, 473,
	478, 479, 480, 481, 482, 490, 491, 496, 519, 521,
	534, 553, 559, 471, 296, 297, 436, 437, 309, 310,
	575, 576, 295, 529, 560, 527, 574, 554, 430, 371,
	0, 0, 544, 0, 374, 277, 300, 315, 0, 545,
	492, 225, 457, 286, 249, 0, 0, 210, 244, 228,
	255, 270, 273, 319, 384, 392, 421, 426, 292, 267,
	242, 450, 239, 475, 499, 500, 501, 503, 388, 262,
	425, 389, 0, 369, 509, 510, 311, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 359, 263, 0, 0, 422, 0, 204,
	0, 477, 250, 370, 367, 516, 278, 269, 265, 248,
	312, 378, 420, 498, 414, 0, 363, 0, 0, 487,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 246, 320, 203,
	405, 488, 282, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 2475, 0, 0, 0, 0, 236, 0,
	0, 243, 2476, 0, 0, 344, 353, 352, 333, 334,
	336, 338, 343, 350, 356, 0, 0, 0, 0, 0,
	261, 316, 268, 260, 513, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	394, 253, 0, 0, 444, 0, 0, 0, 556, 0,
	0, 0, 0, 0, 0, 0, 358, 0, 325, 199,
	223, 0, 0, 404, 452, 464, 0, 0, 0, 251,
	0, 462, 418, 533, 231, 280, 449, 424, 460, 432,
	283, 0, 0, 461, 365, 518, 442, 530, 557, 558,
	259, 398, 542, 502, 551, 577, 224, 256, 412, 495,
	536, 484, 390, 514, 515, 324, 483, 291, 202, 362,
	563, 222, 470, 364, 240, 229, 520, 539, 285, 447,
	572, 211, 497, 528, 237, 474, 0, 0, 579, 245,
	494, 213, 525, 493, 386, 321, 322, 212, 0, 448,
	264, 289, 0, 0, 254, 407, 522, 523, 252, 580,
	226, 550, 218, 0, 549, 400, 517, 526, 387, 376,
	217, 524, 385, 375, 329, 348, 349, 276, 302, 439,
	368, 440, 301, 303, 396, 395, 397, 206, 537, 0,
	207, 0, 489, 538, 581, 232, 233, 235, 0, 275,
	279, 287, 290, 298, 299, 308, 360, 411, 438, 434,
	443, 0, 512, 531, 543, 555, 561, 562, 564, 565,
	566, 567, 568, 573, 571, 569, 570, 399, 306, 485,
	328, 366, 0, 0, 417, 463, 238, 535, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 377, 476, 532, 330, 342, 345, 335, 354,
	0, 355, 331, 332, 337, 339, 340, 341, 346, 347,
	351, 357, 247, 209, 383, 391, 511, 307, 214, 215,
	216, 504, 505, 506, 507, 547, 548, 552, 453, 454,
	455, 456, 288, 541, 304, 459, 458, 326, 327, 372,
	441, 0, 198, 219, 361, 0, 445, 284, 578, 546,
	540, 205, 221, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 201, 208, 220,
	230, 234, 241, 257, 272, 274, 281, 294, 305, 313,
	314, 317, 323, 373, 379, 380, 381, 382, 401, 402,
	403, 406, 409, 410, 413, 415, 416, 419, 423, 427,
	428, 429, 431, 433, 435, 446, 451, 465, 466, 467,
	468, 469, 472, 473, 478, 479, 480, 481, 482, 490,
	491, 496, 519, 521, 534, 553, 559, 471, 296, 297,
	436, 437, 309, 310, 575, 576, 295, 529, 560, 527,
	574, 554, 430, 371, 0, 0, 544, 0, 374, 277,
	300, 315, 0, 545, 492, 225, 457, 286, 249, 0,
	0, 210, 244, 228, 255, 270, 273, 319, 384, 392,
	421, 426, 292, 267, 242, 450, 239, 475, 499, 500,
	501, 503, 388, 262, 425, 389, 0, 369, 509, 510,
	311, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 1589, 0, 0, 0, 359, 263, 0,
	0, 422, 0, 204, 0, 477, 250, 370, 367, 516,
	278, 269, 265, 248, 312, 378, 420, 498, 414, 0,
	363, 0, 0, 487, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 246, 320, 203, 405, 488, 282, 0, 0, 0,
	0, 1588, 655, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 243, 0, 0, 0, 344,
	353, 352, 333, 334, 336, 338, 343, 350, 356, 0,
	0, 0, 0, 0, 261, 316, 268, 260, 513, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 394, 253, 0, 0, 444, 0,
	0, 0, 556, 0, 0, 0, 0, 0, 0, 0,
	358, 0, 325, 199, 223, 0, 0, 404, 452, 464,
	0, 0, 0, 251, 0, 462, 418, 533, 231, 280,
	449, 424, 460, 432, 283, 0, 0, 461, 365, 518,
	442, 530, 557, 558, 259, 398, 542, 502, 551, 577,
	224, 256, 412, 495, 536, 484, 390, 514, 515, 324,
	483, 291, 202, 362, 563, 222, 470, 364, 240, 229,
	520, 539, 285, 447, 572, 211, 497, 528, 237, 474,
	0, 0, 579, 245, 494, 213, 525, 493, 386, 321,
	322, 212, 0, 448, 264, 289, 0, 0, 254, 407,
	522, 523, 252, 580, 226, 550, 218, 0, 549, 400,
	517, 526, 387, 376, 217, 524, 385, 375, 329, 348,
	349, 276, 302, 439, 368, 440, 301, 303, 396, 395,
	397, 206, 537, 0, 207, 0, 489, 538, 581, 232,
	233, 235, 0, 275, 279, 287, 290, 298, 299, 308,
	360, 411, 438, 434, 443, 0, 512, 531, 543, 555,
	561, 562, 564, 565, 566, 567, 568, 573, 571, 569,
	570, 399, 306, 485, 328, 366, 0, 0, 417, 463,
	238, 535, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 377, 476, 532, 330,
	342, 345, 335, 354, 0, 355, 331, 332, 337, 339,
	340, 341, 346, 347, 351, 357, 247, 209, 383, 391,
	511, 307, 214, 215, 216, 504, 505, 506, 507, 547,
	548, 552, 453, 454, 455, 456, 288, 541, 304, 459,
	458, 326, 327, 372, 441, 0, 198, 219, 361, 0,
	445, 284, 578, 546, 540, 205, 221, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 201, 208, 220, 230, 234, 241, 257, 272, 274,
	281, 294, 305, 313, 314, 317, 323, 373, 379, 380,
	381, 382, 401, 402, 403, 406, 409, 410, 413, 415,
	416, 419, 423, 427, 428, 429, 431, 433, 435, 446,
	451, 465, 466, 467, 468, 469, 472, 473, 478, 479,
	480, 481, 482, 490, 491, 496, 519, 521, 534, 553,
	559, 471, 296, 297, 436, 437, 309, 310, 575, 576,
	295, 529, 560, 527, 574, 554, 430, 371, 0, 0,
	544, 0, 374, 277, 300, 315, 0, 545, 492, 225,
	457, 286, 249, 0, 0, 210, 244, 228, 255, 270,
	273, 319, 384, 392, 421, 426, 292, 267, 242, 450,
	239, 475, 499, 500, 501, 503, 388, 262, 425, 389,
	0, 369, 509, 510, 311, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 359, 263, 0, 0, 422, 0, 204, 0, 477,
	250, 370, 367, 516, 278, 269, 265, 248, 312, 378,
	420, 498, 414, 0, 363, 0, 0, 487, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 246, 320, 203, 405, 488,
	282, 0, 0, 0, 0, 0, 657, 658, 659, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 243,
	0, 0, 0, 344, 353, 352, 333, 334, 336, 338,
	343, 350, 356, 0, 0, 0, 0, 0, 261, 316,
	268, 260, 513, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 394, 253,
	0, 0, 444, 0, 0, 0, 556, 0, 0, 0,
	0, 0, 0, 0, 358, 0, 325, 199, 223, 0,
	0, 404, 452, 464, 0, 0, 0, 251, 0, 462,
	418, 533, 231, 280, 449, 424, 460, 432, 283, 0,
	0, 461, 365, 518, 442, 530, 557, 558, 259, 398,
	542, 502, 551, 577, 224, 256, 412, 495, 536, 484,
	390, 514, 515, 324, 483, 291, 202, 362, 563, 222,
	470, 364, 240, 229, 520, 539, 285, 447, 572, 211,
	497, 528, 237, 474, 0, 0, 579, 245, 494, 213,
	525, 493, 386, 321, 322, 212, 0, 448, 264, 289,
	0, 0, 254, 407, 522, 523, 252, 580, 226, 550,
	218, 0, 549, 400, 517, 526, 387, 376, 217, 524,
	385, 375, 329, 348, 349, 276, 302, 439, 368, 440,
	301, 303, 396, 395, 397, 206, 537, 0, 207, 0,
	489, 538, 581, 232, 233, 235, 0, 275, 279, 287,
	290, 298, 299, 308, 360, 411, 438, 434, 443, 0,
	512, 531, 543, 555, 561, 562, 564, 565, 566, 567,
	568, 573, 571, 569, 570, 399, 306, 485, 328, 366,
	0, 0, 417, 463, 238, 535, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	377, 476, 532, 330, 342, 345, 335, 354, 0, 355,
	331, 332, 337, 339, 340, 341, 346, 347, 351, 357,
	247, 209, 383, 391, 511, 307, 214, 215, 216, 504,
	505, 506, 507, 547, 548, 552, 453, 454, 455, 456,
	288, 541, 304, 459, 458, 326, 327, 372, 441, 0,
	198, 219, 361, 0, 445, 284, 578, 546, 540, 205,
	221, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 201, 208, 220, 230, 234,
	241, 257, 272, 274, 281, 294, 305, 313, 314, 317,
	323, 373, 379, 380, 381, 382, 401, 402, 403, 406,
	409, 410, 413, 415, 416, 419, 423, 427, 428, 429,
	431, 433, 435, 446, 451, 465, 466, 467, 468, 469,
	472, 473, 478, 479, 480, 481, 482, 490, 491, 496,
	519, 521, 534, 553, 559, 471, 296, 297, 436, 437,
	309, 310, 575, 576, 295, 529, 560, 527, 574, 554,
	430, 371, 0, 0, 544, 0, 374, 277, 300, 315,
	0, 545, 492, 225, 457, 286, 249, 0, 0, 210,
	244, 228, 255, 270, 273, 319, 384, 392, 421, 426,
	292, 267, 242, 450, 239, 475, 499, 500, 501, 503,
	388, 262, 425, 389, 0, 369, 509, 510, 311, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 359, 263, 0, 0, 422,
	0, 204, 0, 477, 250, 370, 367, 516, 278, 269,
	265, 248, 312, 378, 420, 498, 414, 0, 363, 0,
	0, 487, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 246,
	320, 203, 405, 488, 282, 0, 0, 0, 0, 0,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 243, 0, 0, 0, 344, 353, 352,
	333, 334, 336, 338, 343, 350, 356, 0, 0, 0,
	0, 0, 261, 316, 268, 260, 513, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 394, 253, 0, 0, 444, 0, 0, 0,
	556, 0, 0, 0, 3495, 0, 0, 0, 358, 0,
	325, 199, 223, 0, 0, 404, 452, 464, 0, 0,
	0, 251, 0, 462, 418, 533, 231, 280, 449, 424,
	460, 432, 283, 0, 0, 461, 365, 518, 442, 530,
	557, 558, 259, 398, 542, 502, 551, 577, 224, 256,
	412, 495, 536, 484, 390, 514, 515, 324, 483, 291,
	202, 362, 563, 222, 470, 364, 240, 229, 520, 539,
	285, 447, 572, 211, 497, 528, 237, 474, 0, 0,
	579, 245, 494, 213, 525, 493, 386, 321, 322, 212,
	0, 448, 264, 289, 0, 0, 254, 407, 522, 523,
	252, 580, 226, 550, 218, 0, 549, 400, 517, 526,
	387, 376, 217, 524, 385, 375, 329, 348, 349, 276,
	302, 439, 368, 440, 301, 303, 396, 395, 397, 206,
	537, 0, 207, 0, 489, 538, 581, 232, 233, 235,
	0, 275, 279, 287, 290, 298, 299, 308, 360, 411,
	438, 434, 443, 0, 512, 531, 543, 555, 561, 562,
	564, 565, 566, 567, 568, 573, 571, 569, 570, 399,
	306, 485, 328, 366, 0, 0, 417, 463, 238, 535,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 377, 476, 532, 330, 342, 345,
	335, 354, 0, 355, 331, 332, 337, 339, 340, 341,
	346, 347, 351, 357, 247, 209, 383, 391, 511, 307,
	214, 215, 216, 504, 505, 506, 507, 547, 548, 552,
	453, 454, 455, 456, 288, 541, 304, 459, 458, 326,
	327, 372, 441, 0, 198, 219, 361, 0, 445, 284,
	578, 546, 540, 205, 221, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 201,
	208, 220, 230, 234, 241, 257, 272, 274, 281, 294,
	305, 313, 314, 317, 323, 373, 379, 380, 381, 382,
	401, 402, 403, 406, 409, 410, 413, 415, 416, 419,
	423, 427, 428, 429, 431, 433, 435, 446, 451, 465,
	466, 467, 468, 469, 472, 473, 478, 479, 480, 481,
	482, 490, 491, 496, 519, 521, 534, 553, 559, 471,
	296, 297, 436, 437, 309, 310, 575, 576, 295, 529,
	560, 527, 574, 554, 430, 371, 0, 0, 544, 0,
	374, 277, 300, 315, 0, 545, 492, 225, 457, 286,
	249, 0, 0, 210, 244, 228, 255, 270, 273, 319,
	384, 392, 421, 426, 292, 267, 242, 450, 239, 475,
	499, 500, 501, 503, 388, 262, 425, 389, 0, 369,
	509, 510, 311, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 359,
	263, 0, 0, 422, 0, 204, 0, 477, 250, 370,
	367, 516, 278, 269, 265, 248, 312, 378, 420, 498,
	414, 0, 363, 0, 0, 487, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 246, 320, 203, 405, 488, 282, 0,
	0, 0, 0, 1749, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 243, 0, 0,
	0, 344, 353, 352, 333, 334, 336, 338, 343, 350,
	356, 0, 0, 0, 0, 0, 261, 316, 268, 260,
	513, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 394, 253, 0, 0,
	444, 0, 0, 0, 556, 0, 0, 0, 0, 0,
	0, 0, 358, 0, 325, 199, 223, 0, 0, 404,
	452, 464, 0, 0, 0, 251, 0, 462, 418, 533,
	231, 280, 449, 424, 460, 432, 283, 0, 0, 461,
	365, 518, 442, 530, 557, 558, 259, 398, 542, 502,
	551, 577, 224, 256, 412, 495, 536, 484, 390, 514,
	515, 324, 483, 291, 202, 362, 563, 222, 470, 364,
	240, 229, 520, 539, 285, 447, 572, 211, 497, 528,
	237, 474, 0, 0, 579, 245, 494, 213, 525, 493,
	386, 321, 322, 212, 0, 448, 264, 289, 0, 0,
	254, 407, 522, 523, 252, 580, 226, 550, 218, 0,
	549, 400, 517, 526, 387, 376, 217, 524, 385, 375,
	329, 348, 349, 276, 302, 439, 368, 440, 301, 303,
	396, 395, 397, 206, 537, 0, 207, 0, 489, 538,
	581, 232, 233, 235, 0, 275, 279, 287, 290, 298,
	299, 308, 360, 411, 438, 434, 443, 0, 512, 531,
	543, 555, 561, 562, 564, 565, 566, 567, 568, 573,
	571, 569, 570, 399, 306, 485, 328, 366, 0, 0,
	417, 463, 238, 535, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 377, 476,
	532, 330, 342, 345, 335, 354, 0, 355, 331, 332,
	337, 339, 340, 341, 346, 347, 351, 357, 247, 209,
	383, 391, 511, 307, 214, 215, 216, 504, 505, 506,
	507, 547, 548, 552, 453, 454, 455, 456, 288, 541,
	304, 459, 458, 326, 327, 372, 441, 0, 198, 219,
	361, 0, 445, 284, 578, 546, 540, 205, 221, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 201, 208, 220, 230, 234, 241, 257,
	272, 274, 281, 294, 305, 313, 314, 317, 323, 373,
	379, 380, 381, 382, 401, 402, 403, 406, 409, 410,
	413, 415, 416, 419, 423, 427, 428, 429, 431, 433,
	435, 446, 451, 465, 466, 467, 468, 469, 472, 473,
	478, 479, 480, 481, 482, 490, 491, 496, 519, 521,
	534, 553, 559, 471, 296, 297, 436, 437, 309, 310,
	575, 576, 295, 529, 560, 527, 574, 554, 430, 371,
	0, 0, 544, 0, 374, 277, 300, 315, 0, 545,
	492, 225, 457, 286, 249, 0, 0, 210, 244, 228,
	255, 270, 273, 319, 384, 392, 421, 426, 292, 267,
	242, 450, 239, 475, 499, 500, 501, 503, 388, 262,
	425, 389, 0, 369, 509, 510, 311, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 359, 263, 0, 0, 422, 0, 204,
	0, 477, 250, 370, 367, 516, 278, 269, 265, 248,
	312, 378, 420, 498, 414, 0, 363, 0, 0, 487,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 246, 320, 203,
	405, 488, 282, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 243, 0, 0, 0, 344, 353, 352, 333, 334,
	336, 338, 343, 350, 356, 0, 0, 0, 0, 0,
	261, 316, 268, 260, 513, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	394, 253, 0, 0, 444, 0, 0, 0, 556, 0,
	0, 0, 3371, 0, 0, 0, 358, 0, 325, 199,
	223, 0, 0, 404, 452, 464, 0, 0, 0, 251,
	0, 462, 418, 533, 231, 280, 449, 424, 460, 432,
	283, 0, 0, 461, 365, 518, 442, 530, 557, 558,
	259, 398, 542, 502, 551, 577, 224, 256, 412, 495,
	536, 484, 390, 514, 515, 324, 483, 291, 202, 362,
	563, 222, 470, 364, 240, 229, 520, 539, 285, 447,
	572, 211, 497, 528, 237, 474, 0, 0, 579, 245,
	494, 213, 525, 493, 386, 321, 322, 212, 0, 448,
	264, 289, 0, 0, 254, 407, 522, 523, 252, 580,
	226, 550, 218, 0, 549, 400, 517, 526, 387, 376,
	217, 524, 385, 375, 329, 348, 349, 276, 302, 439,
	368, 440, 301, 303, 396, 395, 397, 206, 537, 0,
	207, 0, 489, 538, 581, 232, 233, 235, 0, 275,
	279, 287, 290, 298, 299, 308, 360, 411, 438, 434,
	443, 0, 512, 531, 543, 555, 561, 562, 564, 565,
	566, 567, 568, 573, 571, 569, 570, 399, 306, 485,
	328, 366, 0, 0, 417, 463, 238, 535, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 377, 476, 532, 330, 342, 345, 335, 354,
	0, 355, 331, 332, 337, 339, 340, 341, 346, 347,
	351, 357, 247, 209, 383, 391, 511, 307, 214, 215,
	216, 504, 505, 506, 507, 547, 548, 552, 453, 454,
	455, 456, 288, 541, 304, 459, 458, 326, 327, 372,
	441, 0, 198, 219, 361, 0, 445, 284, 578, 546,
	540, 205, 221, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 201, 208, 220,
	230, 234, 241, 257, 272, 274, 281, 294, 305, 313,
	314, 317, 323, 373, 379, 380, 381, 382, 401, 402,
	403, 406, 409, 410, 413, 415, 416, 419, 423, 427,
	428, 429, 431, 433, 435, 446, 451, 465, 466, 467,
	468, 469, 472, 473, 478, 479, 480, 481, 482, 490,
	491, 496, 519, 521, 534, 553, 559, 471, 296, 297,
	436, 437, 309, 310, 575, 576, 295, 529, 560, 527,
	574, 554, 430, 371, 0, 0, 544, 0, 374, 277,
	300, 315, 0, 545, 492, 225, 457, 286, 249, 0,
	0, 210, 244, 228, 255, 270, 273, 319, 384, 392,
	421, 426, 292, 267, 242, 450, 239, 475, 499, 500,
	501, 503, 388, 262, 425, 389, 0, 369, 509, 510,
	311, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 359, 263, 0,
	0, 422, 0, 204, 0, 477, 250, 370, 367, 516,
	278, 269, 265, 248, 312, 378, 420, 498, 414, 0,
	363, 0, 0, 487, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 246, 320, 203, 405, 488, 282, 0, 97, 0,
	0, 0, 655, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 243, 0, 0, 0, 344,
	353, 352, 333, 334, 336, 338, 343, 350, 356, 0,
	0, 0, 0, 0, 261, 316, 268, 260, 513, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 394, 253, 0, 0, 444, 0,
	0, 0, 556, 0, 0, 0, 0, 0, 0, 0,
	358, 0, 325, 199, 223, 0, 0, 404, 452, 464,
	0, 0, 0, 251, 0, 462, 418, 533, 231, 280,
	449, 424, 460, 432, 283, 0, 0, 461, 365, 518,
	442, 530, 557, 558, 259, 398, 542, 502, 551, 577,
	224, 256, 412, 495, 536, 484, 390, 514, 515, 324,
	483, 291, 202, 362, 563, 222, 470, 364, 240, 229,
	520, 539, 285, 447, 572, 211, 497, 528, 237, 474,
	0, 0, 579, 245, 494, 213, 525, 493, 386, 321,
	322, 212, 0, 448, 264, 289, 0, 0, 254, 407,
	522, 523, 252, 580, 226, 550, 218, 0, 549, 400,
	517, 526, 387, 376, 217, 524, 385, 375, 329, 348,
	349, 276, 302, 439, 368, 440, 301, 303, 396, 395,
	397, 206, 537, 0, 207, 0, 489, 538, 581, 232,
	233, 235, 0, 275, 279, 287, 290, 298, 299, 308,
	360, 411, 438, 434, 443, 0, 512, 531, 543, 555,
	561, 562, 564, 565, 566, 567, 568, 573, 571, 569,
	570, 399, 306, 485, 328, 366, 0, 0, 417, 463,
	238, 535, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 377, 476, 532, 330,
	342, 345, 335, 354, 0, 355, 331, 332, 337, 339,
	340, 341, 346, 347, 351, 357, 247, 209, 383, 391,
	511, 307, 214, 215, 216, 504, 505, 506, 507, 547,
	548, 552, 453, 454, 455, 456, 288, 541, 304, 459,
	458, 326, 327, 372, 441, 0, 198, 219, 361, 0,
	445, 284, 578, 546, 540, 205, 221, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 201, 208, 220, 230, 234, 241, 257, 272, 274,
	281, 294, 305, 313, 314, 317, 323, 373, 379, 380,
	381, 382, 401, 402, 403, 406, 409, 410, 413, 415,
	416, 419, 423, 427, 428, 429, 431, 433, 435, 446,
	451, 465, 466, 467, 468, 469, 472, 473, 478, 479,
	480, 481, 482, 490, 491, 496, 519, 521, 534, 553,
	559, 471, 296, 297, 436, 437, 309, 310, 575, 576,
	295, 529, 560, 527, 574, 554, 430, 371, 0, 0,
	544, 0, 374, 277, 300, 315, 0, 545, 492, 225,
	457, 286, 249, 0, 0, 210, 244, 228, 255, 270,
	273, 319, 384, 392, 421, 426, 292, 267, 242, 450,
	239, 475, 499, 500, 501, 503, 388, 262, 425, 389,
	0, 369, 509, 510, 311, 508, 0, 0, 0, 0,
	2131, 0, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 359, 263, 0, 0, 422, 0, 204, 0, 477,
	250, 370, 367, 516, 278, 269, 265, 248, 312, 378,
	420, 498, 414, 0, 363, 0, 0, 487, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 246, 320, 203, 405, 488,
	282, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 243,
	0, 0, 0, 344, 353, 352, 333, 334, 336, 338,
	343, 350, 356, 0, 0, 0, 0, 0, 261, 316,
	268, 260, 513, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 394, 253,
	0, 0, 444, 0, 0, 0, 556, 0, 0, 0,
	0, 0, 0, 0, 358, 0, 325, 199, 223, 0,
	0, 404, 452, 464, 0, 0, 0, 251, 0, 462,
	418, 533, 231, 280, 449, 424, 460, 432, 283, 0,
	0, 461, 365, 518, 442, 530, 557, 558, 259, 398,
	542, 502, 551, 577, 224, 256, 412, 495, 536, 484,
	390, 514, 515, 324, 483, 291, 202, 362, 563, 222,
	470, 364, 240, 229, 520, 539, 285, 447, 572, 211,
	497, 528, 237, 474, 0, 0, 579, 245, 494, 213,
	525, 493, 386, 321, 322, 212, 0, 448, 264, 289,
	0, 0, 254, 407, 522, 523, 252, 580, 226, 550,
	218, 0, 549, 400, 517, 526, 387, 376, 217, 524,
	385, 375, 329, 348, 349, 276, 302, 439, 368, 440,
	301, 303, 396, 395, 397, 206, 537, 0, 207, 0,
	489, 538, 581, 232, 233, 235, 0, 275, 279, 287,
	290, 298, 299, 308, 360, 411, 438, 434, 443, 0,
	512, 531, 543, 555, 561, 562, 564, 565, 566, 567,
	568, 573, 571, 569, 570, 399, 306, 485, 328, 366,
	0, 0, 417, 463, 238, 535, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	377, 476, 532, 330, 342, 345, 335, 354, 0, 355,
	331, 332, 337, 339, 340, 341, 346, 347, 351, 357,
	247, 209, 383, 391, 511, 307, 214, 215, 216, 504,
	505, 506, 507, 547, 548, 552, 453, 454, 455, 456,
	288, 541, 304, 459, 458, 326, 327, 372, 441, 0,
	198, 219, 361, 0, 445, 284, 578, 546, 540, 205,
	221, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 201, 208, 220, 230, 234,
	241, 257, 272, 274, 281, 294, 305, 313, 314, 317,
	323, 373, 379, 380, 381, 382, 401, 402, 403, 406,
	409, 410, 413, 415, 416, 419, 423, 427, 428, 429,
	431, 433, 435, 446, 451, 465, 466, 467, 468, 469,
	472, 473, 478, 479, 480, 481, 482, 490, 491, 496,
	519, 521, 534, 553, 559, 471, 296, 297, 436, 437,
	309, 310, 575, 576, 295, 529, 560, 527, 574, 554,
	430, 371, 0, 0, 544, 0, 374, 277, 300, 315,
	0, 545, 492, 225, 457, 286, 249, 0, 0, 210,
	244, 228, 255, 270, 273, 319, 384, 392, 421, 426,
	292, 267, 242, 450, 239, 475, 499, 500, 501, 503,
	388, 262, 425, 389, 0, 369, 509, 510, 311, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 359, 263, 0, 0, 422,
	0, 204, 0, 477, 250, 370, 367, 516, 278, 269,
	265, 248, 312, 378, 420, 498, 414, 0, 363, 0,
	0, 487, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 246,
	320, 203, 405, 488, 282, 0, 0, 0, 0, 1570,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 243, 0, 0, 0, 344, 353, 352,
	333, 334, 336, 338, 343, 350, 356, 0, 0, 0,
	0, 0, 261, 316, 268, 260, 513, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 394, 253, 0, 0, 444, 0, 0, 0,
	556, 0, 0, 0, 0, 0, 0, 0, 358, 0,
	325, 199, 223, 0, 0, 404, 452, 464, 0, 0,
	0, 251, 0, 462, 418, 533, 231, 280, 449, 424,
	460, 432, 283, 0, 0, 461, 365, 518, 442, 530,
	557, 558, 259, 398, 542, 502, 551, 577, 224, 256,
	412, 495, 536, 484, 390, 514, 515, 324, 483, 291,
	202, 362, 563, 222, 470, 364, 240, 229, 520, 539,
	285, 447, 572, 211, 497, 528, 237, 474, 0, 0,
	579, 245, 494, 213, 525, 493, 386, 321, 322, 212,
	0, 448, 264, 289, 0, 0, 254, 407, 522, 523,
	252, 580, 226, 550, 218, 0, 549, 400, 517, 526,
	387, 376, 217, 524, 385, 375, 329, 348, 349, 276,
	302, 439, 368, 440, 301, 303, 396, 395, 397, 206,
	537, 0, 207, 0, 489, 538, 581, 232, 233, 235,
	0, 275, 279, 287, 290, 298, 299, 308, 360, 411,
	438, 434, 443, 0, 512, 531, 543, 555, 561, 562,
	564, 565, 566, 567, 568, 573, 571, 569, 570, 399,
	306, 485, 328, 366, 0, 0, 417, 463, 238, 535,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 377, 476, 532, 330, 342, 345,
	335, 354, 0, 355, 331, 332, 337, 339, 340, 341,
	346, 347, 351, 357, 247, 209, 383, 391, 511, 307,
	214, 215, 216, 504, 505, 506, 507, 547, 548, 552,
	453, 454, 455, 456, 288, 541, 304, 459, 458, 326,
	327, 372, 441, 0, 198, 219, 361, 0, 445, 284,
	578, 546, 540, 205, 221, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 201,
	208, 220, 230, 234, 241, 257, 272, 274, 281, 294,
	305, 313, 314, 317, 323, 373, 379, 380, 381, 382,
	401, 402, 403, 406, 409, 410, 413, 415, 416, 419,
	423, 427, 428, 429, 431, 433, 435, 446, 451, 465,
	466, 467, 468, 469, 472, 473, 478, 479, 480, 481,
	482, 490, 491, 496, 519, 521, 534, 553, 559, 471,
	296, 297, 436, 437, 309, 310, 575, 576, 295, 529,
	560, 527, 574, 554, 430, 371, 0, 0, 544, 0,
	374, 277, 300, 315, 0, 545, 492, 225, 457, 286,
	249, 0, 0, 210, 244, 228, 255, 270, 273, 319,
	384, 392, 421, 426, 292, 267, 242, 450, 239, 475,
	499, 500, 501, 503, 388, 262, 425, 389, 0, 369,
	509, 510, 311, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 359,
	263, 0, 0, 422, 0, 204, 0, 477, 250, 370,
	367, 516, 278, 269, 265, 248, 312, 378, 420, 498,
	414, 0, 363, 0, 0, 487, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 246, 320, 203, 405, 488, 282, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 243, 0, 0,
	0, 344, 353, 352, 333, 334, 336, 338, 343, 350,
	356, 0, 0, 0, 0, 0, 261, 316, 268, 260,
	513, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 394, 253, 0, 0,
	444, 0, 0, 0, 556, 0, 0, 0, 0, 0,
	0, 0, 358, 0, 325, 199, 223, 0, 0, 404,
	452, 464, 0, 0, 0, 251, 0, 462, 418, 533,
	231, 280, 449, 424, 460, 432, 283, 0, 0, 461,
	365, 518, 442, 530, 557, 558, 259, 398, 542, 502,
	551, 577, 224, 256, 412, 495, 536, 484, 390, 514,
	515, 324, 483, 291, 202, 362, 563, 222, 470, 364,
	240, 229, 520, 539, 285, 447, 572, 211, 497, 528,
	237, 474, 0, 0, 579, 245, 494, 213, 525, 493,
	386, 321, 322, 212, 0, 448, 264, 289, 0, 0,
	254, 407, 522, 523, 252, 580, 226, 550, 218, 0,
	549, 400, 517, 526, 387, 376, 217, 524, 385, 375,
	329, 348, 349, 276, 302, 439, 368, 440, 301, 303,
	396, 395, 397, 206, 537, 0, 207, 0, 489, 538,
	581, 232, 233, 235, 0, 275, 279, 287, 290, 298,
	299, 308, 360, 411, 438, 434, 443, 0, 512, 531,
	543, 555, 561, 562, 564, 565, 566, 567, 568, 573,
	571, 569, 570, 399, 306, 485, 328, 366, 0, 0,
	417, 463, 238, 535, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 377, 476,
	532, 330, 342, 345, 335, 354, 0, 355, 331, 332,
	337, 339, 340, 341, 346, 347, 351, 357, 247, 209,
	383, 391, 511, 307, 214, 215, 216, 504, 505, 506,
	507, 547, 548, 552, 453, 454, 455, 456, 288, 541,
	304, 459, 458, 326, 327, 372, 441, 0, 198, 219,
	361, 1868, 445, 284, 578, 546, 540, 205, 221, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 201, 208, 220, 230, 234, 241, 257,
	272, 274, 281, 294, 305, 313, 314, 317, 323, 373,
	379, 380, 381, 382, 401, 402, 403, 406, 409, 410,
	413, 415, 416, 419, 423, 427, 428, 429, 431, 433,
	435, 446, 451, 465, 466, 467, 468, 469, 472, 473,
	478, 479, 480, 481, 482, 490, 491, 496, 519, 521,
	534, 553, 559, 471, 296, 297, 436, 437, 309, 310,
	575, 576, 295, 529, 560, 527, 574, 554, 430, 371,
	0, 0, 544, 0, 374, 277, 300, 315, 0, 545,
	492, 225, 457, 286, 249, 0, 0, 210, 244, 228,
	255, 270, 273, 319, 384, 392, 421, 426, 292, 267,
	242, 450, 239, 475, 499, 500, 501, 503, 388, 262,
	425, 389, 0, 369, 509, 510, 311, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 359, 263, 0, 0, 422, 0, 204,
	0, 477, 250, 370, 367, 516, 278, 269, 265, 248,
	312, 378, 420, 498, 414, 0, 363, 0, 0, 487,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 246, 320, 203,
	405, 488, 282, 0, 0, 0, 0, 1859, 655, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 243, 0, 0, 0, 344, 353, 352, 333, 334,
	336, 338, 343, 350, 356, 0, 0, 0, 0, 0,
	261, 316, 268, 260, 513, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	394, 253, 0, 0, 444, 0, 0, 0, 556, 0,
	0, 0, 0, 0, 0, 0, 358, 0, 325, 199,
	223, 0, 0, 404, 452, 464, 0, 0, 0, 251,
	0, 462, 418, 533, 231, 280, 449, 424, 460, 432,
	283, 0, 0, 461, 365, 518, 442, 530, 557, 558,
	259, 398, 542, 502, 551, 577, 224, 256, 412, 495,
	536, 484, 390, 514, 515, 324, 483, 291, 202, 362,
	563, 222, 470, 364, 240, 229, 520, 539, 285, 447,
	572, 211, 497, 528, 237, 474, 0, 0, 579, 245,
	494, 213, 525, 493, 386, 321, 322, 212, 0, 448,
	264, 289, 0, 0, 254, 407, 522, 523, 252, 580,
	226, 550, 218, 0, 549, 400, 517, 526, 387, 376,
	217, 524, 385, 375, 329, 348, 349, 276, 302, 439,
	368, 440, 301, 303, 396, 395, 397, 206, 537, 0,
	207, 0, 489, 538, 581, 232, 233, 235, 0, 275,
	279, 287, 290, 298, 299, 308, 360, 411, 438, 434,
	443, 0, 512, 531, 543, 555, 561, 562, 564, 565,
	566, 567, 568, 573, 571, 569, 570, 399, 306, 485,
	328, 366, 0, 0, 417, 463, 238, 535, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 377, 476, 532, 330, 342, 345, 335, 354,
	0, 355, 331, 332, 337, 339, 340, 341, 346, 347,
	351, 357, 247, 209, 383, 391, 511, 307, 214, 215,
	216, 504, 505, 506, 507, 547, 548, 552, 453, 454,
	455, 456, 288, 541, 304, 459, 458, 326, 327, 372,
	441, 0, 198, 219, 361, 0, 445, 284, 578, 546,
	540, 205, 221, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 201, 208, 220,
	230, 234, 241, 257, 272, 274, 281, 294, 305, 313,
	314, 317, 323, 373, 379, 380, 381, 382, 401, 402,
	403, 406, 409, 410, 413, 415, 416, 419, 423, 427,
	428, 429, 431, 433, 435, 446, 451, 465, 466, 467,
	468, 469, 472, 473, 478, 479, 480, 481, 482, 490,
	491, 496, 519, 521, 534, 553, 559, 471, 296, 297,
	436, 437, 309, 310, 575, 576, 295, 529, 560, 527,
	574, 554, 430, 371, 0, 0, 544, 0, 374, 277,
	300, 315, 0, 545, 492, 225, 457, 286, 249, 0,
	0, 210, 244, 228, 255, 270, 273, 319, 384, 392,
	421, 426, 292, 267, 242, 450, 239, 475, 499, 500,
	501, 503, 388, 262, 425, 389, 0, 369, 509, 510,
	311, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 0, 1716, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 359, 263, 0,
	0, 422, 0, 204, 0, 477, 250, 370, 367, 516,
	278, 269, 265, 248, 312, 378, 420, 498, 414, 0,
	363, 0, 0, 487, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 246, 320, 203, 405, 488, 282, 0, 0, 0,
	0, 0, 655, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 243, 0, 0, 0, 344,
	353, 352, 333, 334, 336, 338, 343, 350, 356, 0,
	0, 0, 0, 0, 261, 316, 268, 260, 513, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 394, 253, 0, 0, 444, 0,
	0, 0, 556, 0, 0, 0, 0, 0, 0, 0,
	358, 0, 325, 199, 223, 0, 0, 404, 452, 464,
	0, 0, 0, 251, 0, 462, 418, 533, 231, 280,
	449, 424, 460, 432, 283, 0, 0, 461, 365, 518,
	442, 530, 557, 558, 259, 398, 542, 502, 551, 577,
	224, 256, 412, 495, 536, 484, 390, 514, 515, 324,
	483, 291, 202, 362, 563, 222, 470, 364, 240, 229,
	520, 539, 285, 447, 572, 211, 497, 528, 237, 474,
	0, 0, 579, 245, 494, 213, 525, 493, 386, 321,
	322, 212, 0, 448, 264, 289, 0, 0, 254, 407,
	522, 523, 252, 580, 226, 550, 218, 0, 549, 400,
	517, 526, 387, 376, 217, 524, 385, 375, 329, 348,
	349, 276, 302, 439, 368, 440, 301, 303, 396, 395,
	397, 206, 537, 0, 207, 0, 489, 538, 581, 232,
	233, 235, 0, 275, 279, 287, 290, 298, 299, 308,
	360, 411, 438, 434, 443, 0, 512, 531, 543, 555,
	561, 562, 564, 565, 566, 567, 568, 573, 571, 569,
	570, 399, 306, 485, 328, 366, 0, 0, 417, 463,
	238, 535, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 377, 476, 532, 330,
	342, 345, 335, 354, 0, 355, 331, 332, 337, 339,
	340, 341, 346, 347, 351, 357, 247, 209, 383, 391,
	511, 307, 214, 215, 216, 504, 505, 506, 507, 547,
	548, 552, 453, 454, 455, 456, 288, 541, 304, 459,
	458, 326, 327, 372, 441, 0, 198, 219, 361, 0,
	445, 284, 578, 546, 540, 205, 221, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 201, 208, 220, 230, 234, 241, 257, 272, 274,
	281, 294, 305, 313, 314, 317, 323, 373, 379, 380,
	381, 382, 401, 402, 403, 406, 409, 410, 413, 415,
	416, 419, 423, 427, 428, 429, 431, 433, 435, 446,
	451, 465, 466, 467, 468, 469, 472, 473, 478, 479,
	480, 481, 482, 490, 491, 496, 519, 521, 534, 553,
	559, 471, 296, 297, 436, 437, 309, 310, 575, 576,
	295, 529, 560, 527, 574, 554, 430, 371, 0, 0,
	544, 0, 374, 277, 300, 315, 0, 545, 492, 225,
	457, 286, 249, 0, 0, 210, 244, 228, 255, 270,
	273, 319, 384, 392, 421, 426, 292, 267, 242, 450,
	239, 475, 499, 500, 501, 503, 388, 262, 425, 389,
	0, 369, 509, 510, 311, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 0, 1714,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 359, 263, 0, 0, 422, 0, 204, 0, 477,
	250, 370, 367, 516, 278, 269, 265, 248, 312, 378,
	420, 498, 414, 0, 363, 0, 0, 487, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 246, 320, 203, 405, 488,
	282, 0, 0, 0, 0, 0, 655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 243,
	0, 0, 0, 344, 353, 352, 333, 334, 336, 338,
	343, 350, 356, 0, 0, 0, 0, 0, 261, 316,
	268, 260, 513, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 394, 253,
	0, 0, 444, 0, 0, 0, 556, 0, 0, 0,
	0, 0, 0, 0, 358, 0, 325, 199, 223, 0,
	0, 404, 452, 464, 0, 0, 0, 251, 0, 462,
	418, 533, 231, 280, 449, 424, 460, 432, 283, 0,
	0, 461, 365, 518, 442, 530, 557, 558, 259, 398,
	542, 502, 551, 577, 224, 256, 412, 495, 536, 484,
	390, 514, 515, 324, 483, 291, 202, 362, 563, 222,
	470, 364, 240, 229, 520, 539, 285, 447, 572, 211,
	497, 528, 237, 474, 0, 0, 579, 245, 494, 213,
	525, 493, 386, 321, 322, 212, 0, 448, 264, 289,
	0, 0, 254, 407, 522, 523, 252, 580, 226, 550,
	218, 0, 549, 400, 517, 526, 387, 376, 217, 524,
	385, 375, 329, 348, 349, 276, 302, 439, 368, 440,
	301, 303, 396, 395, 397, 206, 537, 0, 207, 0,
	489, 538, 581, 232, 233, 235, 0, 275, 279, 287,
	290, 298, 299, 308, 360, 411, 438, 434, 443, 0,
	512, 531, 543, 555, 561, 562, 564, 565, 566, 567,
	568, 573, 571, 569, 570, 399, 306, 485, 328, 366,
	0, 0, 417, 463, 238, 535, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	377, 476, 532, 330, 342, 345, 335, 354, 0, 355,
	331, 332, 337, 339, 340, 341, 346, 347, 351, 357,
	247, 209, 383, 391, 511, 307, 214, 215, 216, 504,
	505, 506, 507, 547, 548, 552, 453, 454, 455, 456,
	288, 541, 304, 459, 458, 326, 327, 372, 441, 0,
	198, 219, 361, 0, 445, 284, 578, 546, 540, 205,
	221, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 201, 208, 220, 230, 234,
	241, 257, 272, 274, 281, 294, 305, 313, 314, 317,
	323, 373, 379, 380, 381, 382, 401, 402, 403, 406,
	409, 410, 413, 415, 416, 419, 423, 427, 428, 429,
	431, 433, 435, 446, 451, 465, 466, 467, 468, 469,
	472, 473, 478, 479, 480, 481, 482, 490, 491, 496,
	519, 521, 534, 553, 559, 471, 296, 297, 436, 437,
	309, 310, 575, 576, 295, 529, 560, 527, 574, 554,
	430, 371, 0, 0, 544, 0, 374, 277, 300, 315,
	0, 545, 492, 225, 457, 286, 249, 0, 0, 210,
	244, 228, 255, 270, 273, 319, 384, 392, 421, 426,
	292, 267, 242, 450, 239, 475, 499, 500, 501, 503,
	388, 262, 425, 389, 0, 369, 509, 510, 311, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 0, 1712, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 359, 263, 0, 0, 422,
	0, 204, 0, 477, 250, 370, 367, 516, 278, 269,
	265, 248, 312, 378, 420, 498, 414, 0, 363, 0,
	0, 487, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 246,
	320, 203, 405, 488, 282, 0, 0, 0, 0, 0,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 243, 0, 0, 0, 344, 353, 352,
	333, 334, 336, 338, 343, 350, 356, 0, 0, 0,
	0, 0, 261, 316, 268, 260, 513, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 394, 253, 0, 0, 444, 0, 0, 0,
	556, 0, 0, 0, 0, 0, 0, 0, 358, 0,
	325, 199, 223, 0, 0, 404, 452, 464, 0, 0,
	0, 251, 0, 462, 418, 533, 231, 280, 449, 424,
	460, 432, 283, 0, 0, 461, 365, 518, 442, 530,
	557, 558, 259, 398, 542, 502, 551, 577, 224, 256,
	412, 495, 536, 484, 390, 514, 515, 324, 483, 291,
	202, 362, 563, 222, 470, 364, 240, 229, 520, 539,
	285, 447, 572, 211, 497, 528, 237, 474, 0, 0,
	579, 245, 494, 213, 525, 493, 386, 321, 322, 212,
	0, 448, 264, 289, 0, 0, 254, 407, 522, 523,
	252, 580, 226, 550, 218, 0, 549, 400, 517, 526,
	387, 376, 217, 524, 385, 375, 329, 348, 349, 276,
	302, 439, 368, 440, 301, 303, 396, 395, 397, 206,
	537, 0, 207, 0, 489, 538, 581, 232, 233, 235,
	0, 275, 279, 287, 290, 298, 299, 308, 360, 411,
	438, 434, 443, 0, 512, 531, 543, 555, 561, 562,
	564, 565, 566, 567, 568, 573, 571, 569, 570, 399,
	306, 485, 328, 366, 0, 0, 417, 463, 238, 535,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 377, 476, 532, 330, 342, 345,
	335, 354, 0, 355, 331, 332, 337, 339, 340, 341,
	346, 347, 351, 357, 247, 209, 383, 391, 511, 307,
	214, 215, 216, 504, 505, 506, 507, 547, 548, 552,
	453, 454, 455, 456, 288, 541, 304, 459, 458, 326,
	327, 372, 441, 0, 198, 219, 361, 0, 445, 284,
	578, 546, 540, 205, 221, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 201,
	208, 220, 230, 234, 241, 257, 272, 274, 281, 294,
	305, 313, 314, 317, 323, 373, 379, 380, 381, 382,
	401, 402, 403, 406, 409, 410, 413, 415, 416, 419,
	423, 427, 428, 429, 431, 433, 435, 446, 451, 465,
	466, 467, 468, 469, 472, 473, 478, 479, 480, 481,
	482, 490, 491, 496, 519, 521, 534, 553, 559, 471,
	296, 297, 436, 437, 309, 310, 575, 576, 295, 529,
	560, 527, 574, 554, 430, 371, 0, 0, 544, 0,
	374, 277, 300, 315, 0, 545, 492, 225, 457, 286,
	249, 0, 0, 210, 244, 228, 255, 270, 273, 319,
	384, 392, 421, 426, 292, 267, 242, 450, 239, 475,
	499, 500, 501, 503, 388, 262, 425, 389, 0, 369,
	509, 510, 311, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 0, 1710, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 359,
	263, 0, 0, 422, 0, 204, 0, 477, 250, 370,
	367, 516, 278, 269, 265, 248, 312, 378, 420, 498,
	414, 0, 363, 0, 0, 487, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 246, 320, 203, 405, 488, 282, 0,
	0, 0, 0, 0, 655, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 243, 0, 0,
	0, 344, 353, 352, 333, 334, 336, 338, 343, 350,
	356, 0, 0, 0, 0, 0, 261, 316, 268, 260,
	513, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 394, 253, 0, 0,
	444, 0, 0, 0, 556, 0, 0, 0, 0, 0,
	0, 0, 358, 0, 325, 199, 223, 0, 0, 404,
	452, 464, 0, 0, 0, 251, 0, 462, 418, 533,
	231, 280, 449, 424, 460, 432, 283, 0, 0, 461,
	365, 518, 442, 530, 557, 558, 259, 398, 542, 502,
	551, 577, 224, 256, 412, 495, 536, 484, 390, 514,
	515, 324, 483, 291, 202, 362, 563, 222, 470, 364,
	240, 229, 520, 539, 285, 447, 572, 211, 497, 528,
	237, 474, 0, 0, 579, 245, 494, 213, 525, 493,
	386, 321, 322, 212, 0, 448, 264, 289, 0, 0,
	254, 407, 522, 523, 252, 580, 226, 550, 218, 0,
	549, 400, 517, 526, 387, 376, 217, 524, 385, 375,
	329, 348, 349, 276, 302, 439, 368, 440, 301, 303,
	396, 395, 397, 206, 537, 0, 207, 0, 489, 538,
	581, 232, 233, 235, 0, 275, 279, 287, 290, 298,
	299, 308, 360, 411, 438, 434, 443, 0, 512, 531,
	543, 555, 561, 562, 564, 565, 566, 567, 568, 573,
	571, 569, 570, 399, 306, 485, 328, 366, 0, 0,
	417, 463, 238, 535, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 377, 476,
	532, 330, 342, 345, 335, 354, 0, 355, 331, 332,
	337, 339, 340, 341, 346, 347, 351, 357, 247, 209,
	383, 391, 511, 307, 214, 215, 216, 504, 505, 506,
	507, 547, 548, 552, 453, 454, 455, 456, 288, 541,
	304, 459, 458, 326, 327, 372, 441, 0, 198, 219,
	361, 0, 445, 284, 578, 546, 540, 205, 221, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 201, 208, 220, 230, 234, 241, 257,
	272, 274, 281, 294, 305, 313, 314, 317, 323, 373,
	379, 380, 381, 382, 401, 402, 403, 406, 409, 410,
	413, 415, 416, 419, 423, 427, 428, 429, 431, 433,
	435, 446, 451, 465, 466, 467, 468, 469, 472, 473,
	478, 479, 480, 481, 482, 490, 491, 496, 519, 521,
	534, 553, 559, 471, 296, 297, 436, 437, 309, 310,
	575, 576, 295, 529, 560, 527, 574, 554, 430, 371,
	0, 0, 544, 0, 374, 277, 300, 315, 0, 545,
	492, 225, 457, 286, 249, 0, 0, 210, 244, 228,
	255, 270, 273, 319, 384, 392, 421, 426, 292, 267,
	242, 450, 239, 475, 499, 500, 501, 503, 388, 262,
	425, 389, 0, 369, 509, 510, 311, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 1708, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 359, 263, 0, 0, 422, 0, 204,
	0, 477, 250, 370, 367, 516, 278, 269, 265, 248,
	312, 378, 420, 498, 414, 0, 363, 0, 0, 487,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 246, 320, 203,
	405, 488, 282, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 243, 0, 0, 0, 344, 353, 352, 333, 334,
	336, 338, 343, 350, 356, 0, 0, 0, 0, 0,
	261, 316, 268, 260, 513, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	394, 253, 0, 0, 444, 0, 0, 0, 556, 0,
	0, 0, 0, 0, 0, 0, 358, 0, 325, 199,
	223, 0, 0, 404, 452, 464, 0, 0, 0, 251,
	0, 462, 418, 533, 231, 280, 449, 424, 460, 432,
	283, 0, 0, 461, 365, 518, 442, 530, 557, 558,
	259, 398, 542, 502, 551, 577, 224, 256, 412, 495,
	536, 484, 390, 514, 515, 324, 483, 291, 202, 362,
	563, 222, 470, 364, 240, 229, 520, 539, 285, 447,
	572, 211, 497, 528, 237, 474, 0, 0, 579, 245,
	494, 213, 525, 493, 386, 321, 322, 212, 0, 448,
	264, 289, 0, 0, 254, 407, 522, 523, 252, 580,
	226, 550, 218, 0, 549, 400, 517, 526, 387, 376,
	217, 524, 385, 375, 329, 348, 349, 276, 302, 439,
	368, 440, 301, 303, 396, 395, 397, 206, 537, 0,
	207, 0, 489, 538, 581, 232, 233, 235, 0, 275,
	279, 287, 290, 298, 299, 308, 360, 411, 438, 434,
	443, 0, 512, 531, 543, 555, 561, 562, 564, 565,
	566, 567, 568, 573, 571, 569, 570, 399, 306, 485,
	328, 366, 0, 0, 417, 463, 238, 535, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 377, 476, 532, 330, 342, 345, 335, 354,
	0, 355, 331, 332, 337, 339, 340, 341, 346, 347,
	351, 357, 247, 209, 383, 391, 511, 307, 214, 215,
	216, 504, 505, 506, 507, 547, 548, 552, 453, 454,
	455, 456, 288, 541, 304, 459, 458, 326, 327, 372,
	441, 0, 198, 219, 361, 0, 445, 284, 578, 546,
	540, 205, 221, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 201, 208, 220,
	230, 234, 241, 257, 272, 274, 281, 294, 305, 313,
	314, 317, 323, 373, 379, 380, 381, 382, 401, 402,
	403, 406, 409, 410, 413, 415, 416, 419, 423, 427,
	428, 429, 431, 433, 435, 446, 451, 465, 466, 467,
	468, 469, 472, 473, 478, 479, 480, 481, 482, 490,
	491, 496, 519, 521, 534, 553, 559, 471, 296, 297,
	436, 437, 309, 310, 575, 576, 295, 529, 560, 527,
	574, 554, 430, 371, 0, 0, 544, 0, 374, 277,
	300, 315, 0, 545, 492, 225, 457, 286, 249, 0,
	0, 210, 244, 228, 255, 270, 273, 319, 384, 392,
	421, 426, 292, 267, 242, 450, 239, 475, 499, 500,
	501, 503, 388, 262, 425, 389, 0, 369, 509, 510,
	311, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 0, 1704, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 359, 263, 0,
	0, 422, 0, 204, 0, 477, 250, 370, 367, 516,
	278, 269, 265, 248, 312, 378, 420, 498, 414, 0,
	363, 0, 0, 487, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 246, 320, 203, 405, 488, 282, 0, 0, 0,
	0, 0, 655, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 243, 0, 0, 0, 344,
	353, 352, 333, 334, 336, 338, 343, 350, 356, 0,
	0, 0, 0, 0, 261, 316, 268, 260, 513, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 394, 253, 0, 0, 444, 0,
	0, 0, 556, 0, 0, 0, 0, 0, 0, 0,
	358, 0, 325, 199, 223, 0, 0, 404, 452, 464,
	0, 0, 0, 251, 0, 462, 418, 533, 231, 280,
	449, 424, 460, 432, 283, 0, 0, 461, 365, 518,
	442, 530, 557, 558, 259, 398, 542, 502, 551, 577,
	224, 256, 412, 495, 536, 484, 390, 514, 515, 324,
	483, 291, 202, 362, 563, 222, 470, 364, 240, 229,
	520, 539, 285, 447, 572, 211, 497, 528, 237, 474,
	0, 0, 579, 245, 494, 213, 525, 493, 386, 321,
	322, 212, 0, 448, 264, 289, 0, 0, 254, 407,
	522, 523, 252, 580, 226, 550, 218, 0, 549, 400,
	517, 526, 387, 376, 217, 524, 385, 375, 329, 348,
	349, 276, 302, 439, 368, 440, 301, 303, 396, 395,
	397, 206, 537, 0, 207, 0, 489, 538, 581, 232,
	233, 235, 0, 275, 279, 287, 290, 298, 299, 308,
	360, 411, 438, 434, 443, 0, 512, 531, 543, 555,
	561, 562, 564, 565, 566, 567, 568, 573, 571, 569,
	570, 399, 306, 485, 328, 366, 0, 0, 417, 463,
	238, 535, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 377, 476, 532, 330,
	342, 345, 335, 354, 0, 355, 331, 332, 337, 339,
	340, 341, 346, 347, 351, 357, 247, 209, 383, 391,
	511, 307, 214, 215, 216, 504, 505, 506, 507, 547,
	548, 552, 453, 454, 455, 456, 288, 541, 304, 459,
	458, 326, 327, 372, 441, 0, 198, 219, 361, 0,
	445, 284, 578, 546, 540, 205, 221, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 201, 208, 220, 230, 234, 241, 257, 272, 274,
	281, 294, 305, 313, 314, 317, 323, 373, 379, 380,
	381, 382, 401, 402, 403, 406, 409, 410, 413, 415,
	416, 419, 423, 427, 428, 429, 431, 433, 435, 446,
	451, 465, 466, 467, 468, 469, 472, 473, 478, 479,
	480, 481, 482, 490, 491, 496, 519, 521, 534, 553,
	559, 471, 296, 297, 436, 437, 309, 310, 575, 576,
	295, 529, 560, 527, 574, 554, 430, 371, 0, 0,
	544, 0, 374, 277, 300, 315, 0, 545, 492, 225,
	457, 286, 249, 0, 0, 210, 244, 228, 255, 270,
	273, 319, 384, 392, 421, 426, 292, 267, 242, 450,
	239, 475, 499, 500, 501, 503, 388, 262, 425, 389,
	0, 369, 509, 510, 311, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 0, 1702,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 359, 263, 0, 0, 422, 0, 204, 0, 477,
	250, 370, 367, 516, 278, 269, 265, 248, 312, 378,
	420, 498, 414, 0, 363, 0, 0, 487, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 246, 320, 203, 405, 488,
	282, 0, 0, 0, 0, 0, 655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 243,
	0, 0, 0, 344, 353, 352, 333, 334, 336, 338,
	343, 350, 356, 0, 0, 0, 0, 0, 261, 316,
	268, 260, 513, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 394, 253,
	0, 0, 444, 0, 0, 0, 556, 0, 0, 0,
	0, 0, 0, 0, 358, 0, 325, 199, 223, 0,
	0, 404, 452, 464, 0, 0, 0, 251, 0, 462,
	418, 533, 231, 280, 449, 424, 460, 432, 283, 0,
	0, 461, 365, 518, 442, 530, 557, 558, 259, 398,
	542, 502, 551, 577, 224, 256, 412, 495, 536, 484,
	390, 514, 515, 324, 483, 291, 202, 362, 563, 222,
	470, 364, 240, 229, 520, 539, 285, 447, 572, 211,
	497, 528, 237, 474, 0, 0, 579, 245, 494, 213,
	525, 493, 386, 321, 322, 212, 0, 448, 264, 289,
	0, 0, 254, 407, 522, 523, 252, 580, 226, 550,
	218, 0, 549, 400, 517, 526, 387, 376, 217, 524,
	385, 375, 329, 348, 349, 276, 302, 439, 368, 440,
	301, 303, 396, 395, 397, 206, 537, 0, 207, 0,
	489, 538, 581, 232, 233, 235, 0, 275, 279, 287,
	290, 298, 299, 308, 360, 411, 438, 434, 443, 0,
	512, 531, 543, 555, 561, 562, 564, 565, 566, 567,
	568, 573, 571, 569, 570, 399, 306, 485, 328, 366,
	0, 0, 417, 463, 238, 535, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	377, 476, 532, 330, 342, 345, 335, 354, 0, 355,
	331, 332, 337, 339, 340, 341, 346, 347, 351, 357,
	247, 209, 383, 391, 511, 307, 214, 215, 216, 504,
	505, 506, 507, 547, 548, 552, 453, 454, 455, 456,
	288, 541, 304, 459, 458, 326, 327, 372, 441, 0,
	198, 219, 361, 0, 445, 284, 578, 546, 540, 205,
	221, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 201, 208, 220, 230, 234,
	241, 257, 272, 274, 281, 294, 305, 313, 314, 317,
	323, 373, 379, 380, 381, 382, 401, 402, 403, 406,
	409, 410, 413, 415, 416, 419, 423, 427, 428, 429,
	431, 433, 435, 446, 451, 465, 466, 467, 468, 469,
	472, 473, 478, 479, 480, 481, 482, 490, 491, 496,
	519, 521, 534, 553, 559, 471, 296, 297, 436, 437,
	309, 310, 575, 576, 295, 529, 560, 527, 574, 554,
	430, 371, 0, 0, 544, 0, 374, 277, 300, 315,
	0, 545, 492, 225, 457, 286, 249, 0, 0, 210,
	244, 228, 255, 270, 273, 319, 384, 392, 421, 426,
	292, 267, 242, 450, 239, 475, 499, 500, 501, 503,
	388, 262, 425, 389, 0, 369, 509, 510, 311, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 0, 1700, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 359, 263, 0, 0, 422,
	0, 204, 0, 477, 250, 370, 367, 516, 278, 269,
	265, 248, 312, 378, 420, 498, 414, 0, 363, 0,
	0, 487, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 246,
	320, 203, 405, 488, 282, 0, 0, 0, 0, 0,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 243, 0, 0, 0, 344, 353, 352,
	333, 334, 336, 338, 343, 350, 356, 0, 0, 0,
	0, 0, 261, 316, 268, 260, 513, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 394, 253, 0, 0, 444, 0, 0, 0,
	556, 0, 0, 0, 0, 0, 0, 0, 358, 0,
	325, 199, 223, 0, 0, 404, 452, 464, 0, 0,
	0, 251, 0, 462, 418, 533, 231, 280, 449, 424,
	460, 432, 283, 0, 0, 461, 365, 518, 442, 530,
	557, 558, 259, 398, 542, 502, 551, 577, 224, 256,
	412, 495, 536, 484, 390, 514, 515, 324, 483, 291,
	202, 362, 563, 222, 470, 364, 240, 229, 520, 539,
	285, 447, 572, 211, 497, 528, 237, 474, 0, 0,
	579, 245, 494, 213, 525, 493, 386, 321, 322, 212,
	0, 448, 264, 289, 0, 0, 254, 407, 522, 523,
	252, 580, 226, 550, 218, 0, 549, 400, 517, 526,
	387, 376, 217, 524, 385, 375, 329, 348, 349, 276,
	302, 439, 368, 440, 301, 303, 396, 395, 397, 206,
	537, 0, 207, 0, 489, 538, 581, 232, 233, 235,
	0, 275, 279, 287, 290, 298, 299, 308, 360, 411,
	438, 434, 443, 0, 512, 531, 543, 555, 561, 562,
	564, 565, 566, 567, 568, 573, 571, 569, 570, 399,
	306, 485, 328, 366, 0, 0, 417, 463, 238, 535,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 377, 476, 532, 330, 342, 345,
	335, 354, 0, 355, 331, 332, 337, 339, 340, 341,
	346, 347, 351, 357, 247, 209, 383, 391, 511, 307,
	214, 215, 216, 504, 505, 506, 507, 547, 548, 552,
	453, 454, 455, 456, 288, 541, 304, 459, 458, 326,
	327, 372, 441, 0, 198, 219, 361, 0, 445, 284,
	578, 546, 540, 205, 221, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 201,
	208, 220, 230, 234, 241, 257, 272, 274, 281, 294,
	305, 313, 314, 317, 323, 373, 379, 380, 381, 382,
	401, 402, 403, 406, 409, 410, 413, 415, 416, 419,
	423, 427, 428, 429, 431, 433, 435, 446, 451, 465,
	466, 467, 468, 469, 472, 473, 478, 479, 480, 481,
	482, 490, 491, 496, 519, 521, 534, 553, 559, 471,
	296, 297, 436, 437, 309, 310, 575, 576, 295, 529,
	560, 527, 574, 554, 430, 371, 0, 0, 544, 0,
	374, 277, 300, 315, 0, 545, 492, 225, 457, 286,
	249, 0, 0, 210, 244, 228, 255, 270, 273, 319,
	384, 392, 421, 426, 292, 267, 242, 450, 239, 475,
	499, 500, 501, 503, 388, 262, 425, 389, 0, 369,
	509, 510, 311, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 359,
	263, 0, 0, 422, 0, 204, 0, 477, 250, 370,
	367, 516, 278, 269, 265, 248, 312, 378, 420, 498,
	414, 0, 363, 0, 0, 487, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 246, 320, 203, 405, 488, 282, 0,
	1675, 0, 0, 0, 655, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 243, 0, 0,
	0, 344, 353, 352, 333, 334, 336, 338, 343, 350,
	356, 0, 0, 0, 0, 0, 261, 316, 268, 260,
	513, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 394, 253, 0, 0,
	444, 0, 0, 0, 556, 0, 0, 0, 0, 0,
	0, 0, 358, 0, 325, 199, 223, 0, 0, 404,
	452, 464, 0, 0, 0, 251, 0, 462, 418, 533,
	231, 280, 449, 424, 460, 432, 283, 0, 0, 461,
	365, 518, 442, 530, 557, 558, 259, 398, 542, 502,
	551, 577, 224, 256, 412, 495, 536, 484, 390, 514,
	515, 324, 483, 291, 202, 362, 563, 222, 470, 364,
	240, 229, 520, 539, 285, 447, 572, 211, 497, 528,
	237, 474, 0, 0, 579, 245, 494, 213, 525, 493,
	386, 321, 322, 212, 0, 448, 264, 289, 0, 0,
	254, 407, 522, 523, 252, 580, 226, 550, 218, 0,
	549, 400, 517, 526, 387, 376, 217, 524, 385, 375,
	329, 348, 349, 276, 302, 439, 368, 440, 301, 303,
	396, 395, 397, 206, 537, 0, 207, 0, 489, 538,
	581, 232, 233, 235, 0, 275, 279, 287, 290, 298,
	299, 308, 360, 411, 438, 434, 443, 0, 512, 531,
	543, 555, 561, 562, 564, 565, 566, 567, 568, 573,
	571, 569, 570, 399, 306, 485, 328, 366, 0, 0,
	417, 463, 238, 535, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 377, 476,
	532, 330, 342, 345, 335, 354, 0, 355, 331, 332,
	337, 339, 340, 341, 346, 347, 351, 357, 247, 209,
	383, 391, 511, 307, 214, 215, 216, 504, 505, 506,
	507, 547, 548, 552, 453, 454, 455, 456, 288, 541,
	304, 459, 458, 326, 327, 372, 441, 0, 198, 219,
	361, 0, 445, 284, 578, 546, 540, 205, 221, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 201, 208, 220, 230, 234, 241, 257,
	272, 274, 281, 294, 305, 313, 314, 317, 323, 373,
	379, 380, 381, 382, 401, 402, 403, 406, 409, 410,
	413, 415, 416, 419, 423, 427, 428, 429, 431, 433,
	435, 446, 451, 465, 466, 467, 468, 469, 472, 473,
	478, 479, 480, 481, 482, 490, 491, 496, 519, 521,
	534, 553, 559, 471, 296, 297, 436, 437, 309, 310,
	575, 576, 295, 529, 560, 527, 574, 554, 430, 371,
	0, 0, 544, 0, 374, 277, 300, 315, 0, 545,
	492, 225, 457, 286, 249, 0, 0, 210, 244, 228,
	255, 270, 273, 319, 384, 392, 421, 426, 292, 267,
	242, 450, 239, 475, 499, 500, 501, 503, 388, 262,
	425, 389, 0, 369, 509, 510, 311, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 1574, 266, 0,
	0, 0, 0, 359, 263, 0, 0, 422, 0, 204,
	0, 477, 250, 370, 367, 516, 278, 269, 265, 248,
	312, 378, 420, 498, 414, 0, 363, 0, 0, 487,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 246, 320, 203,
	405, 488, 282, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 243, 0, 0, 0, 344, 353, 352, 333, 334,
	336, 338, 343, 350, 356, 0, 0, 0, 0, 0,
	261, 316, 268, 260, 513, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	394, 253, 0, 0, 444, 0, 0, 0, 556, 0,
	0, 0, 0, 0, 0, 0, 358, 0, 325, 199,
	223, 0, 0, 404, 452, 464, 0, 0, 0, 251,
	0, 462, 418, 533, 231, 280, 449, 424, 460, 432,
	283, 0, 0, 461, 365, 518, 442, 530, 557, 558,
	259, 398, 542, 502, 551, 577, 224, 256, 412, 495,
	536, 484, 390, 514, 515, 324, 483, 291, 202, 362,
	563, 222, 470, 364, 240, 229, 520, 539, 285, 447,
	572, 211, 497, 528, 237, 474, 0, 0, 579, 245,
	494, 213, 525, 493, 386, 321, 322, 212, 0, 448,
	264, 289, 0, 0, 254, 407, 522, 523, 252, 580,
	226, 550, 218, 0, 549, 400, 517, 526, 387, 376,
	217, 524, 385, 375, 329, 348, 349, 276, 302, 439,
	368, 440, 301, 303, 396, 395, 397, 206, 537, 0,
	207, 0, 489, 538, 581, 232, 233, 235, 0, 275,
	279, 287, 290, 298, 299, 308, 360, 411, 438, 434,
	443, 0, 512, 531, 543, 555, 561, 562, 564, 565,
	566, 567, 568, 573, 571, 569, 570, 399, 306, 485,
	328, 366, 0, 0, 417, 463, 238, 535, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 377, 476, 532, 330, 342, 345, 335, 354,
	0, 355, 331, 332, 337, 339, 340, 341, 346, 347,
	351, 357, 247, 209, 383, 391, 511, 307, 214, 215,
	216, 504, 505, 506, 507, 547, 548, 552, 453, 454,
	455, 456, 288, 541, 304, 459, 458, 326, 327, 372,
	441, 0, 198, 219, 361, 0, 445, 284, 578, 546,
	540, 205, 221, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 201, 208, 220,
	230, 234, 241, 257, 272, 274, 281, 294, 305, 313,
	314, 317, 323, 373, 379, 380, 381, 382, 401, 402,
	403, 406, 409, 410, 413, 415, 416, 419, 423, 427,
	428, 429, 431, 433, 435, 446, 451, 465, 466, 467,
	468, 469, 472, 473, 478, 479, 480, 481, 482, 490,
	491, 496, 519, 521, 534, 553, 559, 471, 296, 297,
	436, 437, 309, 310, 575, 576, 295, 529, 560, 527,
	574, 554, 430, 371, 0, 0, 544, 0, 374, 277,
	300, 315, 0, 545, 492, 225, 457, 286, 249, 0,
	0, 210, 244, 228, 255, 270, 273, 319, 384, 392,
	421, 426, 292, 267, 242, 450, 239, 475, 499, 500,
	501, 503, 388, 262, 425, 389, 0, 369, 509, 510,
	311, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 359, 263, 0,
	0, 422, 0, 204, 0, 477, 250, 370, 367, 516,
	278, 269, 265, 248, 312, 378, 420, 498, 414, 0,
	363, 0, 0, 487, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 246, 320, 203, 405, 488, 282, 0, 97, 0,
	0, 0, 829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 243, 0, 0, 0, 344,
	353, 352, 333, 334, 336, 338, 343, 350, 356, 0,
	0, 0, 0, 0, 261, 316, 268, 260, 513, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 394, 253, 0, 0, 444, 0,
	0, 0, 556, 0, 0, 0, 0, 0, 0, 0,
	358, 0, 325, 199, 223, 0, 0, 404, 452, 464,
	0, 0, 0, 251, 0, 462, 418, 533, 231, 280,
	449, 424, 460, 432, 283, 0, 0, 461, 365, 518,
	442, 530, 557, 558, 259, 398, 542, 502, 551, 577,
	224, 256, 412, 495, 536, 484, 390, 514, 515, 324,
	483, 291, 202, 362, 563, 222, 470, 364, 240, 229,
	520, 539, 285, 447, 572, 211, 497, 528, 237, 474,
	0, 0, 579, 245, 494, 213, 525, 493, 386, 321,
	322, 212, 0, 448, 264, 289, 0, 0, 254, 407,
	522, 523, 252, 580, 226, 550, 218, 0, 549, 400,
	517, 526, 387, 376, 217, 524, 385, 375, 329, 348,
	349, 276, 302, 439, 368, 440, 301, 303, 396, 395,
	397, 206, 537, 0, 207, 0, 489, 538, 581, 232,
	233, 235, 0, 275, 279, 287, 290, 298, 299, 308,
	360, 411, 438, 434, 443, 0, 512, 531, 543, 555,
	561, 562, 564, 565, 566, 567, 568, 573, 571, 569,
	570, 399, 306, 485, 328, 366, 0, 0, 417, 463,
	238, 535, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 377, 476, 532, 330,
	342, 345, 335, 354, 0, 355, 331, 332, 337, 339,
	340, 341, 346, 347, 351, 357, 247, 209, 383, 391,
	511, 307, 214, 215, 216, 504, 505, 506, 507, 547,
	548, 552, 453, 454, 455, 456, 288, 541, 304, 459,
	458, 326, 327, 372, 441, 0, 198, 219, 361, 0,
	445, 284, 578, 546, 540, 205, 221, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 201, 208, 220, 230, 234, 241, 257, 272, 274,
	281, 294, 305, 313, 314, 317, 323, 373, 379, 380,
	381, 382, 401, 402, 403, 406, 409, 410, 413, 415,
	416, 419, 423, 427, 428, 429, 431, 433, 435, 446,
	451, 465, 466, 467, 468, 469, 472, 473, 478, 479,
	480, 481, 482, 490, 491, 496, 519, 521, 534, 553,
	559, 471, 296, 297, 436, 437, 309, 310, 575, 576,
	295, 529, 560, 527, 574, 554, 430, 371, 0, 0,
	544, 0, 374, 277, 300, 315, 0, 545, 492, 225,
	457, 286, 249, 0, 0, 210, 244, 228, 255, 270,
	273, 319, 384, 392, 421, 426, 292, 267, 242, 450,
	239, 475, 499, 500, 501, 503, 388, 262, 425, 389,
	0, 369, 509, 510, 311, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 359, 263, 0, 0, 422, 0, 204, 0, 477,
	250, 370, 367, 516, 278, 269, 265, 248, 312, 378,
	420, 498, 414, 0, 363, 0, 0, 487, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 246, 320, 203, 405, 488,
	282, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 243,
	0, 0, 0, 344, 353, 352, 333, 334, 336, 338,
	343, 350, 356, 0, 0, 0, 0, 0, 261, 316,
	268, 260, 513, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1322, 0, 293, 0, 394, 253,
	0, 0, 444, 0, 0, 0, 556, 0, 0, 0,
	0, 0, 0, 0, 358, 0, 325, 199, 223, 0,
	0, 404, 452, 464, 0, 0, 0, 251, 0, 462,
	418, 533, 231, 280, 449, 424, 460, 432, 283, 0,
	0, 461, 365, 518, 442, 530, 557, 558, 259, 398,
	542, 502, 551, 577, 224, 256, 412, 495, 536, 484,
	390, 514, 515, 324, 483, 291, 202, 362, 563, 222,
	470, 364, 240, 229, 520, 539, 285, 447, 572, 211,
	497, 528, 237, 474, 0, 0, 579, 245, 494, 213,
	525, 493, 386, 321, 322, 212, 0, 448, 264, 289,
	0, 0, 254, 407, 522, 523, 252, 580, 226, 550,
	218, 0, 549, 400, 517, 526, 387, 376, 217, 524,
	385, 375, 329, 348, 349, 276, 302, 439, 368, 440,
	301, 303, 396, 395, 397, 206, 537, 0, 207, 0,
	489, 538, 581, 232, 233, 235, 0, 275, 279, 287,
	290, 298, 299, 308, 360, 411, 438, 434, 443, 0,
	512, 531, 543, 555, 561, 562, 564, 565, 566, 567,
	568, 573, 571, 569, 570, 399, 306, 485, 328, 366,
	0, 0, 417, 463, 238, 535, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	377, 476, 532, 330, 342, 345, 335, 354, 0, 355,
	331, 332, 337, 339, 340, 341, 346, 347, 351, 357,
	247, 209, 383, 391, 511, 307, 214, 215, 216, 504,
	505, 506, 507, 547, 548, 552, 453, 454, 455, 456,
	288, 541, 304, 459, 458, 326, 327, 372, 441, 0,
	198, 219, 361, 0, 445, 284, 578, 546, 540, 205,
	221, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 201, 208, 220, 230, 234,
	241, 257, 272, 274, 281, 294, 305, 313, 314, 317,
	323, 373, 379, 380, 381, 382, 401, 402, 403, 406,
	409, 410, 413, 415, 416, 419, 423, 427, 428, 429,
	431, 433, 435, 446, 451, 465, 466, 467, 468, 469,
	472, 473, 478, 479, 480, 481, 482, 490, 491, 496,
	519, 521, 534, 553, 559, 471, 296, 297, 436, 437,
	309, 310, 575, 576, 1321, 529, 560, 527, 574, 554,
	430, 371, 0, 0, 544, 0, 374, 277, 300, 315,
	0, 545, 492, 225, 457, 286, 249, 0, 0, 210,
	244, 228, 255, 270, 273, 319, 384, 392, 421, 426,
	292, 267, 242, 450, 239, 475, 499, 500, 501, 503,
	388, 262, 425, 389, 0, 369, 509, 510, 311, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 359, 263, 0, 0, 422,
	0, 204, 0, 477, 250, 370, 367, 516, 278, 269,
	265, 248, 312, 378, 420, 498, 414, 0, 363, 0,
	0, 487, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 246,
	320, 203, 405, 488, 282, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 243, 0, 0, 0, 344, 353, 352,
	333, 334, 336, 338, 343, 350, 356, 0, 0, 0,
	0, 0, 261, 316, 268, 260, 513, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 394, 253, 0, 0, 444, 0, 0, 0,
	556, 0, 0, 0, 0, 0, 0, 0, 358, 0,
	325, 199, 223, 0, 0, 404, 452, 464, 0, 0,
	0, 251, 0, 462, 418, 533, 231, 280, 449, 424,
	460, 432, 283, 0, 0, 461, 365, 518, 442, 530,
	557, 558, 259, 398, 542, 502, 551, 577, 224, 256,
	412, 495, 536, 484, 390, 514, 515, 324, 483, 291,
	202, 362, 563, 222, 470, 364, 240, 229, 520, 539,
	285, 447, 572, 211, 497, 528, 237, 474, 0, 0,
	579, 245, 494, 213, 525, 493, 386, 321, 322, 212,
	0, 448, 264, 289, 0, 0, 254, 407, 522, 523,
	252, 580, 226, 550, 218, 0, 549, 400, 517, 526,
	387, 376, 217, 524, 385, 375, 329, 348, 349, 276,
	302, 439, 368, 440, 301, 303, 396, 395, 397, 206,
	537, 0, 207, 0, 489, 538, 581, 232, 233, 235,
	0, 275, 279, 287, 290, 298, 299, 308, 360, 411,
	438, 434, 443, 0, 512, 531, 543, 555, 561, 562,
	564, 565, 566, 567, 568, 573, 571, 569, 570, 399,
	306, 485, 328, 366, 0, 0, 417, 463, 238, 535,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 377, 476, 532, 330, 342, 345,
	335, 354, 0, 355, 331, 332, 337, 339, 340, 341,
	346, 347, 351, 357, 247, 209, 383, 391, 511, 307,
	214, 215, 216, 504, 505, 506, 507, 547, 548, 552,
	453, 454, 455, 456, 288, 541, 304, 459, 458, 326,
	327, 372, 441, 0, 198, 219, 361, 0, 445, 284,
	578, 546, 540, 205, 221, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 915, 0, 0, 0, 200, 201,
	208, 220, 230, 234, 241, 257, 272, 274, 281, 294,
	305, 313, 314, 317, 323, 373, 379, 380, 381, 382,
	401, 402, 403, 406, 409, 410, 413, 415, 416, 419,
	423, 427, 428, 429, 431, 433, 435, 446, 451, 465,
	466, 467, 468, 469, 472, 473, 478, 479, 480, 481,
	482, 490, 491, 496, 519, 521, 534, 553, 559, 471,
	296, 297, 436, 437, 309, 310, 575, 576, 295, 529,
	560, 527, 574, 554, 430, 371, 0, 0, 544, 0,
	374, 277, 300, 315, 0, 545, 492, 225, 457, 286,
	249, 0, 0, 210, 244, 228, 255, 270, 273, 319,
	384, 392, 421, 426, 292, 267, 242, 450, 239, 475,
	499, 500, 501, 503, 388, 262, 425, 389, 0, 369,
	509, 510, 311, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 359,
	263, 0, 0, 422, 0, 204, 0, 477, 250, 370,
	367, 516, 278, 269, 265, 248, 312, 378, 420, 498,
	414, 0, 363, 0, 0, 487, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 246, 320, 203, 405, 488, 282, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 243, 0, 0,
	0, 344, 353, 352, 333, 334, 336, 338, 343, 350,
	356, 0, 0, 0, 0, 0, 261, 316, 268, 260,
	513, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 394, 253, 0, 0,
	444, 0, 603, 0, 556, 0, 0, 0, 0, 0,
	0, 0, 358, 0, 325, 199, 223, 0, 0, 404,
	452, 464, 0, 0, 0, 251, 0, 462, 418, 533,
	231, 280, 449, 424, 460, 432, 283, 0, 0, 461,
	365, 518, 442, 530, 557, 558, 259, 398, 542, 502,
	551, 577, 224, 256, 412, 495, 536, 484, 390, 514,
	515, 324, 483, 291, 202, 362, 563, 222, 470, 364,
	240, 229, 520, 539, 285, 447, 572, 211, 497, 528,
	237, 474, 0, 0, 579, 245, 494, 213, 525, 493,
	386, 321, 322, 212, 0, 448, 264, 289, 0, 0,
	254, 407, 522, 523, 252, 580, 226, 550, 218, 0,
	549, 400, 517, 526, 387, 376, 217, 524, 385, 375,
	329, 348, 349, 276, 302, 439, 368, 440, 301, 303,
	396, 395, 397, 206, 537, 0, 207, 0, 489, 538,
	581, 232, 233, 235, 0, 275, 279, 287, 290, 298,
	299, 308, 360, 411, 438, 434, 443, 0, 512, 531,
	543, 555, 561, 562, 564, 565, 566, 567, 568, 573,
	571, 569, 570, 399, 306, 485, 328, 366, 0, 0,
	417, 463, 238, 535, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 377, 476,
	532, 330, 342, 345, 335, 354, 0, 355, 331, 332,
	337, 339, 340, 341, 346, 347, 351, 357, 247, 209,
	383, 391, 511, 307, 214, 215, 216, 504, 505, 506,
	507, 547, 548, 552, 453, 454, 455, 456, 288, 541,
	304, 459, 458, 326, 327, 372, 441, 0, 198, 219,
	361, 0, 445, 284, 578, 546, 540, 205, 221, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 201, 208, 220, 230, 234, 241, 257,
	272, 274, 281, 294, 305, 313, 314, 317, 323, 373,
	379, 380, 381, 382, 401, 402, 403, 406, 409, 410,
	413, 415, 416, 419, 423, 427, 428, 429, 431, 433,
	435, 446, 451, 465, 466, 467, 468, 469, 472, 473,
	478, 479, 480, 481, 482, 490, 491, 496, 519, 521,
	534, 553, 559, 471, 296, 297, 436, 437, 309, 310,
	575, 576, 295, 529, 560, 527, 574, 554, 430, 371,
	0, 0, 544, 0, 374, 277, 300, 315, 0, 545,
	492, 225, 457, 286, 249, 0, 0, 210, 244, 228,
	255, 270, 273, 319, 384, 392, 421, 426, 292, 267,
	242, 450, 239, 475, 499, 500, 501, 503, 388, 262,
	425, 389, 0, 369, 509, 510, 311, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 359, 263, 0, 0, 422, 0, 204,
	0, 477, 250, 370, 367, 516, 278, 269, 265, 248,
	312, 378, 420, 498, 414, 0, 363, 0, 0, 487,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 246, 320, 203,
	405, 488, 282, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 243, 0, 0, 0, 344, 353, 352, 333, 334,
	336, 338, 343, 350, 356, 0, 0, 0, 0, 0,
	261, 316, 268, 260, 513, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	394, 253, 0, 0, 444, 0, 0, 0, 556, 0,
	0, 0, 0, 0, 0, 0, 358, 0, 325, 199,
	223, 0, 0, 404, 452, 464, 0, 0, 0, 251,
	0, 462, 418, 533, 231, 280, 449, 424, 460, 432,
	283, 0, 0, 461, 365, 518, 442, 530, 557, 558,
	259, 398, 542, 502, 551, 577, 224, 256, 412, 495,
	536, 484, 390, 514, 515, 324, 483, 291, 202, 362,
	563, 222, 470, 364, 240, 229, 520, 539, 285, 447,
	572, 211, 497, 528, 237, 474, 0, 0, 579, 245,
	494, 213, 525, 493, 386, 321, 322, 212, 0, 448,
	264, 289, 0, 0, 254, 407, 522, 523, 252, 580,
	226, 550, 218, 0, 549, 400, 517, 526, 387, 376,
	217, 524, 385, 375, 329, 348, 349, 276, 302, 439,
	368, 440, 301, 303, 396, 395, 397, 206, 537, 0,
	207, 0, 489, 538, 581, 232, 233, 235, 0, 275,
	279, 287, 290, 298, 299, 308, 360, 411, 438, 434,
	443, 0, 512, 531, 543, 555, 561, 562, 564, 565,
	566, 567, 568, 573, 571, 569, 570, 399, 306, 485,
	328, 366, 0, 0, 417, 463, 238, 535, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 377, 476, 532, 330, 342, 345, 335, 354,
	0, 355, 331, 332, 337, 339, 340, 341, 346, 347,
	351, 357, 247, 209, 383, 391, 511, 307, 214, 215,
	216, 504, 505, 506, 507, 547, 548, 552, 453, 454,
	455, 456, 288, 541, 304, 459, 458, 326, 327, 372,
	441, 0, 198, 219, 361, 0, 445, 284, 578, 546,
	540, 205, 221, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 201, 208, 220,
	230, 234, 241, 257, 272, 274, 281, 294, 305, 313,
	314, 317, 323, 373, 379, 380, 381, 382, 3503, 402,
	403, 406, 409, 410, 413, 415, 416, 419, 423, 427,
	428, 429, 431, 433, 435, 446, 451, 465, 466, 467,
	468, 469, 472, 473, 478, 479, 480, 481, 482, 490,
	491, 496, 519, 521, 534, 553, 559, 471, 296, 297,
	436, 437, 309, 310, 575, 576, 295, 529, 560, 527,
	574, 554, 430, 371, 0, 0, 544, 0, 374, 277,
	300, 315, 0, 545, 492, 225, 457, 286, 249, 0,
	0, 210, 244, 228, 255, 270, 273, 319, 384, 392,
	421, 426, 292, 267, 242, 450, 239, 475, 499, 500,
	501, 503, 388, 262, 425, 389, 0, 369, 509, 510,
	311, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 359, 263, 0,
	0, 422, 0, 204, 0, 477, 250, 370, 367, 516,
	278, 269, 265, 248, 312, 378, 420, 498, 414, 0,
	363, 0, 0, 487, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 246, 320, 203, 405, 488, 282, 0, 0, 0,
	0, 0, 655, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 243, 0, 0, 0, 344,
	353, 352, 333, 334, 336, 338, 343, 350, 356, 0,
	0, 0, 0, 0, 261, 316, 268, 260, 513, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 394, 253, 0, 0, 444, 0,
	0, 0, 556, 0, 0, 0, 0, 0, 0, 0,
	358, 0, 325, 199, 223, 0, 0, 404, 452, 464,
	0, 0, 0, 251, 0, 462, 418, 533, 231, 280,
	449, 424, 460, 432, 283, 0, 0, 461, 365, 518,
	442, 530, 557, 558, 259, 398, 542, 502, 551, 577,
	224, 256, 412, 495, 536, 484, 390, 514, 515, 324,
	483, 291, 202, 362, 563, 222, 470, 364, 240, 229,
	520, 539, 285, 447, 572, 211, 497, 528, 237, 474,
	0, 0, 579, 245, 494, 213, 525, 493, 386, 321,
	322, 212, 0, 448, 264, 289, 0, 0, 254, 407,
	522, 523, 252, 580, 226, 550, 218, 0, 549, 400,
	517, 526, 387, 376, 217, 524, 385, 375, 329, 348,
	349, 276, 302, 439, 368, 440, 301, 303, 396, 395,
	397, 206, 537, 0, 207, 0, 489, 538, 581, 232,
	233, 235, 0, 275, 279, 287, 290, 298, 299, 308,
	360, 411, 438, 434, 443, 0, 512, 531, 543, 555,
	561, 562, 564, 565, 566, 567, 568, 573, 571, 569,
	570, 399, 306, 485, 328, 366, 0, 0, 417, 463,
	238, 535, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 377, 476, 532, 330,
	342, 345, 335, 354, 0, 355, 331, 332, 337, 339,
	340, 341, 346, 347, 351, 357, 247, 209, 383, 391,
	511, 307, 214, 215, 216, 504, 505, 506, 507, 547,
	548, 552, 453, 454, 455, 456, 288, 541, 304, 459,
	458, 326, 327, 372, 441, 0, 198, 219, 361, 0,
	445, 284, 578, 546, 540, 205, 221, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 201, 208, 220, 230, 234, 241, 257, 272, 274,
	281, 294, 305, 313, 314, 317, 323, 373, 379, 380,
	381, 382, 401, 402, 403, 406, 409, 410, 413, 415,
	416, 419, 423, 427, 428, 429, 431, 433, 435, 446,
	451, 465, 466, 467, 468, 469, 472, 473, 478, 479,
	480, 481, 482, 490, 491, 496, 519, 521, 534, 553,
	559, 471, 296, 297, 436, 437, 309, 310, 575, 576,
	295, 529, 560, 527, 574, 554, 430, 371, 0, 0,
	544, 0, 374, 277, 300, 315, 0, 545, 492, 225,
	457, 286, 249, 0, 0, 210, 244, 228, 255, 270,
	273, 319, 384, 392, 421, 426, 292, 267, 242, 450,
	239, 475, 499, 500, 501, 503, 388, 262, 425, 389,
	0, 369, 509, 510, 311, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 359, 263, 0, 0, 422, 0, 204, 0, 477,
	250, 370, 367, 516, 278, 269, 265, 248, 312, 378,
	420, 498, 414, 0, 363, 0, 0, 487, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 246, 320, 203, 405, 488,
	282, 0, 0, 0, 0, 0, 829, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 243,
	0, 0, 0, 344, 353, 352, 333, 334, 336, 338,
	343, 350, 356, 0, 0, 0, 0, 0, 261, 316,
	268, 260, 513, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 394, 253,
	0, 0, 444, 0, 0, 0, 556, 0, 0, 0,
	0, 0, 0, 0, 358, 0, 325, 199, 223, 0,
	0, 404, 452, 464, 0, 0, 0, 251, 0, 462,
	418, 533, 231, 280, 449, 424, 460, 432, 283, 0,
	0, 461, 365, 518, 442, 530, 557, 558, 259, 398,
	542, 502, 551, 577, 224, 256, 412, 495, 536, 484,
	390, 514, 515, 324, 483, 291, 202, 362, 563, 222,
	470, 364, 240, 229, 520, 539, 285, 447, 572, 211,
	497, 528, 237, 474, 0, 0, 579, 245, 494, 213,
	525, 493, 386, 321, 322, 212, 0, 448, 264, 289,
	0, 0, 254, 407, 522, 523, 252, 580, 226, 550,
	218, 0, 549, 400, 517, 526, 387, 376, 217, 524,
	385, 375, 329, 348, 349, 276, 302, 439, 368, 440,
	301, 303, 396, 395, 397, 206, 537, 0, 207, 0,
	489, 538, 581, 232, 233, 235, 0, 275, 279, 287,
	290, 298, 299, 308, 360, 411, 438, 434, 443, 0,
	512, 531, 543, 555, 561, 562, 564, 565, 566, 567,
	568, 573, 571, 569, 570, 399, 306, 485, 328, 366,
	0, 0, 417, 463, 238, 535, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	377, 476, 532, 330, 342, 345, 335, 354, 0, 355,
	331, 332, 337, 339, 340, 341, 346, 347, 351, 357,
	247, 209, 383, 391, 511, 307, 214, 215, 216, 504,
	505, 506, 507, 547, 548, 552, 453, 454, 455, 456,
	288, 541, 304, 459, 458, 326, 327, 372, 441, 0,
	198, 219, 361, 0, 445, 284, 578, 546, 540, 205,
	221, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 201, 208, 220, 230, 234,
	241, 257, 272, 274, 281, 294, 305, 313, 314, 317,
	323, 373, 379, 380, 381, 382, 401, 402, 403, 406,
	409, 410, 413, 415, 416, 419, 423, 427, 428, 429,
	431, 433, 435, 446, 451, 465, 466, 467, 468, 469,
	472, 473, 478, 479, 480, 481, 482, 490, 491, 496,
	519, 521, 534, 553, 559, 471, 296, 297, 436, 437,
	309, 310, 575, 576, 295, 529, 560, 527, 574, 554,
	430, 371, 0, 0, 544, 0, 374, 277, 300, 315,
	0, 545, 492, 225, 457, 286, 249, 0, 0, 210,
	244, 228, 255, 270, 273, 319, 384, 392, 421, 426,
	292, 267, 242, 450, 239, 475, 499, 500, 501, 503,
	388, 262, 425, 389, 0, 369, 509, 510, 311, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 359, 263, 0, 0, 422,
	0, 204, 0, 477, 250, 370, 367, 516, 278, 269,
	265, 248, 312, 378, 420, 498, 414, 0, 363, 0,
	0, 487, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 246,
	320, 203, 405, 488, 282, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 243, 0, 0, 0, 344, 353, 352,
	333, 334, 336, 338, 343, 350, 356, 0, 0, 0,
	0, 0, 261, 316, 268, 260, 513, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 394, 253, 0, 0, 444, 0, 0, 0,
	556, 0, 0, 0, 0, 0, 0, 0, 358, 0,
	325, 199, 223, 0, 0, 404, 452, 464, 0, 0,
	0, 251, 0, 462, 418, 533, 231, 280, 449, 424,
	460, 432, 283, 0, 0, 461, 365, 518, 442, 530,
	557, 558, 259, 398, 542, 502, 551, 577, 224, 256,
	412, 495, 536, 484, 390, 514, 515, 324, 483, 291,
	202, 362, 563, 222, 470, 364, 240, 229, 520, 539,
	285, 447, 572, 211, 497, 528, 237, 474, 0, 0,
	579, 245, 494, 213, 525, 493, 386, 321, 322, 212,
	0, 448, 264, 289, 0, 0, 254, 407, 522, 523,
	252, 580, 226, 550, 218, 0, 549, 400, 517, 526,
	387, 376, 217, 524, 385, 375, 329, 348, 349, 276,
	302, 439, 368, 440, 301, 303, 396, 395, 397, 206,
	537, 0, 207, 0, 489, 538, 581, 232, 233, 235,
	0, 275, 279, 287, 290, 298, 299, 308, 360, 411,
	438, 434, 443, 0, 512, 531, 543, 555, 561, 562,
	564, 565, 566, 567, 568, 573, 571, 569, 570, 399,
	306, 485, 328, 366, 0, 0, 417, 463, 238, 535,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 377, 476, 532, 330, 342, 345,
	335, 354, 0, 355, 331, 332, 337, 339, 340, 341,
	346, 347, 351, 357, 247, 209, 383, 391, 511, 307,
	214, 215, 216, 504, 505, 506, 507, 547, 548, 552,
	453, 454, 455, 456, 288, 541, 304, 459, 458, 326,
	327, 372, 441, 0, 198, 219, 361, 0, 445, 284,
	578, 546, 540, 205, 221, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 201,
	208, 220, 230, 234, 241, 257, 272, 274, 281, 294,
	305, 313, 314, 317, 323, 373, 379, 380, 381, 382,
	401, 402, 403, 406, 409, 410, 413, 415, 416, 419,
	423, 427, 428, 429, 431, 433, 435, 446, 451, 465,
	466, 467, 468, 469, 472, 473, 478, 479, 480, 481,
	482, 490, 491, 496, 519, 521, 534, 553, 559, 471,
	296, 297, 436, 437, 309, 310, 575, 576, 295, 529,
	560, 527, 574, 554, 430, 371, 0, 0, 544, 0,
	374, 277, 300, 315, 0, 545, 492, 225, 457, 286,
	249, 0, 0, 210, 244, 228, 255, 270, 273, 319,
	384, 392, 421, 426, 292, 267, 242, 450, 239, 475,
	499, 500, 501, 503, 388, 262, 425, 0, 0, 369,
	509, 510, 311,
}

var yyPact = [...]int{
	-1000, -1000, 5465, -1000, -457, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2184, 2365, -1000, -1000, -1000, -1000, 2363, -1000,
	786, 1776, -1000, 2110, 4058, -1000, 47049, 569, -1000, 44393,
	567, 566, 143, -101, 165, 29785, -1000, 209, -1000, 199,
	45721, 205, -1000, -1000, -1000, -1000, -337, 18495, 2046, 77,
	76, 47049, -1000, -1000, -1000, -1000, 2319, 1778, -1000, 388,
	-1000, -1000, -1000, -1000, -1000, -1000, 43729, -1000, 919, -1000,
	-1000, 2117, 2167, 2369, 707, 2047, -1000, 2239, 1778, -1000,
	18495, 2305, 2200, 17831, 17831, 506, -1000, -1000, 177, -1000,
	-1000, 25137, 47049, 32441, 460, -1000, 2110, -1000, -1000, -1000,
	106, -1000, 397, 1682, -1000, 1681, -1000, 952, 1032, 421,
	538, 534, 410, 408, 407, 406, 405, 404, 403, 402,
	432, -1000, 748, 748, -162, -166, 4096, 498, 464, 464,
	724, 528, 2079, 2068, -1000, -1000, 748, 748, 748, 369,
	748, 748, 748, 748, 364, 360, 748, 748, 748, 748,
	748, 748, 748, 748, 748, 748, 748, 748, 748, 748,
	748, 748, 748, 536, 2110, 337, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 47049, 246, 47049, -1000, 619, 47049, 47049, -1000, 1064,
	1047, -1000, -1000, 873, -1000, 873, 112, 873, 873, 873,
	873, 224, 700, 70, -1000, 212, 333, 276, 311, 860,
	375, -1000, -1000, 299, 860, 1480, -1000, 725, 309, 188,
	-1000, 873, 873, -1000, -1000, 11830, 170, 11830, 11830, -1000,
	2100, -1000, -1000, -1000, -1000, -1000, 1071, -1000, -1000, -1000,
	-1000, -4, 523, -1000, -1000, -1000, -1000, 45721, 43065, 275,
	-1000, -1000, 55, -1000, -1000, 1532, 1264, 18495, 1302, -1000,
	1711, 675, -1000, -1000, -1000, -1000, -1000, 587, -1000, 19159,
	19159, 19159, 19159, -1000, -1000, 1685, 42401, 1685, 1685, 19159,
	1685, -1000, 19159, 1685, 1685, 1685, 18495, 1685, 1685, 1685,
	1685, -1000, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685,
	1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685,
	1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685,
	1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685,
	1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685,
	1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685,
	1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685,
	-1000, -1000, -1000, -1000, 1685, 614, 1685, 1685, 1685, 1685,
	1685, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1685,
	1685, 1685, 1685, 1685, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1685, 1685, 1685, 1685, 1685, 1685, 1685,
	1685, 1685, 1685, 1685, 1685, 1685, 1685, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21151, 1198,
	1195, 1189, -1000, 15839, 1685, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 47049, -1000, 1685, 228, 45721,
	45721, 391, 2239, 1778, -1000, 2319, 2288, 388, -1000, 2882,
	1464, 1285, 1229, 1778, 1659, 47049, -1000, 1690, -1000, -1000,
	-1000, -1000, 1922, 1135, 1462, -1000, -1000, -1000, -1000, 1427,
	18495, -1000, -1000, 2342, -1000, 22480, 612, 2335, 41737, -1000,
	506, 506, 1680, 430, 36, -1000, -1000, -1000, -1000, 779,
	29121, -1000, -1000, -1000, -1000, 1580, 47049, -1000, -1000, 5229,
	1077, -1000, 1774, -1000, 1565, -1000, 1715, 18495, 1785, 565,
	1077, 549, 546, 545, -1000, -29, -1000, -1000, -1000, -1000,
	-1000, -1000, 748, 748, 748, -1000, 427, 2303, 4058, 4803,
	-1000, -1000, -1000, 41073, 1770, 1077, -1000, 1756, -1000, 845,
	589, 642, 642, 1077, -1000, -1000, 46385, 1077, 844, 842,
	1077, 1077, 45721, 45721, -1000, 40409, -1000, 39745, 39081, 1045,
	45721, 38417, 37753, 37089, 36425, 35761, -1000, 2084, -1000, 1896,
	-1000, -1000, -1000, 46385, 1077, 1077, 46385, 45721, 46385, 47049,
	1077, -1000, -1000, 347, -1000, -1000, 1031, 1029, 1028, 748,
	748, 1025, 1456, 1441, 1432, 748, 748, 1023, 1410, 31113,
	1408, 344, 1021, 1015, 1014, 1107, 1405, 208, 1403, 1080,
	1011, 1013, 45721, 1753, 47049, -1000, 295, 746, 570, 776,
	2110, 2012, 1675, 521, 560, 1077, 484, 484, 45721, -1000,
	13840, -1000, 510, -1000, -1000, -1000, -1000, 1401, 18495, -1000,
	868, 860, 860, -1000, -1000, -1000, -1000, -1000, -1000, 873,
	47049, 868, -1000, -1000, -1000, 860, 873, 47049, 873, 873,
	873, 873, 860, 860, 860, 873, 47049, 47049, 47049, 47049,
	47049, 47049, 47049, 47049, 47049, 11830, 725, 873, -343, -1000,
	1394, -1000, -1000, 1921, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 11830, 11830, -1000, -1000,
	-1000, -1000, -1000, 1673, -1000, 197, 23, 203, -1000, 35097,
	390, 769, -1000, 390, -1000, -1000, -1000, 1672, 34433, -1000,
	-350, -352, -366, -367, -1000, -1000, -1000, -1000, -368, -373,
	-1000, -1000, -1000, 18495, 18495, 18495, 18495, -191, -1000, 874,
	19159, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 151, 829,
	19159, 19159, 19159, 19159, 19159, 19159, 19159, 19159, 19159, 19159,
	19159, 19159, 19159, 19159, 19159, -1000, -1000, 27129, 3844, 3844,
	675, 675, 675, 675, -1000, -99, 1665, 46385, -1000, -1000,
	-1000, 611, 18495, 18495, 675, -1000, 1077, 15839, 19823, 17831,
	17831, 18495, 792, 1264, 46385, 18495, -1000, 1229, -1000, -1000,
	-1000, 948, -1000, 898, 2087, 2087, 2087, 2087, 18495, 18495,
	18495, 18495, 18495, 18495, 18495, 18495, 18495, 18495, 2087, 45721,
	45721, 908, 18495, 18495, 18495, 18495, 18495, 18495, 14510, 18495,
	18495, 19159, 18495, 18495, 18495, 1229, 18495, 18495, 18495, 18495,
	18495, 18495, 18495, 18495, 18495, 18495, 18495, 18495, 18495, 18495,
	18495, 18495, 18495, 18495, 18495, 18495, 18495, 18495, 18495, 18495,
	18495, 18495, 18495, 1229, 18495, 1053, 18495, 18495, 17831, 13170,
	17831, 17831, 17831, 17831, 17831, -1000, -1000, -1000, -1000, -1000,
	18495, 18495, 18495, 18495, 18495, 18495, 18495, 18495, 1229, 18495,
	18495, 18495, 18495, 18495, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1469, 1455, 1235, 18495, -1000, 1664,
	-1000, -121, 24473, 18495, 1374, 2331, 1842, 45721, -1000, -1000,
	-1000, 2239, -1000, 2239, 1469, 2383, 1967, 17831, -1000, -1000,
	2383, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1431,
	-1000, 47049, 1659, 2196, 45721, 1963, 1340, 449, -1000, 18495,
	18495, 1639, -1000, 1187, 47049, -1000, -191, -1000, 33769, -1000,
	-1000, 11160, 47049, 400, 47049, -1000, 23809, 33105, 181, -1000,
	36, 1613, -1000, 48, 20, 15174, 671, -1000, -1000, -1000,
	4096, 20487, 1489, 671, 113, -1000, -1000, -1000, 1715, -1000,
	1715, 1715, 1715, 1715, 449, 449, 449, 449, -1000, -1000,
	-1000, -1000, -1000, 1744, 1741, -1000, 1715, 1715, 1715, 1715,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1740, 1740, 1740,
	1738, 1738, 1716, 1716, 473, -1000, 18495, 363, 32441, 2127,
	1009, 1763, 295, 497, 1841, 1077, 1077, 1077, 497, -1000,
	1221, 1180, 1165, -1000, -449, 1635, -1000, -1000, 2293, -1000,
	-1000, 758, 872, 870, 1132, 45721, 248, 384, -1000, 456,
	-1000, 32441, 1077, 841, 642, 1077, -1000, 1077, -1000, -1000,
	-1000, -1000, -1000, 1077, -1000, -1000, 1627, -1000, 1678, 943,
	857, 923, 856, 1627, -1000, -1000, -103, 1627, -1000, 1627,
	-1000, 1627, -1000, 1627, -1000, 1627, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 783, 202, -254, 45721, 248,
	519, -1000, 518, 27129, -1000, -1000, -1000, 27129, 27129, -1000,
	-1000, -1000, -1000, 1337, 1312, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -434, 47049, -1000, 283, 768, 371,
	414, 321, 47049, 230, 2220, 2215, 2203, 2202, 2186, 308,
	345, 47049, 47049, 484, 1909, 47049, 2166, 47049, -1000, -1000,
	-1000, -1000, 468, 47049, -1000, 328, -1000, -1000, -1000, -1000,
	-1000, -1000, 1264, 47049, -1000, -1000, 873, 873, -1000, -1000,
	47049, 873, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	873, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 47049, -1000, -1000, -1000,
	-1000, -4, 194, -1000, -1000, 45721, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -42, -1000, 98, 44, 378,
	-1000, -1000, -1000, -1000, -1000, 2231, -1000, 1264, 819, 815,
	-1000, 1685, -1000, -1000, 940, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 151, 19159, 19159, 19159, 1805, 537, 1722, 1459,
	1227, 1268, 1268, 1126, 1126, 682, 682, 682, 682, 682,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1298, -1000,
	1685, 46385, 1559, 13170, 2093, 1225, 1229, 2843, -1000, 1557,
	-1000, 1557, 1547, 807, -1000, 18495, 1229, 2839, -1000, -1000,
	1229, 1229, 1229, 18495, -1000, -1000, 18495, 18495, 18495, 18495,
	1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763,
	18495, 1624, 1622, 2324, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1651, 1763, 1763, 1763, 1763,
	1763, 18495, 1691, -1000, -1000, -1000, 1249, 2827, 1370, 2821,
	1763, 1763, -1000, 1763, 2814, 2810, 1229, 1532, 1229, 1621,
	-1000, 2800, 1763, 2794, 2734, 2700, 2131, 2682, 2678, 2674,
	1763, 1763, 1763, 2099, 2670, 2661, 2637, 2633, 2517, 2491,
	2428, 2351, 2337, 1763, -194, 1763, 1229, -1000, -1000, -1000,
	-1000, -1000, 2329, 2070, 1229, 1616, 1685, 606, -1000, -1000,
	1557, 1229, 1229, 1557, 1557, 2322, 2318, 2311, 2302, 2282,
	2263, 1763, 1763, -1000, 1763, 2255, 2195, 2056, 2043, 1229,
	-1000, 1235, 47049, -1000, -323, -1000, 26, 693, 1685, -1000,
	31113, 1229, -1000, 3578, -1000, 1036, -1000, -1000, -1000, -1000,
	-1000, 28457, 1626, 2383, -1000, -1000, 1685, 1530, -1000, -1000,
	449, 96, 27793, 667, 667, 129, 1264, 1264, 18495, -1000,
	-1000, -1000, -1000, -1000, -1000, 605, 2314, 387, 1685, -1000,
	1654, 2298, -1000, -1000, -1000, 2187, 21816, -1000, -1000, 1685,
	1685, 47049, 1625, 1595, -1000, 604, -1000, 1079, 1613, 36,
	17, -1000, -1000, -1000, -1000, 1264, -1000, 1123, 401, 613,
	-1000, 472, -1000, -1000, -1000, -1000, 2060, 102, -1000, -1000,
	-1000, 271, 449, -1000, -1000, -1000, -1000, -1000, -1000, 1293,
	1293, -1000, -1000, -1000, -1000, -1000, 1006, -1000, -1000, -1000,
	-1000, 1005, -1000, -1000, 1004, -1000, -1000, 2179, 1816, 363,
	-1000, -1000, 748, 1289, -1000, -1000, 2062, 748, 748, 45721,
	-1000, -1000, 1487, 2127, 283, 47049, 800, 1886, -1000, 1841,
	1841, 1841, 47049, -1000, -1000, -1000, -1000, -1000, -1000, -436,
	79, 386, -1000, -1000, -1000, 4123, 45721, 1504, -1000, 231,
	-1000, 1484, -1000, 45721, -1000, 1502, 1733, 1077, 1077, -1000,
	-1000, -1000, 45721, 1685, -1000, -1000, -1000, -1000, 539, 2107,
	277, -1000, -1000, -211, -1000, -1000, 248, 231, 46385, 1077,
	671, -1000, -1000, -1000, -1000, -1000, -437, 1500, 543, 254,
	340, 47049, 47049, 47049, 47049, 47049, 588, -1000, -1000, 60,
	-1000, -1000, 219, -1000, -1000, -1000, -1000, 219, -1000, -1000,
	-1000, -1000, 310, 513, -1000, 47049, 47049, 657, -1000, -1000,
	-1000, -1000, -1000, -1000, 860, -1000, -1000, 860, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2096, 47049, 40, -394, -1000, -391, 18495, -1000, -1000, -1000,
	-1000, 1017, 529, 1722, 19159, 19159, 19159, -1000, -1000, -1000,
	739, 739, 27129, -1000, 18495, 17831, -1000, -1000, 18495, 18495,
	747, -1000, 18495, 1094, -1000, 18495, -1000, -1000, -1000, 1235,
	1763, 1763, 1763, 1763, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1592, 18495, 18495, 18495, 1229, 324,
	-1000, -1000, -1000, -1000, -1000, 2320, -1000, 18495, -1000, 27129,
	18495, 18495, 18495, -1000, -1000, -1000, 18495, 18495, -1000, -1000,
	18495, 18495, -1000, 18495, 18495, 18495, -1000, 18495, 18495, 18495,
	18495, -1000, -1000, -1000, -1000, 18495, 18495, 18495, 18495, 18495,
	18495, 18495, 18495, 18495, 18495, -1000, -1000, 32441, 74, -194,
	1053, 74, 1053, -1000, 17831, 12500, -1000, -1000, -1000, -1000,
	-1000, 18495, 18495, 18495, 18495, 18495, 18495, -1000, -1000, -1000,
	18495, 18495, -1000, 18495, -1000, 18495, -1000, -1000, -1000, -1000,
	-1000, 693, -1000, 642, 642, 642, 45721, -1000, -1000, -1000,
	-1000, 1612, -1000, 2266, -1000, 1977, 1975, 2317, 2314, -1000,
	23809, 2383, -1000, -1000, 45721, -315, -1000, 2014, 2143, 667,
	667, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 10490, 2239,
	18495, 1885, 46385, 156, -1000, 23145, 45721, 46385, 23809, 23809,
	23809, 23809, 23809, -1000, 1949, 1945, -1000, 1953, 1927, 2010,
	47049, -1000, 1469, 1471, -1000, 18495, 25801, 1517, 23809, -1000,
	-1000, 23809, 47049, 9820, -1000, -1000, 28, 14, -1000, -1000,
	-1000, -1000, 4096, -1000, -1000, 735, 2180, 2050, -1000, -1000,
	-1000, -1000, -1000, 1460, -1000, 1440, 1609, 1430, 1425, 202,
	-1000, 1784, 2091, 748, 748, -1000, 996, -1000, 1077, 1283,
	1251, -1000, -1000, -1000, 535, -1000, 2141, 47049, 1873, 1871,
	1863, -1000, -446, 994, 1730, 1727, 18495, 1724, 2292, 1594,
	45721, -1000, -1000, 46385, -1000, 179, -1000, 363, 45721, -1000,
	-1000, -1000, 384, 47049, -1000, 7706, -1000, -1000, -1000, 231,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 47049, 260, -1000,
	1717, 1069, -1000, -1000, 1823, -1000, -1000, -1000, -1000, 235,
	368, 1243, 214, 1240, 214, -1000, 47049, 651, 1816, 47049,
	-1000, -1000, -1000, 873, 873, -1000, -1000, 2072, -1000, 1077,
	1763, 19159, 19159, -1000, 675, 467, -173, 1715, 1715, -1000,
	1715, 1716, -1000, 1715, 186, 1715, 167, 1715, -1000, -1000,
	1229, 1229, 1235, -1000, 2039, 1201, -1000, 1264, 18495, 2175,
	-1000, -1000, -1000, -1000, -1000, -40, 2116, 2089, 1763, -1000,
	1714, 1712, 18495, 1763, 1229, 2034, 1763, 1763, 1763, 1763,
	-1000, 1264, 1235, 1767, 1235, 1763, 1763, 1666, 319, 1763,
	1417, 1417, 1417, 1417, 1417, 1235, 1235, 1235, 1235, 45721,
	-1000, -194, -1000, -1000, -236, -246, -1000, 1229, -194, 1608,
	1229, -1000, 2011, 2007, 1577, 1999, 1763, 1519, 1763, 1763,
	1763, 1917, -1000, 2226, 2226, 2226, 1398, 1036, 47049, -1000,
	-1000, -1000, -1000, 2314, 2291, 1597, -1000, -1000, 96, 428,
	-1000, 2028, 2143, -1000, 2290, 2031, 2285, -1000, -1000, -1000,
	-1000, -1000, 1264, -1000, 2112, 1587, -1000, 756, 1571, -1000,
	-1000, 17167, 1414, 1971, 603, 1398, 1658, 2298, 1838, 1862,
	2040, -1000, -1000, -1000, -1000, 1943, -1000, 1933, -1000, -1000,
	1690, -1000, 1385, 400, 23809, 1633, 1633, -1000, 601, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 888, 6925, 2368, -1000,
	1211, -1000, 1118, 204, 992, -1000, -1000, 748, 748, -1000,
	840, 831, -1000, 47049, 1710, -1000, 449, 1202, 449, 990,
	-1000, -1000, 989, -1000, -1000, -1000, -1000, 1751, 1951, -1000,
	-1000, -1000, -1000, 47049, -1000, -1000, 47049, 47049, 47049, 1709,
	2280, -1000, 18495, 1704, 750, 2162, 45721, 45721, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 494,
	748, -414, 342, 341, 748, 748, 748, -448, -1000, -1000,
	1392, 1387, -1000, -130, -1000, 18495, -1000, -1000, -1000, 967,
	967, 1198, 1195, 1189, -1000, 1690, -1000, -1000, -1000, 1476,
	-1000, -1000, -109, 45721, 45721, 45721, 45721, -1000, -1000, 983,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 675, 1229, 352, -111, 1229, -1000, -1000, 449,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	18495, -1000, 18495, -1000, 1264, 18495, 2239, 1159, 18495, 18495,
	-1000, 988, 987, 1763, -1000, -1000, -1000, 18495, -1000, -1000,
	-1000, -1000, -1000, 18495, -1000, -1000, -1000, 18495, 216, 739,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1229, 394, -1000, -1000, -1000, -1000, 2316, -1000, 1229, 18495,
	-1000, -1000, 18495, -1000, 18495, 18495, -1000, 18495, -1000, 18495,
	-1000, -1000, -1000, -1000, 18495, 1685, 2054, 1685, 1685, 25801,
	-1000, -1000, 2291, 2310, 2273, 1986, 1997, 1997, 2028, -1000,
	2271, 2268, -1000, 1154, 2267, 1149, 828, -1000, 46385, 18495,
	156, -1000, 396, 45721, 156, 45721, -1000, 2283, -1000, -1000,
	18495, 1702, -1000, 18495, -1000, -1000, -1000, -1000, 3844, 2314,
	1633, -1000, -1000, 688, -1000, 18495, -1000, -1000, -1000, 8359,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1147, 1144,
	-1000, -1000, 1697, 18495, -1000, -1000, -1000, 1472, 1418, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1690, -1000, -1000,
	-1000, -1000, 384, -441, 2153, 45721, 973, -1000, 1380, 1594,
	379, 156, 1140, 748, 748, 748, 956, 953, 31113, 1378,
	-1000, 45721, 446, -1000, 384, -1000, -168, -170, 1763, -1000,
	-1000, 2170, -1000, -1000, 12500, -1000, -1000, 1689, 1829, -1000,
	-1000, -1000, -1000, 1955, -100, -127, -1000, -1000, 1763, 1763,
	1163, 1229, -1000, 1763, 1763, 1381, 1356, -1000, 1763, 1235,
	1907, -1000, 216, 1229, 1858, -1000, -1000, 3844, -1000, -1000,
	2283, 2251, 74, -1000, -1000, 241, 74, 1264, 1771, 1763,
	1758, 1640, 1763, 1763, 26465, -1000, 2249, 2244, 31777, 31777,
	693, 2310, -201, 18495, 18495, 1984, 926, -1000, -1000, -1000,
	-1000, 1138, 1128, -1000, 1121, -1000, 2345, -1000, 1264, -1000,
	156, -1000, 596, 1571, -1000, 2239, 1264, 45721, 1264, 89,
	2283, -1000, 1763, -1000, 1685, 1685, 1685, 1685, 1685, 1685,
	1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685,
	1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685,
	1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685,
	1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685,
	1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685,
	1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685,
	1685, 1685, 1685, 1685, -1000, -1000, 45721, 1925, -1000, -1000,
	2168, 1362, 78, -1000, 1282, 1594, -1000, -1000, 155, -1000,
	18495, -1000, 31113, 1114, 1111, -1000, -1000, -1000, -1000, -448,
	-1000, -1000, -1000, -1000, -1000, -1000, 388, 1593, -1000, 734,
	45721, 47049, -1000, 1929, -1000, -1000, -1000, 18495, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 18495, -1000, 1229, 1857,
	-1000, -279, -1000, -417, 18495, -194, -1000, -1000, -194, -1000,
	18495, -1000, -1000, 18495, -1000, 18495, -1000, -1000, 1355, -1000,
	-1000, -1000, -1000, -1000, 1355, 1355, -1000, -201, -1000, 1591,
	-1000, 45721, 1264, 1532, -1000, 925, -1000, -1000, -1000, -1000,
	-1000, 46385, 1571, 45721, -1000, 1321, 1229, 1685, 2239, -1000,
	1281, -1000, 388, -1000, 1687, 1727, -1000, -1000, -1000, 16503,
	-1000, -1000, -1000, -1000, -1000, 206, -108, 12500, 9150, 1247,
	-1000, -104, 1763, 1235, -1000, -377, -1000, -1000, -1000, -1000,
	180, -1000, -1000, 1532, -1000, -1000, 1583, 1497, 1475, 30449,
	-1000, -1000, -1000, -1000, -201, -1000, -1000, 2163, -1000, -1000,
	1509, -1000, -1000, 25801, 45057, -1000, -96, 366, -108, 18495,
	1686, 1229, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1, -1000, -1000, -1000, -1000, -1000, 1823, -116, -1000, -1000,
	-1000, 187, -397, -220, -242, -1000, -1000, 19159, -1000, 18495,
	-1000, 18495, -1000, 18495, -1000, -1000, -1000, 45721, 1685, -1000,
	1232, -1000, 4610, -248, 1856, -1000, -73, -1000, -1000, -1000,
	881, 1087, -1000, -1000, -1000, -1000, -1000, -1000, 1825, 45721,
	-1000, 462, -1000, -1000, -109, -154, 813, -1000, -1000, -1000,
	-1000, -1000, 1467, 1287, 1763, -1000, 45721, -1000, 45057, -241,
	671, 3844, -1000, 1848, 1826, 2339, -1000, -1000, -1000, -1000,
	-1000, -1000, -454, 1228, 291, -1000, -1000, 187, -1000, 18495,
	-1000, 18495, -1000, 1229, -1000, -1000, 2133, 89, -1000, 2341,
	-1000, 2330, 691, 691, -1000, 939, -454, -1000, -1000, 1763,
	1763, -1000, -250, -1000, -1000, -1000, -1000, -1000, 457, 955,
	-1000, -1000, -1000, -1000, -1000, 3844, -1000, -1000, -1000, 217,
	217, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2986, 2983, 27, 6, 35, 34, 2977, 44, 106,
	204, 51, 222, 108, 2976, 187, 2975, 2974, 2972, 2971,
	2970, 2967, 2411, 2400, 2398, 2965, 2961, 2959, 2958, 2957,
	2954, 2945, 2944, 2943, 2940, 188, 192, 206, 2938, 2932,
	2930, 133, 207, 97, 101, 208, 2929, 2928, 88, 2926,
	2925, 2923, 203, 202, 200, 850, 2920, 199, 123, 66,
	2914, 2913, 2912, 2911, 2910, 2908, 2905, 2901, 2900, 2899,
	2897, 2896, 2891, 2890, 2887, 2881, 2880, 2879, 2874, 2872,
	339, 2871, 2867, 19, 2864, 91, 2863, 2862, 2855, 2854,
	2853, 7, 2852, 2851, 13, 42, 2850, 2848, 56, 2844,
	2840, 2835, 2832, 2828, 15, 2827, 24, 2826, 38, 2810,
	2808, 141, 2806, 2805, 2801, 39, 2796, 2794, 2793, 2791,
	2787, 2785, 2784, 151, 2781, 2780, 2777, 186, 210, 2773,
	2767, 182, 117, 119, 2761, 2760, 109, 209, 2759, 135,
	2757, 2753, 2752, 168, 2750, 2151, 2746, 2735, 77, 71,
	2732, 50, 2730, 2726, 4, 90, 75, 3, 83, 1,
	2723, 2720, 76, 96, 2709, 115, 2702, 2692, 116, 78,
	2690, 114, 111, 2688, 2687, 17, 23, 2685, 37, 31,
	26, 74, 2684, 2683, 120, 2680, 2679, 2670, 105, 2669,
	2668, 2161, 2667, 107, 150, 113, 92, 2666, 52, 79,
	2664, 2661, 2657, 2655, 2653, 57, 2652, 2649, 2648, 148,
	193, 181, 2647, 46, 45, 63, 149, 2644, 60, 98,
	212, 184, 2643, 2636, 152, 144, 2634, 2631, 72, 48,
	40, 2619, 127, 147, 138, 64, 122, 157, 2613, 2611,
	65, 87, 2608, 2604, 2600, 2598, 185, 2592, 2590, 82,
	2589, 69, 2588, 183, 2587, 10, 67, 2586, 49, 177,
	2578, 86, 2577, 2574, 80, 128, 81, 36, 2572, 174,
	180, 142, 179, 2571, 2566, 58, 2565, 2562, 2561, 214,
	308, 2560, 2551, 100, 195, 155, 167, 102, 2545, 314,
	2543, 2542, 104, 2, 5150, 2541, 41, 176, 2539, 2537,
	5925, 154, 43, 20, 2533, 129, 2532, 2530, 2528, 2527,
	211, 189, 130, 178, 70, 2526, 2522, 2518, 14, 2517,
	2507, 2503, 2500, 2499, 2498, 131, 33, 32, 30, 254,
	85, 18, 112, 175, 170, 94, 2497, 2496, 2494, 140,
	110, 2491, 173, 172, 145, 163, 2489, 194, 159, 136,
	2486, 190, 29, 2485, 2484, 2482, 2481, 103, 2480, 2475,
	2474, 2467, 169, 160, 139, 95, 2466, 93, 137, 161,
	165, 53, 2462, 61, 2458, 2456, 28, 205, 25, 2455,
	12, 118, 164, 2454, 4344, 197, 2446, 16, 319, 162,
	2445, 2442, 8, 9, 11, 2440, 2436, 2435, 2433, 143,
	2429, 2428, 2427, 2420, 22, 55, 21, 5, 121, 89,
	2419, 2418, 156, 158, 2413, 2393, 2391, 2385, 3106, 0,
	146, 2378, 213,
}

//line sql.y:8112
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) checkOptionsUnion() CheckOptions {
	v, _ := st.union.(CheckOptions)
	return v
}

func (st *yySymType) checkTypeUnion() CheckType {
	v, _ := st.union.(CheckType)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 416, 417, 417, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 261, 384, 385, 385, 259, 259, 33, 75,
	35, 35, 34, 34, 37, 37, 36, 8, 8, 8,
	9, 9, 9, 9, 9, 9, 9, 9, 10, 10,
	10, 10, 10, 11, 11, 11, 11, 13, 13, 13,
	13, 13, 20, 21, 12, 12, 22, 22, 109, 109,
	23, 24, 24, 24, 24, 420, 420, 186, 186, 184,
	184, 185, 185, 264, 264, 25, 268, 268, 270, 270,
	270, 270, 260, 260, 260, 26, 26, 269, 269, 271,
	271, 271, 274, 274, 274, 274, 313, 313, 313, 27,
	27, 27, 27, 27, 129, 129, 387, 387, 386, 380,
	380, 379, 379, 378, 383, 383, 382, 382, 381, 39,
	40, 49, 49, 49, 49, 50, 51, 388, 388, 353,
	56, 56, 55, 55, 55, 55, 55, 55, 57, 57,
	53, 53, 52, 52, 54, 54, 355, 355, 341, 341,
	354, 354, 354, 354, 354, 354, 354, 340, 340, 140,
	140, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 403, 403,
	403, 402, 402, 239, 239, 239, 239, 239, 239, 239,
	239, 150, 150, 162, 162, 162, 162, 162, 148, 148,
	149, 147, 147, 147, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 407, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 161, 161, 157, 157, 157, 158, 158,
	158, 159, 159, 404, 404, 404, 404, 318, 318, 318,
	318, 321, 321, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 320, 320, 320, 320, 320, 320, 320, 322,
	322, 322, 322, 322, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	324, 324, 324, 324, 324, 324, 324, 324, 339, 339,
	325, 325, 333, 333, 334, 334, 335, 335, 335, 336,
	336, 336, 337, 337, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 332, 332, 331, 331, 331, 342, 367,
	367, 366, 366, 364, 364, 364, 364, 364, 364, 364,
	364, 351, 351, 361, 361, 361, 361, 361, 350, 350,
	346, 346, 346, 347, 347, 348, 348, 345, 345, 349,
	349, 363, 363, 362, 362, 343, 343, 344, 344, 369,
	405, 405, 405, 405, 405, 406, 406, 370, 395, 397,
	397, 397, 396, 396, 393, 394, 392, 392, 392, 392,
	392, 85, 85, 85, 287, 287, 288, 288, 359, 359,
	358, 358, 358, 360, 360, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 282, 282, 282, 391,
	391, 391, 391, 391, 391, 390, 390, 390, 356, 356,
	356, 389, 389, 58, 58, 219, 219, 408, 408, 409,
	409, 409, 46, 46, 46, 46, 46, 46, 45, 45,
	45, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 47, 47, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 111, 111, 112, 112, 112, 112, 114, 114,
	114, 372, 372, 59, 59, 3, 3, 174, 176, 177,
	177, 175, 175, 175, 175, 175, 175, 61, 61, 60,
	60, 179, 178, 180, 180, 180, 1, 1, 2, 2,
	4, 4, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 338, 338, 338, 371, 371, 373,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	117, 116, 116, 115, 118, 118, 118, 118, 118, 118,
	118, 118, 375, 375, 375, 62, 62, 376, 326, 327,
	328, 5, 6, 352, 374, 125, 125, 29, 38, 38,
	30, 30, 30, 30, 31, 31, 63, 64, 415, 415,
	68, 68, 68, 69, 69, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 281,
	281, 290, 290, 280, 280, 305, 305, 305, 283, 283,
	283, 284, 284, 401, 401, 401, 277, 277, 66, 66,
	66, 306, 306, 306, 306, 70, 70, 410, 410, 411,
	411, 412, 412, 412, 71, 72, 72, 308, 308, 309,
	309, 73, 74, 86, 86, 86, 86, 86, 86, 86,
	87, 87, 87, 87, 110, 110, 110, 15, 15, 15,
	15, 82, 82, 82, 14, 14, 17, 67, 67, 76,
	398, 398, 399, 400, 400, 400, 400, 77, 79, 32,
	32, 32, 32, 32, 32, 135, 135, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	130, 130, 130, 124, 124, 421, 80, 81, 81, 128,
	128, 128, 121, 121, 121, 127, 127, 127, 16, 16,
	18, 263, 263, 19, 19, 132, 132, 134, 134, 134,
	134, 134, 136, 136, 136, 136, 136, 136, 136, 131,
	131, 133, 133, 133, 133, 298, 298, 298, 297, 297,
	168, 168, 170, 169, 169, 171, 171, 172, 172, 172,
	172, 217, 217, 194, 194, 256, 256, 257, 257, 255,
	255, 262, 262, 258, 258, 258, 258, 265, 265, 173,
	173, 173, 173, 181, 181, 182, 182, 183, 183, 307,
	307, 303, 303, 303, 302, 302, 187, 187, 187, 189,
	188, 188, 188, 188, 190, 190, 192, 192, 191, 191,
	193, 198, 198, 197, 197, 195, 195, 195, 195, 196,
	196, 196, 196, 199, 199, 145, 145, 145, 145, 145,
	145, 145, 160, 160, 160, 160, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 246, 246, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 154, 222, 222,
	221, 221, 88, 88, 88, 89, 89, 90, 90, 90,
	90, 90, 91, 91, 91, 91, 91, 146, 146, 93,
	93, 92, 92, 212, 212, 295, 295, 94, 95, 95,
	98, 98, 97, 96, 96, 102, 102, 99, 99, 101,
	101, 100, 103, 103, 104, 105, 105, 278, 278, 200,
	200, 208, 208, 208, 208, 201, 201, 201, 201, 201,
	201, 201, 209, 209, 209, 216, 210, 210, 206, 206,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 165, 165, 165, 165,
	227, 227, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 153, 153, 166,
	166, 166, 166, 167, 167, 167, 167, 167, 167, 167,
	315, 315, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 422, 422, 329, 329, 329, 329, 207,
	207, 207, 207, 207, 126, 126, 126, 126, 126, 312,
	312, 312, 316, 316, 316, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	317, 317, 225, 225, 122, 122, 223, 223, 224, 226,
	226, 218, 218, 218, 218, 220, 220, 203, 203, 203,
	228, 228, 229, 229, 106, 107, 107, 108, 108, 230,
	230, 232, 231, 231, 233, 234, 234, 234, 235, 235,
	236, 236, 236, 48, 48, 48, 48, 48, 43, 43,
	43, 43, 44, 44, 44, 44, 137, 137, 137, 137,
	139, 139, 138, 138, 83, 83, 84, 84, 84, 414,
	414, 414, 413, 413, 413, 413, 413, 413, 143, 143,
	144, 144, 144, 141, 141, 142, 142, 253, 253, 237,
	237, 237, 244, 244, 244, 240, 240, 242, 242, 242,
	243, 243, 243, 241, 250, 250, 252, 252, 251, 251,
	247, 247, 248, 248, 249, 249, 249, 245, 245, 202,
	202, 202, 202, 202, 254, 254, 254, 254, 266, 266,
	213, 213, 215, 215, 214, 214, 164, 267, 267, 275,
	272, 272, 273, 273, 299, 299, 299, 276, 276, 289,
	289, 285, 285, 286, 286, 279, 279, 291, 291, 291,
	78, 211, 211, 368, 368, 365, 294, 294, 296, 296,
	300, 300, 304, 304, 301, 301, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 418, 419, 310, 311, 311, 311,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 0, 1, 1, 1, 2, 3,
	2, 3, 0, 1, 3, 1, 4, 3, 3, 4,
	3, 2, 3, 4, 3, 4, 2, 7, 1, 3,
	3, 3, 3, 1, 2, 1, 1, 3, 2, 3,
	3, 2, 5, 7, 10, 9, 7, 8, 1, 1,
	10, 11, 9, 8, 8, 1, 1, 1, 3, 1,
	3, 1, 3, 0, 4, 3, 1, 3, 3, 3,
	3, 3, 1, 1, 2, 5, 4, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 6, 12, 2, 0, 2, 0, 2, 1, 0,
	2, 1, 3, 3, 0, 1, 1, 3, 3, 6,
	4, 7, 8, 8, 8, 6, 3, 1, 1, 5,
	0, 1, 1, 1, 1, 2, 2, 2, 0, 1,
	4, 4, 4, 4, 4, 4, 2, 4, 1, 3,
	1, 1, 3, 4, 3, 3, 3, 5, 10, 0,
	2, 0, 2, 3, 5, 3, 4, 2, 3, 2,
	3, 3, 3, 3, 2, 2, 4, 4, 1, 1,
	1, 1, 1, 0, 2, 2, 3, 3, 2, 2,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 1, 3, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	5, 5, 4, 4, 4, 6, 5, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 3, 3, 1,
	3, 5, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 4, 4, 2, 11, 3,
	6, 8, 6, 6, 6, 13, 8, 6, 10, 5,
	5, 5, 7, 5, 5, 5, 5, 5, 7, 7,
	5, 5, 0, 6, 5, 6, 4, 5, 0, 8,
	9, 0, 3, 0, 1, 0, 3, 8, 4, 1,
	3, 3, 6, 7, 7, 8, 4, 0, 1, 0,
	1, 3, 3, 1, 1, 2, 1, 1, 0, 2,
	0, 2, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 3, 3, 0, 2, 2, 2, 2, 2,
	2, 2, 4, 4, 3, 0, 1, 4, 3, 4,
	4, 3, 3, 3, 2, 1, 3, 3, 3, 5,
	7, 7, 6, 5, 3, 2, 3, 4, 1, 3,
	2, 3, 3, 2, 2, 3, 2, 3, 7, 3,
	3, 3, 3, 4, 7, 5, 2, 4, 4, 4,
	4, 4, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 2, 2, 4, 4, 4, 4, 4, 2,
	3, 3, 3, 3, 5, 2, 3, 3, 2, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 1, 1, 1, 1, 3, 0, 1, 1,
	3, 3, 2, 2, 1, 1, 5, 0, 1, 0,
	1, 2, 3, 0, 3, 3, 3, 3, 3, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 4, 4, 4, 2, 2, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 4, 3,
	3, 6, 4, 7, 6, 1, 3, 2, 2, 2,
	2, 1, 1, 1, 1, 3, 2, 1, 1, 1,
	0, 1, 1, 0, 3, 0, 2, 0, 2, 1,
	2, 2, 0, 1, 1, 0, 1, 1, 5, 5,
	4, 0, 2, 4, 4, 0, 1, 0, 1, 2,
	3, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 3, 1, 1, 1, 4, 3,
	1, 1, 2, 3, 7, 0, 3, 0, 1, 1,
	3, 1, 3, 1, 1, 3, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 1, 1, 2, 6, 5, 6, 6, 0,
	2, 3, 3, 0, 2, 3, 3, 3, 2, 3,
	1, 6, 3, 4, 3, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	2, 2, 2, 2, 1, 1, 2, 7, 7, 6,
	6, 2, 2, 1, 6, 3, 3, 3, 1, 3,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 1, 0,
	1, 2, 5, 0, 3, 0, 1, 4, 4, 2,
	0, 1, 1, 2, 2, 1, 1, 2, 2, 0,
	1, 1, 1, 1, 5, 1, 3, 0, 3, 1,
	1, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 4, 8, 6, 8, 6, 5, 4, 10, 2,
	2, 1, 2, 2, 2, 4, 5, 5, 5, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 8, 8, 8, 6, 5, 4, 4, 4, 4,
	4, 7, 4, 4, 6, 6, 6, 8, 6, 6,
	4, 4, 3, 4, 6, 6, 4, 4, 4, 6,
	8, 6, 4, 6, 6, 8, 10, 7, 8, 8,
	9, 4, 4, 4, 4, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 4, 4, 6, 5, 9,
	6, 9, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 6, 8, 10, 12, 14, 6, 8, 8,
	10, 12, 14, 6, 8, 10, 12, 6, 8, 4,
	4, 3, 4, 6, 6, 4, 6, 4, 6, 8,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 2, 3, 3, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 1, 0, 5, 5, 2, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 2, 1, 1,
	0, 1, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 1, 3, 5, 1, 1, 1, 2, 2,
	0, 3, 0, 2, 2, 1, 3, 0, 1, 0,
	1, 3, 1, 3, 2, 0, 1, 1, 0, 1,
	2, 4, 4, 0, 2, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 0, 3, 3, 3,
	0, 3, 1, 1, 0, 4, 0, 1, 1, 0,
	1, 2, 2, 1, 1, 1, 1, 1, 0, 3,
	1, 3, 2, 1, 1, 0, 1, 2, 4, 9,
	3, 5, 0, 3, 3, 0, 1, 0, 2, 2,
	0, 2, 2, 2, 0, 2, 1, 2, 3, 3,
	0, 2, 1, 2, 3, 4, 3, 0, 1, 2,
	1, 5, 4, 4, 1, 3, 3, 5, 0, 5,
	1, 3, 1, 2, 3, 4, 1, 1, 3, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 1, 1,
	5, 0, 1, 0, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -416, -80, -421, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -63, -64,
	-68, -69, -65, -66, -70, -71, -72, -73, -74, -14,
	-17, -67, -32, -33, -75, -76, -77, -78, -79, -16,
	-18, -19, -9, -8, -13, 10, 11, -109, -34, 33,
	-39, -49, 225, -50, -40, 226, -51, 228, 227, 266,
	229, 250, 628, 235, 259, 75, 314, 315, 317, 318,
	319, 320, -110, 624, 264, 265, 231, 37, 46, 34,
	35, 38, 236, 272, 273, 234, -10, -35, 9, -418,
	12, 456, 261, 260, 29, -12, 518, 87, -81, -417,
	674, -253, -237, 23, 34, 30, -236, -232, -128, -237,
	21, 19, 8, -80, -80, -80, 13, 14, -80, -353,
	-355, 87, 159, 87, -80, -56, -55, -53, -52, -54,
	-57, 32, -46, -47, -377, -45, -42, 230, 227, 276,
	123, 124, 266, 267, 268, 229, 250, 265, 269, 264,
	285, -41, 82, 34, 518, 521, -360, 226, 232, 233,
	228, 457, 126, 125, 76, -357, 373, 551, 644, -57,
	646, 101, 104, 645, 45, 240, 647, 648, 649, 558,
	650, 249, 651, 652, 653, 654, 660, 599, 661, 662,
	663, 127, 8, -80, -304, -300, 91, -293, 515, 252,
	549, 550, 301, 82, 42, 524, 370, 373, 551, 486,
	644, 314, 330, 324, 491, 492, 493, 353, 345, 516,
	552, 525, 304, 253, 289, 638, 343, 135, 646, 308,
	553, 267, 378, 379, 554, 380, 101, 317, 419, 659,
	307, 555, 657, 104, 645, 322, 80, 485, 52, 641,
	45, 262, 341, 234, 337, 647, 290, 556, 527, 283,
	126, 123, 666, 37, 333, 51, 31, 656, 125, 50,
	648, 150, 557, 649, 558, 382, 360, 632, 49, 383,
	268, 559, 85, 273, 520, 311, 640, 384, 505, 334,
	385, 300, 655, 231, 560, 619, 611, 612, 386, 387,
	633, 365, 361, 366, 507, 561, 411, 490, 388, 615,
	616, 673, 53, 562, 563, 634, 124, 564, 79, 650,
	81, 328, 329, 565, 298, 251, 510, 511, 413, 357,
	468, 475, 476, 111, 112, 471, 113, 477, 114, 478,
	479, 480, 469, 115, 108, 470, 481, 482, 358, 359,
	116, 483, 110, 109, 472, 474, 117, 484, 249, 36,
	389, 517, 302, 59, 306, 277, 414, 47, 363, 670,
	46, 626, 512, 566, 631, 356, 352, 465, 54, 567,
	568, 569, 570, 487, 651, 355, 327, 351, 665, 4,
	295, 488, 652, 63, 233, 368, 367, 369, 284, 410,
	348, 571, 572, 573, 256, 83, 574, 338, 22, 575,
	576, 390, 291, 577, 57, 578, 579, 417, 265, 580,
	55, 653, 40, 581, 270, 667, 654, 582, 583, 584,
	625, 585, 272, 586, 392, 587, 613, 614, 391, 362,
	364, 513, 279, 393, 237, 519, 588, 312, 332, 269,
	658, 589, 257, 501, 502, 503, 504, 639, 509, 508,
	271, 276, 264, 418, 258, 590, 591, 592, 593, 594,
	305, 610, 595, 596, 318, 660, 466, 44, 597, 598,
	599, 600, 601, 299, 294, 412, 421, 62, 84, 375,
	602, 603, 637, 326, 323, 292, 604, 315, 56, 661,
	662, 663, 286, 664, 494, 495, 496, 497, 10, 671,
	672, 489, 395, 127, 296, 297, 48, 349, 278, 605,
	309, 606, 339, 340, 354, 325, 350, 622, 316, 620,
	280, 396, 467, 266, 607, 420, 293, 371, 376, 310,
	523, 506, 285, 397, 629, 636, 522, 498, 499, 347,
	344, 287, 500, 608, 624, 398, 241, 281, 282, 609,
	621, 399, 400, 303, 401, 402, 403, 404, 405, 408,
	409, 407, 313, 406, 623, 617, 618, 288, 521, 321,
	342, 377, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	464, 239, -80, 239, -191, -300, 239, 239, 96, 519,
	645, 629, 392, -272, 409, 379, -290, 381, 394, 389,
	399, 387, -281, 390, 392, 279, -401, 411, 239, 396,
	225, 382, 391, 400, 401, 303, 407, 402, 313, 406,
	288, 403, 404, 405, 408, -384, 177, 649, 664, 135,
	346, 386, 384, 412, 626, 91, -306, 91, 92, 93,
	-293, 316, -308, 321, -294, -384, -293, 319, -80, -80,
	-310, -310, -130, 626, 630, -210, -145, 143, -160, -163,
	-151, -155, -204, -205, -206, -207, -161, -220, -259, 166,
	167, 174, 144, -216, -164, 27, 514, 458, 457, 177,
	32, -154, 220, 69, 70, 460, 146, 58, 12, 433,
	434, -162, 428, 435, 430, 485, 487, 488, 489, 486,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	490, 462, 463, 118, 464, 108, 110, 109, 465, 466,
	467, 343, 512, 513, 507, 510, 511, 509, 508, 358,
	359, 468, 469, 470, 111, 112, 113, 114, 115, 116,
	117, 471, 474, 472, 473, 475, 476, 477, 482, 483,
	478, 479, 480, 481, 484, -90, -102, 540, 539, -103,
	-152, -153, -166, -167, -294, -300, 244, 427, 238, 172,
	456, -156, -149, -218, 107, 92, 93, -8, -214, 426,
	431, 432, 436, 429, 526, 528, 543, 544, 546, 531,
	536, 535, 538, 501, 502, 503, 504, 505, 506, 611,
	612, 613, 614, 615, 616, 617, 618, -384, -293, 91,
	-158, -157, -200, 94, 99, 102, 103, 105, -407, 262,
	339, 340, 119, -418, 642, 90, 95, 96, 97, 98,
	120, 121, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 45, 395, 395, -191, -80, -80,
	-80, -80, -230, -128, -232, -10, -8, -418, 9, -80,
	-8, -9, -13, -35, -37, 545, -36, -300, 100, -237,
	-253, 13, 162, 43, 51, -235, -236, -12, -8, -145,
	20, 24, 25, -133, 168, -145, -300, -133, -279, 243,
	-80, -80, -268, -313, 316, -270, 412, 626, 411, -260,
	-273, 91, -259, -272, 410, -354, 159, -340, -344, -294,
	254, -370, 250, -191, -363, -362, -294, -418, -129, -289,
	240, 248, 247, 136, -388, 139, 296, 427, 238, -52,
	-53, -54, -272, 176, 648, -111, 271, 275, 88, 88,
	-344, -343, -342, -389, 275, 254, -369, -361, 246, 255,
	-350, 247, 248, -345, 240, 137, -389, -345, 245, 255,
	250, 254, 275, 275, 127, 275, 127, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 270, -351, 151, -351,
	522, 522, -357, -389, 250, 240, -389, -389, 246, -291,
	-345, 242, 26, 242, 36, 36, -351, -351, -351, -272,
	176, -351, -351, -351, -351, 283, 283, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, 239, -388, -137, 406, 303, 82,
	-55, 285, -38, -191, -289, 240, 241, -388, 272, -191,
	221, -191, -415, -191, 96, 96, -283, 159, 16, -283,
	-280, 395, 393, 380, 385, -283, -283, -283, -283, 286,
	378, -346, 240, 36, 251, 395, 286, 378, 286, 287,
	286, 287, 388, 398, 286, -305, 15, 162, 427, 383,
	387, 279, 239, 280, 241, 397, 287, -305, 90, -284,
	159, 286, 395, 282, -283, -283, -311, -418, -296, -294,
	-292, 230, 24, 142, 26, 28, 145, 177, 130, 20,
	146, 38, 232, 346, 250, 176, 246, 457, 225, 73,
	526, 428, 430, 426, 433, 459, 460, 427, 381, 32,
	14, 528, 29, 260, 25, 39, 170, 227, 149, 529,
	263, 27, 261, 118, 121, 531, 23, 76, 255, 15,
	248, 41, 17, 532, 533, 18, 244, 243, 162, 240,
	71, 12, 220, 30, 158, 67, 534, 137, 535, 536,
	537, 538, 131, 69, 159, 21, 668, 431, 432, 34,
	627, 514, 274, 172, 74, 60, 630, 143, 429, 539,
	540, 119, 541, 122, 77, 635, 139, 19, 72, 43,
	542, 275, 543, 245, 669, 544, 415, 545, 160, 228,
	456, 70, 161, 642, 546, 643, 238, 394, 9, 461,
	33, 259, 247, 129, 68, 547, 239, 148, 462, 463,
	242, 132, 120, 8, 136, 35, 13, 75, 78, 434,
	435, 436, 58, 128, 518, 147, 16, 548, 416, 141,
	628, 422, 423, 424, 425, 235, -384, 631, -311, -311,
	33, 92, -410, -411, -412, 518, 415, 242, -294, -191,
	-86, 619, 229, -87, 625, 24, 237, -135, 395, -123,
	177, 649, 632, 633, 634, 631, 392, 629, 639, 637,
	635, 286, 636, 88, 139, 141, 142, 4, -145, 158,
	-201, 151, 152, 153, 154, 155, 156, 157, 162, 143,
	145, 159, -246, 140, 163, 164, 165, 166, 167, 168,
	169, 171, 170, 172, 173, 160, 161, 176, 223, 224,
	-155, -155, -155, -155, -216, -222, -221, -418, -218, -384,
	-293, -300, -418, -418, -155, -278, -418, -418, -151, -418,
	-418, -418, -225, -145, -418, -418, -422, -418, -422, -422,
	-329, -418, -329, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, 221,
	-418, -418, -418, -418, -418, -329, -329, -329, -329, -329,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, 103, 99, 102, 94, -220, 105,
	90, 90, 90, 90, -8, -9, -210, -418, -310, -398,
	-399, -194, -191, -418, 303, -294, -294, 272, -235, -12,
	-8, -230, -236, -232, -8, -80, -121, -134, 64, 65,
	-136, 25, 39, 68, 66, 24, -419, 89, -419, -253,
	-419, 88, -37, -256, 87, 62, 44, 90, 90, 88,
	22, -231, -233, -145, 15, -298, 4, -297, 26, -294,
	90, 221, 15, -192, 30, -191, -279, -279, 88, 91,
	316, -269, -271, 413, 415, 151, -299, -294, 90, 32,
	89, 88, -191, -318, -321, -323, -322, -324, -319, -320,
	343, 344, 177, 347, 349, 350, 351, 352, 353, 354,
	355, 356, 357, 360, 33, 262, 339, 340, 341, 342,
	361, 362, 363, 364, 366, 367, 368, 369, 324, 345,
	516, 325, 326, 327, 328, 329, 330, 332, 333, 336,
	334, 335, 337, 338, -385, -384, 87, 89, 88, -325,
	87, -145, -137, 239, -384, 240, 240, 240, -80, 456,
	-351, -351, -351, 270, 20, -45, -42, -377, 19, -41,
	-42, 230, 123, 124, 227, 87, -340, 87, -349, -385,
	-384, 87, 137, 245, 136, -348, -345, -348, -349, -384,
	-218, -384, 137, 137, -384, -384, -265, -294, -265, -265,
	24, -265, 24, -265, 24, 96, -294, -265, 24, -265,
	24, -265, 24, -265, 24, -265, 24, 32, 79, 80,
	81, 32, 83, 84, 85, -218, -384, -384, -218, -340,
	-218, -191, -384, -272, 96, 96, 96, -351, -351, 96,
	90, 90, 90, -351, -351, 96, 90, -302, -300, 90,
	90, -390, 256, 300, 302, 96, 96, 96, 96, 32,
	90, -391, 32, 656, 655, 657, 658, 659, 90, 96,
	32, 96, 32, 96, -294, 87, -191, -143, 290, 225,
	227, 230, 77, 90, 306, 307, 304, 309, 310, 151,
	45, 88, 242, 239, -384, -285, 244, -285, -294, -301,
	-300, -292, -414, 88, -413, 23, 422, 423, 425, 384,
	424, 90, -145, -347, 15, 162, -305, -305, -283, -191,
	-347, -305, -283, -191, -283, -283, -283, -283, -305, -305,
	-305, -283, -300, -300, -191, -191, -191, -191, -191, -191,
	-191, -311, -284, -283, 631, 90, -277, 15, 77, -311,
	-311, 88, 322, 416, 417, -309, 319, -82, -294, 90,
	-15, -11, -23, -22, -24, 151, -15, 88, 518, -184,
	-191, 631, 631, 631, 631, 631, 631, -145, -145, -145,
	-145, 541, -208, 119, 143, 120, 121, -163, -209, -214,
	-216, 106, 162, 145, 159, -246, -151, -155, -151, -151,
	-151, -151, -151, -151, -151, -151, -151, -151, -151, -151,
	-151, -312, -294, 90, 177, -159, -158, 105, -407, -159,
	515, 88, -221, 221, -145, -145, -384, -145, -294, -131,
	-133, -131, -145, -223, -224, 147, -218, -145, -419, -419,
	96, 105, 168, -127, 25, 39, -127, -127, -127, -127,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-127, -294, -294, -120, -119, 438, 439, 440, 441, 443,
	444, 445, 448, 449, 453, 454, 437, 455, 442, 447,
	450, 451, 452, 446, 342, -145, -145, -145, -145, -145,
	-145, -88, -145, 130, 131, 132, -210, -145, -151, -145,
	-145, -145, -419, -145, -145, -145, -211, -210, -383, -382,
	-381, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -419, -145, -165, -149, 96, -261,
	105, 92, -145, -145, -132, -131, -296, -301, -292, -293,
	-131, -132, -132, -131, -131, -145, -145, -145, -145, -145,
	-145, -145, -145, -419, -145, -145, -145, -145, -145, -253,
	-419, -210, 88, -400, 415, 416, 627, -303, 275, -302,
	26, -211, 90, 15, -263, 78, -294, -235, -235, 64,
	65, 60, -131, -136, -419, -36, 26, -255, -294, 63,
	90, -330, -272, 370, 371, 177, -145, -145, 88, -234,
	28, 29, -191, -297, 168, -301, -191, -264, 275, -191,
	-169, -171, -172, -173, -194, -217, -418, -174, -8, 537,
	534, 15, -184, -185, -193, -300, -270, -313, -269, 88,
	414, 416, 417, 77, 122, -145, -331, 176, -359, -358,
	-357, -340, -342, -343, -344, 89, -331, -336, 376, 375,
	-325, -325, -325, -325, -325, -330, -330, -330, -330, 87,
	87, -325, -325, -325, -325, -333, 87, -333, -333, -334,
	-333, 87, -334, -335, 87, -335, -370, -145, -367, -366,
	-364, -365, 249, 101, 609, 565, 518, 558, 599, 78,
	-362, -234, 96, -419, -143, -286, 244, -368, -365, -384,
	-384, -384, -286, 91, 90, 91, 90, 91, 90, -112,
	-59, -1, 668, 669, 670, 88, 20, -341, -340, -58,
	300, -373, -374, 275, -369, -363, -349, 137, -348, -349,
	-349, -384, 88, 30, 127, 127, 127, 127, 518, 227,
	33, -287, 557, 143, 609, 565, -340, -58, 242, 242,
	-312, -312, -312, 90, 90, -282, 664, -184, -139, 292,
	151, 281, 281, 239, 239, 294, -191, 305, 308, 306,
	307, 304, 309, 310, 24, 24, 24, 24, 24, 293,
	295, 297, 283, -191, -191, -285, 77, -186, -191, 27,
	-300, -413, -191, 285, -191, -283, -283, -191, -283, -283,
	-191, -412, 323, -294, 357, 620, 621, 623, 622, -123,
	415, 88, 518, 23, -124, 23, -418, 119, 120, 121,
	-209, -151, -155, -151, 142, 263, -418, -218, -419, -296,
	26, 88, 78, -419, 88, 88, -419, -419, 88, 15,
	-226, -224, 149, -145, -419, 88, -419, -419, -419, -210,
	-145, -145, -145, -145, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -210, 88, 88, 15, -316, 26,
	-419, -419, -419, -419, -419, -225, -419, 15, -419, 78,
	88, 162, 88, -419, -419, -419, 88, 88, -419, -419,
	88, 88, -419, 88, 88, 88, -419, 88, 88, 88,
	88, -419, -419, -419, -419, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, -419, -95, 542, -419, -419,
	88, -419, 88, -419, -418, 221, -419, -419, -419, -419,
	-419, 88, 88, 88, 88, 88, 88, -419, -419, -419,
	88, 88, -419, 88, -419, 88, -419, -399, 626, 416,
	-198, -197, -195, 75, 243, 76, -418, -302, -419, -159,
	-261, -262, -261, -203, -294, 96, 105, -237, -168, -170,
	15, -136, -216, 89, 88, -330, -241, -247, -280, -294,
	90, 177, -332, 177, -332, 370, 371, -233, 221, -199,
	16, -202, 33, 58, -11, -418, -418, 33, 88, -187,
	-189, -188, -190, 67, 71, 73, 68, 69, 70, 74,
	-307, 26, -8, -169, -8, -418, -191, -184, -420, 15,
	78, -420, 88, 221, -271, -274, 418, 415, 421, -384,
	90, -111, 88, -357, -344, -238, -140, 41, -337, 377,
	-330, 525, -330, -339, 90, -339, 96, 96, 96, 89,
	-48, -43, -44, 34, 82, -364, -351, 90, 40, -351,
	-351, -294, 89, -234, -139, -191, 143, 77, -368, -368,
	-368, -300, -2, 667, 673, 137, 87, 380, 19, -255,
	88, 89, -219, 301, 89, -113, -294, 89, 87, -349,
	-349, -294, -418, 239, 32, 32, 609, 565, 557, -58,
	-219, -218, -384, -331, 666, 665, 89, 241, 299, -144,
	433, -141, 90, 91, -191, -191, -191, -191, -191, 230,
	227, 403, -408, 311, -408, 284, 242, -184, -191, 88,
	-85, 258, 253, -305, -305, 34, -191, 415, 640, 638,
	-145, 142, 263, -163, -155, -151, -314, 177, 343, 262,
	341, 337, 357, 348, 375, 339, 376, 334, 333, 332,
	-314, -312, -210, -133, -145, -145, 150, -145, 148, -145,
	-419, -419, -419, -419, -419, -230, -145, -145, -145, -419,
	177, 343, 15, -145, -312, -145, -145, -145, -145, -145,
	-381, -145, -210, -145, -210, -145, -145, -145, -145, -145,
	-382, -382, -382, -382, -382, -210, -210, -210, -210, -418,
	-294, -98, -97, -96, 592, 243, -95, -165, -98, -165,
	-132, -296, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -195, -345, -345, -345, -265, 88, -276, 23,
	15, 58, 58, -168, -199, -169, -136, -294, -244, 619,
	-250, 47, -248, -249, 48, -245, 49, 57, -332, -332,
	168, -235, -145, -266, 77, -267, -275, -218, -213, -215,
	-214, -418, -254, -419, -294, -265, -267, -171, -172, -172,
	-171, -172, 67, 67, 67, 72, 67, 72, 67, -188,
	-300, -419, -145, -303, 78, -169, -169, -193, -300, 168,
	415, 419, 420, -357, -406, 119, 143, 32, 77, 373,
	101, -404, 176, 554, 604, 609, 565, 558, 599, -405,
	245, 136, 137, 257, 26, 42, 89, 88, 89, 88,
	89, 89, 88, -288, -287, -44, -43, -351, -351, 96,
	-384, 90, 90, 241, 27, -191, 77, 77, 77, -114,
	671, 96, 87, -3, 82, -145, 87, 20, -340, -218,
	-375, -326, -376, -327, -328, -5, -6, -352, -117, 58,
	101, -62, 45, 240, 651, 652, 127, -418, 664, -367,
	-255, -371, -373, -191, -148, -418, -147, -149, -156, 166,
	167, 262, 339, 340, -219, -191, -138, 290, 298, 87,
	-142, 92, -387, 78, 281, 373, 281, 90, -409, 312,
	90, -409, -191, -85, -48, -191, -283, -283, 34, -384,
	-419, -163, -155, -126, 162, 518, -317, 524, -325, -325,
	-325, -335, -325, 329, -325, 329, -325, -419, -419, -419,
	88, -419, 23, -419, -145, 88, -122, 461, 88, 88,
	-419, 87, 87, -145, -419, -419, -419, 88, -419, -419,
	-419, -419, -419, 88, -419, -419, -419, 88, -315, 610,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-94, -295, -294, -95, 574, 574, -419, -95, -227, 88,
	-419, -419, 88, -419, 88, 88, -419, 88, -419, 88,
	-419, -419, -419, -419, 88, -196, 23, -196, -196, -419,
	-261, -191, -199, -228, 17, -241, 52, 349, -252, -251,
	56, 48, -249, 20, 50, 20, 31, -266, 88, 151,
	88, -419, -419, 88, 58, 221, -419, -199, -182, -181,
	77, 78, -183, 77, -181, 67, 67, -256, 88, -264,
	-169, -199, -199, 221, 119, -418, -150, -162, -148, 13,
	90, 90, -384, -403, 655, 656, 32, 96, -351, -351,
	137, 137, -191, 87, -330, 90, -330, 96, 96, 32,
	83, 84, 85, 32, 79, 80, 81, -191, -191, -191,
	-191, -372, 87, 20, -145, 87, 151, 89, -255, -255,
	277, 162, -351, 649, 283, 283, -351, -351, -351, -116,
	-115, 671, 89, -419, 88, -338, 518, 521, -145, -157,
	-157, -256, 89, -380, 518, -386, -294, -294, -294, -294,
	96, 98, -419, 516, 74, 519, -419, -330, -145, -145,
	-145, -235, 90, -145, -145, 96, 96, -419, -145, -210,
	-145, -419, -179, -178, -180, 632, 119, 32, -314, -419,
	-212, 275, -101, -100, -99, 15, -419, -145, -145, -145,
	-145, -145, -145, -145, -418, 67, 19, 17, -418, -418,
	-303, -228, -229, 18, 20, -242, 54, -240, 53, -240,
	-251, 20, 20, 90, 20, 90, 137, -275, -145, -215,
	58, -11, -294, -213, -294, -230, -145, 87, -145, -159,
	-199, -199, -145, -205, 485, 487, 488, 489, 486, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 490,
	464, 108, 110, 109, 465, 466, 467, 343, 512, 513,
	507, 510, 511, 509, 508, 358, 359, 468, 469, 470,
	111, 112, 113, 114, 115, 116, 117, 471, 474, 472,
	475, 476, 477, 482, 483, 478, 479, 480, 481, 484,
	501, 502, 503, 504, 505, 506, 611, 612, 613, 614,
	615, 616, 617, 618, 90, 90, 87, -145, 89, 89,
	-256, -371, -59, 89, -257, -255, 96, 89, 278, -214,
	-418, 90, -351, -351, -351, 96, 96, -302, -419, 88,
	-294, -405, -373, 522, 522, -419, 26, -379, -378, -296,
	87, 78, 63, 517, 520, -419, -419, 88, -419, -419,
	-419, 89, 89, -419, -419, -419, 88, -419, -178, -180,
	-419, 77, -159, -230, 20, -98, 300, 302, -98, -419,
	88, -419, -419, 88, -419, 88, -419, -419, -258, -419,
	-294, 245, 20, 20, -258, -258, -198, -229, -108, -107,
	-106, 548, -145, -210, -243, 55, 77, 122, 90, 90,
	90, 13, -213, 221, -235, -255, -176, 380, -230, -419,
	-255, 89, 26, 89, 673, 137, 89, -214, -125, -418,
	274, -302, 90, 90, -115, -118, -11, 88, 151, -255,
	-191, 63, -145, -210, -419, 77, 529, 632, -93, -92,
	-89, 643, 669, -210, -95, -95, -145, -145, -145, 88,
	-419, -419, -419, -108, 88, -105, -104, -294, 77, 122,
	-267, -294, 89, -419, -418, -235, 89, -239, -11, 87,
	-3, 274, -326, -376, -327, -328, -5, -6, -352, -83,
	518, -378, -356, -296, 90, 96, 89, 518, -419, -419,
	-91, 145, 641, 607, -146, -157, -154, 220, -419, 88,
	-419, 88, -419, 88, -294, 245, -106, 88, 26, -303,
	-177, -175, -294, 571, -396, -395, 514, -406, -402, 119,
	143, 101, -404, 609, 565, 128, 129, -83, -145, 87,
	-419, -84, 289, 626, -387, 519, -91, 642, 585, 560,
	585, 560, -145, -145, -145, -104, -418, -419, 88, 23,
	-318, -61, 582, -393, -394, 77, -397, 386, 581, 602,
	119, 90, 89, -255, 250, -380, 520, 142, -419, 88,
	-419, 88, -419, -94, -175, 578, -331, -159, -394, 77,
	-393, 77, 14, 13, -4, 672, 89, 291, -91, -145,
	-145, -419, -60, 27, -176, -392, 258, 253, 256, 33,
	-392, 96, -4, -419, -419, 582, 252, 32, 119, -159,
	-179, -178, -178,
}

var yyDef = [...]int{
	885, -2, -2, 887, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 40, 73, 75, 76, 885, 885, 885, 0, 885,
	0, 0, 885, -2, -2, 885, 1502, 0, 885, 0,
	0, 0, 0, 0, -2, 799, 805, 0, 814, -2,
	0, 0, 885, 885, 2066, 2066, 880, 0, 0, 0,
	0, 0, 885, 885, 885, 885, 1359, 53, 885, 0,
	88, 89, 834, 835, 836, 68, 0, 2064, 886, 1,
	3, 74, 78, 0, 0, 0, 61, 1368, 0, 81,
	0, 0, 889, 0, 0, 1485, 885, 885, 0, 129,
	130, 0, 0, 0, -2, 133, -2, 162, 163, 164,
	0, 169, 602, 525, 577, 523, 562, -2, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 401, 401, 0, 0, -2, 511, 511, 511,
	1487, 0, 0, 0, 559, 463, 401, 401, 401, 0,
	401, 401, 401, 401, 0, 0, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 1386, 168, 1503, 1500, 1501, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682,
	1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702,
	1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722,
	1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732,
	1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752,
	1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762,
	1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772,
	1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782,
	1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792,
	1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802,
	1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812,
	1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822,
	1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832,
	1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842,
	1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852,
	1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862,
	1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872,
	1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882,
	1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892,
	1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922,
	1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932,
	1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942,
	1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952,
	1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962,
	1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972,
	1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982,
	1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992,
	1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
	2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,
	2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022,
	2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032,
	2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042,
	2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052,
	2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062,
	2063, 0, 1479, 0, 715, 988, 0, 0, 720, 0,
	0, 723, 724, 788, 726, 788, 0, 788, 788, 788,
	788, 0, 0, 0, 736, 0, 0, 0, 0, 785,
	0, 752, 753, 0, 785, 0, 759, 791, 0, 0,
	765, 788, 788, 768, 769, 2067, 0, 2067, 2067, 1470,
	0, 782, 780, 794, 795, 43, 798, 801, 802, 803,
	804, 807, 0, 818, 821, 1496, 1497, 0, 823, 830,
	847, 848, 0, 881, 882, 48, 1136, 0, 1010, 1015,
	1026, 1041, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 0,
	0, 0, 0, 1054, 1055, 0, 0, 0, 0, 0,
	1117, 1063, 0, 0, 0, 0, 1332, 0, 0, 1293,
	1293, 1151, 1293, 1295, 1295, 1710, 1846, 1854, 1974, 1672,
	1677, 1678, 1679, 1967, 1968, 1969, 1970, 2010, 2011, 2015,
	1770, 0, 0, 0, 2063, 1807, 1815, 1816, 1840, 1939,
	1995, 1689, 1835, 1904, 1767, 1789, 1790, 1921, 1922, 1811,
	1812, 1793, 1805, 1808, 1796, 1797, 1799, 1801, 1806, 1813,
	1819, 1798, 1818, 1817, 0, 1794, 1795, 1800, 1810, 1814,
	1802, 1803, 1804, 1809, 1820, 0, 0, 0, 0, 0,
	1232, 1233, 1234, 1235, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 1345, 1346, 46, 47, 1135, 1466, 1295,
	1295, 1295, 1295, 1295, 1077, 1078, 1079, 1080, 1081, 1105,
	1106, 1112, 1113, 1916, 1917, 1918, 1919, 1751, 2004, 1759,
	1760, 1899, 1900, 1772, 1773, 2038, 2039, -2, -2, -2,
	234, 235, 236, 237, 238, 239, 240, 241, 0, 1714,
	1985, 1986, 230, 0, 0, 298, 299, 295, 296, 297,
	1119, 1120, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274, 275, 276, 277, 278,
	279, 280, 281, 282, 283, 284, 285, 286, 287, 288,
	289, 290, 291, 292, 2066, 0, 857, 0, 0, 0,
	0, 0, 1368, 0, 1360, 1359, 66, 0, 885, -2,
	0, 0, 0, 0, 50, 0, 55, 945, 888, 80,
	79, 1417, 0, 0, 0, 62, 1369, 70, 72, 1370,
	0, 890, 891, 0, 921, 925, 0, 0, 0, 1486,
	1485, 1485, 105, 0, 0, 106, 126, 127, 128, 0,
	0, 112, 113, 1472, 1473, 0, 0, 180, 181, 0,
	44, 428, 0, 176, 0, 421, 360, 0, 1386, 0,
	0, 0, 0, 0, 885, 0, 1480, 157, 158, 165,
	166, 167, 401, 401, 401, 574, 0, 0, 168, 168,
	532, 533, 534, 0, 0, -2, 426, 0, 512, 0,
	0, 415, 415, 419, 417, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 551, 0, 552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 663, 0, 402, 0,
	572, 573, 464, 0, 0, 0, 0, 0, 0, 0,
	0, 1488, 1489, 0, 549, 550, 0, 0, 0, 401,
	401, 0, 0, 0, 0, 401, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 1408, 0, 0, 0,
	-2, 0, 707, 0, 0, 0, 1481, 1481, 0, 714,
	0, 716, 1399, 718, 721, 722, 725, 0, 0, 727,
	0, 785, 785, 783, 784, 729, 730, 731, 732, 788,
	0, 0, 410, 411, 412, 785, 788, 0, 788, 788,
	788, 788, 785, 785, 785, 788, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2067, 791, 788, 0, 760,
	0, 761, 762, 763, 766, 767, 770, 2068, 2069, 1498,
	1499, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 2067, 2067, 774, 778,
	1471, 800, 806, 808, 809, 0, 0, 819, 822, 841,
	52, 1758, 829, 52, 831, 832, 833, 859, 860, 865,
	0, 0, 0, 0, 871, 872, 873, 874, 0, 0,
	877, 878, 879, 0, 0, 0, 0, 0, 1008, 0,
	0, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1027, 1028, 0, 0, 0,
	1050, 1051, 1052, 1053, 1056, 0, 1068, 0, 1070, 1341,
	-2, 0, 0, 0, 1061, 1062, 0, 0, 0, 0,
	0, 0, 0, 1333, 0, 0, 1149, 0, 1150, 1152,
	1153, 0, 1154, 895, 895, 895, 895, 895, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 895, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1491,
	144, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 905, 0,
	0, 905, 905, 0, 0, 223, 224, 225, 226, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	300, 248, 249, 250, 1135, 0, 0, 0, 49, 849,
	850, 0, 971, 1491, 0, 0, 901, 0, 60, 69,
	71, 1368, 64, 1368, 0, 907, 0, 0, -2, -2,
	908, 914, 915, 916, 917, 918, 57, 2065, 58, 0,
	77, 0, 51, 0, 0, 0, 0, 374, 1420, 0,
	0, 1361, 1362, 1365, 0, 922, 1852, 926, 0, 928,
	929, 0, 0, 103, 0, 987, 0, 0, 0, 114,
	0, 116, 117, 0, 0, 0, 385, 1474, 1475, 1476,
	-2, 408, 0, 385, 369, 308, 309, 310, 360, 312,
	360, 360, 360, 360, 374, 374, 374, 374, 343, 344,
	345, 346, 347, 0, 0, 329, 360, 360, 360, 360,
	350, 351, 352, 353, 354, 355, 356, 357, 313, 314,
	315, 316, 317, 318, 319, 320, 321, 362, 362, 362,
	362, 362, 366, 366, 0, 45, 0, 389, 0, 1365,
	0, 0, 1408, 1483, 1493, 0, 0, 0, 1483, 135,
	0, 0, 0, 575, 613, 526, 563, 576, 0, 529,
	530, -2, 0, 0, 511, 0, 513, 0, 409, 0,
	-2, 0, 419, 0, 415, 419, 416, 419, 407, 420,
	553, 554, 555, 0, 557, 558, 643, 957, 0, 0,
	0, 0, 0, 649, 650, 651, 0, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 0, 0, 0, 513,
	0, 560, 0, 0, 465, 466, 467, 0, 0, 470,
	471, 472, 473, 0, 0, 476, 477, 478, 974, 975,
	479, 480, 505, 506, 507, 481, 482, 483, 484, 485,
	486, 487, 499, 500, 501, 502, 503, 504, 488, 489,
	490, 491, 492, 493, 496, 0, 150, 1390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1481, 0, 0, 0, 0, 904, 989,
	1504, 1505, 717, 0, 1400, 0, 1403, 1404, 1405, 1406,
	1407, 789, 790, 0, 413, 414, 788, 788, 733, 775,
	0, 788, 737, 776, 738, 740, 739, 741, 754, 755,
	788, 744, 786, 787, 745, 746, 747, 748, 749, 750,
	751, 771, 756, 757, 758, 792, 0, 796, 797, 772,
	773, 0, 0, 812, 813, 0, 820, 844, 842, 843,
	845, 837, 838, 839, 840, 0, 846, 0, 0, 862,
	99, 867, 868, 869, 870, 883, 876, 1137, 1005, 1006,
	1007, 0, 1009, 1012, 0, 1121, 1123, 1014, 1016, 1132,
	1133, 1134, 0, 0, 0, 0, 0, 1020, 1024, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1046, 1309, 1310, 1311, 1065, 301, 302, 0, 1066,
	0, 0, 0, 0, 0, 0, 0, 1136, 1067, 0,
	919, 0, 0, 1339, 1336, 0, 0, 0, 1294, 1296,
	0, 0, 0, 0, 896, 897, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1272, 1273, 1274, 1275, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1312, 0, 0, 0, 0,
	0, 1332, 0, 1072, 1073, 1074, 0, 0, 0, 0,
	0, 0, 1192, 0, 0, 0, 0, 1492, 0, 145,
	146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1236, 1237, 1238,
	1239, 42, 0, 0, 0, 906, 1343, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1261, 0, 0, 0, 0, 0, 0,
	1464, 0, 0, 852, 853, 855, 0, 991, 0, 972,
	0, 0, 858, 0, 900, 0, 903, 63, 65, 912,
	913, 0, 930, 909, 59, 54, 0, 0, 949, 1418,
	374, 1440, 0, 383, 383, 380, 1371, 1372, 0, 1364,
	1366, 1367, 82, 927, 923, 0, 1003, 0, 0, 986,
	0, 933, 935, 936, 937, 969, 0, 940, 941, 0,
	0, 0, 0, 0, 101, 988, 107, 0, 115, 0,
	0, 120, 121, 108, 109, 110, 111, 0, 602, -2,
	460, 182, 184, 185, 186, 177, -2, 372, 370, 371,
	311, 374, 374, 337, 338, 339, 340, 341, 342, 0,
	0, 330, 331, 332, 333, 322, 0, 323, 324, 325,
	364, 0, 326, 327, 0, 328, 427, 0, 1373, 390,
	391, 393, 401, 0, 396, 397, 0, 401, 401, 0,
	422, 423, 0, 1365, 1390, 0, 0, 0, 1494, 1493,
	1493, 1493, 0, 170, 171, 172, 173, 174, 175, 638,
	0, 0, 614, 636, 637, 168, 0, 0, 178, 515,
	514, 0, 670, 0, 425, 0, 0, 419, 419, 404,
	405, 556, 0, 0, 645, 646, 647, 648, 0, 0,
	0, 542, 454, 0, 543, 544, 513, 515, 0, 0,
	385, 468, 469, 474, 475, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 589, 590, 591,
	594, 596, 517, 600, 593, 595, 597, 517, 601, 1387,
	1388, 1389, 0, 0, 708, 0, 0, 451, 97, 1482,
	713, 1401, 719, 1402, 785, 743, 777, 785, 735, 742,
	764, 810, 811, 816, 824, 825, 826, 827, 828, 866,
	0, 0, 0, 0, 875, 0, 0, 1013, 1122, 1124,
	1017, 0, 1021, 1025, 0, 0, 0, 1071, 1069, 1343,
	0, 0, 0, 1118, 0, 0, 1140, 1141, 0, 0,
	0, 1337, 0, 0, 1147, 0, 1297, 1298, 1155, 0,
	0, 0, 0, 0, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1169, 1170, 1359, 0, 0, 0, 0, 0,
	1176, 1177, 1178, 1179, 1180, 0, 1182, 0, 1183, 0,
	0, 0, 0, 1190, 1191, 1193, 0, 0, 1196, 1197,
	0, 0, 1198, 0, 0, 0, 1202, 0, 0, 0,
	0, 1211, 1212, 1213, 1214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1225, 1226, 0, 1100, 0,
	0, 1100, 0, 1138, 905, 0, 1299, 1300, 1301, 1302,
	1303, 0, 0, 0, 0, 0, 0, 1259, 1260, 1262,
	0, 0, 1265, 0, 1267, 0, 1465, 851, 854, 856,
	943, 992, 993, 0, 0, 0, 0, 973, 1490, 898,
	899, 902, 951, 0, 1347, 0, 0, 930, 1003, 931,
	0, 910, 56, 946, 0, 1422, 1421, 1434, 1447, 383,
	383, 377, 378, 384, 379, 381, 382, 1363, 0, 1368,
	0, 1458, 0, 0, 1450, 0, 0, 0, 0, 0,
	0, 0, 0, 976, 0, 0, 979, 0, 0, 0,
	0, 970, 941, 0, 942, 0, -2, 0, 0, 95,
	96, 0, 0, 0, 118, 119, 0, 0, 125, 386,
	387, 159, 168, 462, 183, 435, 0, 0, 307, 373,
	334, 335, 336, 0, 358, 0, 0, 0, 0, 456,
	131, 1377, 1376, 401, 401, 392, 0, 395, 0, 0,
	0, 1495, 361, 424, 0, 149, 0, 0, 0, 0,
	0, 155, 608, 0, 0, 615, 0, 0, 0, 524,
	0, 535, 536, 0, 642, -2, 704, 389, 0, 403,
	406, 958, 0, 0, 537, 0, 540, 541, 455, 515,
	546, 547, 561, 548, 497, 498, 495, 0, 0, 1409,
	1410, 1415, 1413, 1414, 136, 582, 584, 583, 587, 0,
	0, 0, 519, 0, 519, 580, 0, 451, 1373, 0,
	712, 452, 453, 788, 788, 861, 100, 0, 864, 0,
	0, 0, 0, 1018, 1022, 1304, 1330, 360, 360, 1317,
	360, 366, 1320, 360, 1322, 360, 1325, 360, 1328, 1329,
	0, 0, 0, 920, 0, 0, 1146, 1340, 0, 0,
	1156, 1157, 1158, 1159, 1160, 1334, 0, 0, 0, 1175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 148, 0, 0, 0, 0, 0, 0, 1270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1095,
	1099, 0, 1101, 1102, 0, 0, 1228, 0, 0, 1240,
	0, 1344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 994, 999, 999, 999, 0, 0, 0, 1477,
	1478, 1348, 1349, 1003, 1350, 932, 911, 950, 1440, 0,
	1433, 0, -2, 1442, 0, 0, 0, 1448, 375, 376,
	924, 83, 1004, 86, 0, 1458, 1467, 0, 1449, 1460,
	1462, 0, 0, 0, 1454, 0, 1003, 934, 965, 967,
	0, 962, 977, 978, 980, 0, 982, 0, 984, 985,
	945, 939, 0, 103, 0, 1003, 1003, 102, 0, 990,
	122, 123, 124, 461, 187, 192, 0, 0, 0, 197,
	0, 199, 0, 0, 0, 204, 205, 401, 401, 436,
	0, 304, 306, 0, 0, 190, 374, 0, 374, 0,
	365, 367, 0, 437, 457, 1374, 1375, 0, 0, 394,
	398, 399, 400, 0, 1484, 151, 0, 0, 0, 611,
	0, 639, 0, 0, 0, 0, 0, 0, 179, 516,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 0,
	401, 0, 0, 0, 401, 401, 401, 0, 696, 388,
	0, 0, 667, 664, 538, 0, 228, 229, 231, 0,
	0, 0, 0, 0, 545, 945, 1391, 1392, 1393, 0,
	1412, 1416, 139, 0, 0, 0, 0, 592, 598, 0,
	518, 599, 709, 710, 711, 98, 728, 734, 863, 884,
	1011, 1019, 1023, 0, 0, 0, 0, 1331, 1315, 374,
	1318, 1319, 1321, 1323, 1324, 1326, 1327, 1059, 1060, 1064,
	0, 1143, 0, 1145, 1338, 0, 1368, 0, 0, 0,
	1174, 0, 0, 0, 1185, 1184, 1186, 0, 1188, 1189,
	1194, 1195, 1199, 0, 1201, 1203, 1204, 0, 0, 0,
	1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224,
	0, 1093, 1096, 1227, 1103, 1104, 1109, 1230, 0, 0,
	1139, 1242, 0, 1247, 0, 0, 1253, 0, 1257, 0,
	1263, 1264, 1266, 1268, 0, 0, 0, 0, 0, 971,
	952, 67, 1350, 1352, 0, 1427, 1425, 1425, 1435, 1436,
	0, 0, 1443, 0, 0, 0, 0, 87, 0, 0,
	0, 1463, 0, 0, 0, 0, 104, 1359, 959, 966,
	0, 0, 960, 0, 961, 981, 983, 938, 0, 1003,
	1003, 93, 94, 0, 193, 0, 195, 221, 222, 0,
	198, 200, 201, 202, 208, 209, 210, 203, 0, 0,
	303, 305, 0, 0, 348, 359, 349, 0, 0, 1378,
	1379, 1380, 1381, 1382, 1383, 1384, 1385, 945, 152, 153,
	154, 603, 0, 613, 0, 947, 0, 606, 0, 527,
	0, 0, 0, 401, 401, 401, 0, 0, 0, 0,
	681, 0, 0, 644, 0, 652, 0, 0, 0, 232,
	233, 0, 1411, 581, 0, 137, 138, 0, 0, 586,
	520, 521, 1057, 0, 0, 0, 1058, 1316, 0, 0,
	0, 0, 1335, 0, 0, 0, 0, 1181, 0, 0,
	0, 1207, 0, 0, 0, 633, 634, 0, 1271, 1098,
	1359, 0, 1100, 1110, 1111, 0, 1100, 1241, 0, 0,
	0, 0, 0, 0, 0, 1000, 0, 0, 0, 0,
	991, 1352, 1357, 0, 0, 1430, 0, 1423, 1426, 1424,
	1437, 0, 0, 1444, 0, 1446, 0, 1468, 1469, 1461,
	0, 1453, 1456, 1452, 1455, 1368, 963, 0, 968, 0,
	1359, 92, 0, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 207, 0, 0, 363, 368,
	0, 0, 0, 604, 0, 948, 616, 607, 0, 694,
	0, 698, 0, 0, 0, 701, 702, 703, 680, 0,
	684, 429, 668, 665, 666, 539, 0, 140, 141, 0,
	0, 0, 1305, 0, 1308, 1142, 1144, 0, 1171, 1172,
	1173, 1313, 1314, 1187, 1200, 1205, 0, 1208, 0, 0,
	1209, 0, 635, 1089, 0, 0, 1107, 1108, 0, 1243,
	0, 1248, 1249, 0, 1254, 0, 1258, 1269, 0, 996,
	953, 954, 1001, 1002, 0, 0, 944, 1357, 85, 1358,
	1355, 0, 1353, 1351, 1419, 0, 1428, 1429, 1438, 1439,
	1445, 0, 1451, 0, 90, 0, 0, 0, 1368, 194,
	0, 213, 0, 612, 0, 615, 605, 692, 693, 0,
	705, 697, 699, 700, 682, -2, 1394, 0, 0, 0,
	588, 1306, 0, 0, 1210, 0, 631, 632, 1097, 1090,
	0, 1075, 1076, 1094, 1229, 1231, 0, 0, 0, 0,
	995, 997, 998, 84, 0, 1354, 1115, 0, 1431, 1432,
	1459, 1457, 964, 971, 0, 91, 442, 435, 1394, 0,
	0, 0, 685, 686, 687, 688, 689, 690, 691, 578,
	1396, 142, 143, 508, 509, 510, 136, 0, 1148, 1206,
	1091, 0, 0, 0, 0, 1087, 1088, 0, 1244, 0,
	1250, 0, 1255, 0, 955, 956, 1356, 0, 0, 617,
	0, 619, 0, -2, 430, 443, 0, 188, 214, 215,
	0, 0, 218, 219, 220, 211, 212, 132, 0, 0,
	706, 0, 1397, 1398, 139, 0, 0, 1082, 1083, 1084,
	1085, 1086, 0, 0, 0, 1116, 1095, 618, 0, 0,
	385, 0, 628, 431, 432, 0, 438, 439, 440, 441,
	216, 217, 640, 0, 0, 585, 1307, 0, 1245, 0,
	1251, 0, 1256, 0, 620, 621, 629, 0, 433, 0,
	434, 0, 0, 0, 609, 0, 640, 1395, 1092, 0,
	0, 1114, 0, 630, 626, 444, 446, 447, 0, 0,
	445, 641, 610, 1246, 1252, 0, 448, 449, 450, 622,
	623, 624, 625,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 674,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:624
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:637
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:638
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:642
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:682
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:688
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:694
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:699
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:703
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:709
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:713
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:719
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:725
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:731
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:735
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:740
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:744
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:750
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:754
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:760
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:766
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:770
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:774
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:797
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:803
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:808
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:814
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:821
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:827
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:834
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 67:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:838
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:848
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:852
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:856
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:860
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:866
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:870
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:875
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:879
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:885
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:889
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:894
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:900
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:906
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:913
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:919
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:927
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:931
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:937
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:949
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:961
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:965
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:971
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:977
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:981
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:985
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:989
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:994
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:995
		{
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:999
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1003
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1009
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1013
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1019
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1023
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1028
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1032
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1038
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1044
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1048
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1054
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1058
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1062
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1066
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1072
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1076
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1080
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1086
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1090
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1096
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1100
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1106
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1110
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1114
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1120
		{
			yyVAL.str = RepeatableReadStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1124
		{
			yyVAL.str = ReadCommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1128
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1132
		{
			yyVAL.str = SerializableStr
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1138
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1142
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1146
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1152
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1158
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1165
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1174
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1178
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1185
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1189
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1194
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1198
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1204
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1209
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1214
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1220
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1225
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1231
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1236
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1240
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1246
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1250
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1256
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1262
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1269
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1276
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1281
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1286
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1291
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1298
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1305
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1316
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1323
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1327
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1333
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1337
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1341
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1345
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1349
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1353
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1359
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1363
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1369
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1373
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1379
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1383
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1389
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1393
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1399
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1403
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1409
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1413
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1419
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1424
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1429
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1433
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1438
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1442
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1446
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1457
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1466
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1475
		{
			yyVAL.str = ""
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1479
		{
			yyVAL.str = ""
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1488
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1492
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1498
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1504
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1509
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1514
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1519
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1524
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1529
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1534
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1538
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1543
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1547
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1552
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1558
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1564
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1568
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1574
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1578
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1582
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1588
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1592
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1597
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1601
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1606
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1612
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1618
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1623
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1628
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1634
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1642
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1649
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1653
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1657
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1661
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1665
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1675
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1682
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1686
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1692
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1696
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1700
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1704
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1708
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1712
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1716
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1720
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1725
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1729
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1733
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1737
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1741
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1745
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1750
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1754
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1758
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.str = Armscii8Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = ASCIIStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = Big5Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = UBinaryStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = Cp1250Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = Cp1251Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = Cp1256Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = Cp1257Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.str = Cp850Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = Cp852Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = Cp866Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = Cp932Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = Dec8Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.str = EucjpmsStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.str = EuckrStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.str = Gb18030Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = Gb2312Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = GbkStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = Geostd8Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = GreekStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = HebrewStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.str = Hp8Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.str = Keybcs2Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.str = Koi8rStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.str = Koi8uStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.str = Latin1Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.str = Latin2Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.str = Latin5Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.str = Latin7Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.str = MacceStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.str = MacromanStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.str = SjisStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.str = Swe7Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.str = Tis620Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.str = Ucs2Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.str = UjisStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.str = Utf16Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.str = Utf16leStr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.str = Utf32Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.str = Utf8Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.str = Utf8mb4Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.str = Utf8Str
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1938
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1942
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1946
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1952
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1956
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1960
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1966
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1970
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1977
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1981
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1985
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1989
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1995
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2006
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2011
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2017
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2055
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2061
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2067
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2073
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2079
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2085
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2091
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2099
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2103
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2107
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2111
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2115
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2121
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2125
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2131
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2135
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2139
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2143
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2147
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2151
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2155
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2159
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2163
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2167
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2179
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2184
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2194
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2224
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2229
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2234
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2238
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2243
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2247
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2256
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2260
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2267
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2271
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2277
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2285
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2289
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2293
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2298
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2302
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2307
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2311
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2315
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2319
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2323
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2328
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2333
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2338
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2343
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2349
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2353
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2358
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2362
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2366
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2372
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2377
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2381
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2387
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2391
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2397
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2401
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2406
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2410
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2414
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2418
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2422
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2426
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2432
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2436
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2442
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2446
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2450
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2454
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2458
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2463
		{
			yyVAL.str = ""
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2467
		{
			yyVAL.str = yyDollar[2].str
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2473
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2477
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2481
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2487
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2491
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2496
		{
			yyVAL.str = "key"
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2500
		{
			yyVAL.str = yyDollar[1].str
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2506
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2510
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2515
		{
			yyVAL.str = ""
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2519
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2525
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2529
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2535
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2539
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2545
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2549
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2555
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2559
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2565
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2571
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2575
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2579
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2583
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2587
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2592
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2596
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2602
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2608
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2614
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2618
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2622
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2627
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2631
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2637
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2643
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2649
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2653
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2657
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2661
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2665
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2670
		{
			yyVAL.str = ""
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2674
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2678
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2684
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2688
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2693
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2697
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2702
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2706
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2712
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2716
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2720
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2726
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2730
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2736
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2740
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2744
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2748
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2752
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2756
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2760
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2764
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2768
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2772
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2776
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2780
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2784
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2788
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2792
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2796
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2800
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2804
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2808
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2812
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2816
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2820
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2824
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2828
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2832
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2836
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2840
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2844
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2848
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2852
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2856
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2861
		{
			yyVAL.str = ""
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2865
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2869
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2888
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2892
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2896
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2901
		{
			yyVAL.str = ""
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2907
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2911
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2916
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2920
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2925
		{
			yyVAL.str = ""
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2929
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2934
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2938
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2942
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2947
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2951
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2955
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2959
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2963
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 527:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2967
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2973
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2977
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2981
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2987
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2991
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2995
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2999
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3003
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3007
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3011
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3015
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3019
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3023
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3033
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3037
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3041
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3045
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3049
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3053
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3057
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3061
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3065
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3069
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3073
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3077
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3081
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3085
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3089
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3093
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3097
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3101
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3105
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3109
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3115
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3119
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3125
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3129
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3133
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3137
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3141
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3145
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3149
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3153
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3157
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3161
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3167
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3174
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3181
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3188
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3194
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3204
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3211
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3218
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3230
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3240
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3244
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3248
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3261
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3271
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3275
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3286
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3293
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3300
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3307
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3315
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3321
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3328
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3334
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3341
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3347
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3356
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3364
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3371
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3378
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3382
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3391
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3399
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3408
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3415
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3423
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3427
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3436
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3447
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3451
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3456
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3460
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3465
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3469
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3475
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3481
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3487
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3491
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3497
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3501
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3507
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3513
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3519
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3525
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3531
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3535
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3539
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3543
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3549
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3555
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3561
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3565
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3569
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3575
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3579
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3584
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3588
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3593
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3597
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3603
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3607
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3611
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3615
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3619
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3623
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3627
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3631
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3635
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3639
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3643
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3647
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3651
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3655
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3659
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3663
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3667
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3671
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3675
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3679
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3683
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3687
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3692
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3696
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3700
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3706
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3710
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3716
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3721
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3725
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3730
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3735
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3740
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3745
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3750
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3756
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3762
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3767
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3773
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3779
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3783
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3789
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3794
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3798
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3803
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3808
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3813
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3818
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3824
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3830
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3837
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3844
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3851
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3859
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3863
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3869
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3875
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3881
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3887
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3893
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3899
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3905
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3911
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3917
		{
			yyVAL.str = ""
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3921
		{
			yyVAL.str = ""
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3927
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3933
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3937
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 710:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3943
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3947
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3960
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3966
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3970
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3976
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3982
		{
			yyLOCAL = &CheckTable{Tables: yyDollar[3].tableNamesUnion(), Options: yyDollar[4].checkOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:3988
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3992
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3998
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4002
		{
			yyLOCAL = &Kill{Type: KillQuery, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4006
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4012
		{
			yyLOCAL = &Reload{Type: ReloadUsers}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4016
		{
			yyLOCAL = &Reload{Type: ReloadPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4022
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4026
		{
			yyLOCAL = &Show{&ShowBasic{Command: LastSeenGTID}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4030
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4034
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4038
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4042
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4046
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4050
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4054
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4058
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4062
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4066
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4070
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4074
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4078
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4082
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4086
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4090
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4094
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4098
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4102
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4106
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4110
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4114
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4118
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4122
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4126
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4130
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4134
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4138
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4142
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4146
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4150
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4154
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4158
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4162
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4166
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4170
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4174
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4178
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4182
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4186
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4190
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4194
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4198
		{
			yyLOCAL = &Show{&ShowBasic{Command: Workload}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4205
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4209
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4213
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4217
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4221
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4225
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4229
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4233
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4237
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4243
		{
			yyVAL.str = ""
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4247
		{
			yyVAL.str = "extended "
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4253
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4257
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4263
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4267
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4273
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4277
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4281
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4287
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4291
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4295
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4301
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4305
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4311
		{
			yyVAL.empty = struct{}{}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4315
		{
			yyVAL.empty = struct{}{}
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4319
		{
			yyVAL.empty = struct{}{}
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4325
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4329
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4335
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4339
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4343
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4350
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4354
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4358
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4362
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4369
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4373
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4378
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4382
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4388
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4392
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4398
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4402
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4406
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4413
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4419
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4423
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4428
		{
			yyVAL.empty = struct{}{}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4430
		{
			yyVAL.empty = struct{}{}
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4433
		{
			yyVAL.empty = struct{}{}
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4435
		{
			yyVAL.empty = struct{}{}
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4439
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4445
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4450
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4454
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4458
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4462
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4466
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4470
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4474
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4479
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4483
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4487
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4491
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4497
		{
			yyVAL.str = yyDollar[1].str
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4501
		{
			yyVAL.str = yyDollar[1].str
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4505
		{
			yyVAL.str = yyDollar[1].str
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4511
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4515
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4519
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4523
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4528
		{
			yyVAL.str = ""
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4532
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4536
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4542
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4546
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4552
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4558
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4562
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4568
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4574
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4578
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4584
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4590
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4594
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4598
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4602
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4608
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4614
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4620
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4624
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4628
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4632
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4636
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4640
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4646
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4650
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4656
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4660
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4664
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4668
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4672
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4676
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4680
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4684
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4688
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4692
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4696
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4700
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4704
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4709
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4713
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4717
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4722
		{
			yyVAL.str = ""
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4726
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4731
		{
			setAllowComments(yylex, true)
		}
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4735
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4741
		{
			yyVAL.strs = nil
		}
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4745
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4751
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4755
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4759
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4764
		{
			yyVAL.str = ""
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4768
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4772
		{
			yyVAL.str = SQLCacheStr
		}
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4777
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4781
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4785
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4791
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4795
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4805
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4810
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4814
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4820
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4824
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4829
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4833
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4838
		{
			yyVAL.strs = nil
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4842
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4846
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4850
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4854
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4860
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4864
		{
			yyVAL.str = SQLCacheStr
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4868
		{
			yyVAL.str = DistinctStr
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4872
		{
			yyVAL.str = DistinctStr
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4876
		{
			yyVAL.str = StraightJoinHint
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4880
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4884
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4890
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4894
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4900
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4904
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4908
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4912
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4917
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4921
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4925
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4932
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4937
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4941
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4947
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4953
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4957
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4967
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4971
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4975
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4979
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4985
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4989
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4995
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4999
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5004
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5008
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5017
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5023
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5027
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5033
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5037
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5043
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5047
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5051
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5055
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5061
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5065
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5078
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5082
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5086
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5090
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5096
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5098
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5102
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5104
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5108
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5110
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5113
		{
			yyVAL.empty = struct{}{}
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5115
		{
			yyVAL.empty = struct{}{}
		}
	case 971:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5118
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5122
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5126
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5133
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5139
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5143
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5147
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5153
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5159
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5163
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5167
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5171
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5177
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5181
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5191
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5195
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5201
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5205
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5211
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5216
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5220
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5226
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5230
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 995:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5236
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5240
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5244
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5248
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5253
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5257
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5261
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5265
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5271
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5275
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5282
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5286
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5290
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5294
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5298
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5302
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5306
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5316
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5320
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5324
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5330
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5334
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5338
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5342
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5346
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5350
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5354
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5358
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5362
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5366
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5370
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5376
		{
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5379
		{
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5385
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5389
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5393
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5397
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5401
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5405
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5409
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5413
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5417
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5421
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5425
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5429
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5433
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5443
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5447
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5451
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5455
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5459
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5463
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5467
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5471
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5475
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5479
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5483
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5487
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5491
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5495
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5499
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5503
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5507
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5511
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5515
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5523
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5527
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5535
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5539
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5543
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5549
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5555
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5559
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5565
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5569
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5575
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5579
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5583
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5589
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5593
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5600
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5604
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5608
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5612
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5616
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5622
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5626
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5630
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5634
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5638
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5644
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5648
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5653
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5657
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5663
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5667
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5672
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5676
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5681
		{
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5684
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5690
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5696
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5700
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5705
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5712
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5718
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5722
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5728
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5732
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5738
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5742
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5747
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5754
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5760
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5764
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5770
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5776
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5780
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5786
		{
			yyVAL.str = ""
		}
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5790
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5796
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5800
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5807
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5811
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5815
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5819
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5825
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5829
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5833
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5837
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5841
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5845
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5849
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5855
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5859
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5863
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5870
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5876
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5880
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5890
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5894
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5904
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5908
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5912
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5916
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5920
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5924
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5928
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5932
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5936
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5940
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5951
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5955
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5961
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5965
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5970
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5974
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5978
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5982
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5986
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5990
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5994
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6034
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6038
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6042
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6046
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6050
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6054
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6058
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6062
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6066
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6070
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6074
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6078
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6082
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6086
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6090
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6094
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6098
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6102
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6106
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6110
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6114
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6118
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6122
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6126
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6130
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6134
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6138
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6142
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6146
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6150
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6154
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6158
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6162
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6166
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6170
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6174
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6182
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6186
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6190
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6194
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6198
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6202
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6206
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6210
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6214
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6218
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6222
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6226
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6230
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6234
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6238
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6242
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6246
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6250
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6254
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6258
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6262
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6266
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6270
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6274
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6278
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6288
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6292
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6296
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6300
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6306
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6310
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6316
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6320
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6324
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6328
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6332
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6337
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6341
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6345
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6349
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6353
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6357
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6362
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6366
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6370
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6374
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6381
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6385
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6391
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6395
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6399
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6403
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6409
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6413
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6417
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6421
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6425
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6429
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6433
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6438
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6442
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6448
		{
		}
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6450
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6454
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6458
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6462
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6466
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6470
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6474
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6478
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6482
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6486
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6490
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6496
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6500
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6504
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6508
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6512
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6516
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6520
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6524
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6528
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6538
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6542
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6546
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6550
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6561
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6565
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6569
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6573
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6577
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6583
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6587
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6591
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6595
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6599
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6605
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6609
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6613
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1312:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6619
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6623
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6627
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6633
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6637
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6641
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6645
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6649
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6655
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6659
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6663
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6667
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6671
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6675
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6679
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6683
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6687
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6691
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6697
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6701
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6706
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6710
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6715
		{
			yyVAL.str = string("")
		}
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6719
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6725
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6729
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6735
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6740
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6744
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6750
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6754
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6758
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6762
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6768
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6772
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6778
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6787
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6791
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6797
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6801
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6806
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6810
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6816
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6822
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6826
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6831
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6835
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6840
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6844
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6850
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6856
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6860
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6866
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6871
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6875
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6879
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6884
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6888
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6894
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6898
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6902
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6907
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6911
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6915
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6919
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6923
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6933
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6937
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6941
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6945
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6951
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6955
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6959
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6963
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6968
		{
			yyVAL.str = ""
		}
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6972
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6976
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6980
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6985
		{
			yyVAL.str = ""
		}
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6989
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6995
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6999
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7004
		{
			yyVAL.str = ""
		}
	case 1395:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7008
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7013
		{
			yyVAL.str = "cascaded"
		}
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7017
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7021
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1399:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7026
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7030
		{
			yyLOCAL = CheckOptions{yyDollar[1].checkTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7034
		{
			yySLICE := (*CheckOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].checkTypeUnion())
		}
	case 1402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7040
		{
			yyLOCAL = Forupgrade
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7044
		{
			yyLOCAL = Fast
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7048
		{
			yyLOCAL = Quick
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7052
		{
			yyLOCAL = Medium
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7056
		{
			yyLOCAL = Extended
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7060
		{
			yyLOCAL = CHanged
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7066
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7070
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7076
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7082
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7088
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7097
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7101
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7106
		{
			yyVAL.str = ""
		}
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7110
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7116
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7120
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7126
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7130
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7134
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7139
		{
			yyVAL.str = ""
		}
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7143
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7147
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7152
		{
			yyVAL.str = ""
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7156
		{
			yyVAL.str = " header"
		}
	case 1427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7161
		{
			yyVAL.str = ""
		}
	case 1428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7165
		{
			yyVAL.str = " manifest on"
		}
	case 1429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7169
		{
			yyVAL.str = " manifest off"
		}
	case 1430:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7174
		{
			yyVAL.str = ""
		}
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7178
		{
			yyVAL.str = " overwrite on"
		}
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7182
		{
			yyVAL.str = " overwrite off"
		}
	case 1433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7188
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7193
		{
			yyVAL.str = ""
		}
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7197
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7203
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7207
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7213
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7217
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7222
		{
			yyVAL.str = ""
		}
	case 1441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7226
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7232
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7236
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7242
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7246
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7250
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7255
		{
			yyVAL.str = ""
		}
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7259
		{
			yyVAL.str = " optionally"
		}
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7272
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7276
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7280
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7284
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7288
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7294
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7298
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7302
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1457:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7306
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7311
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7315
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7321
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7325
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7331
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7335
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7341
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7345
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7350
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7360
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7364
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7370
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7377
		{
			yyVAL.str = "charset"
		}
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7387
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7391
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7395
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7404
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7406
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7409
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7411
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7414
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7416
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7419
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7421
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7424
		{
			yyVAL.empty = struct{}{}
		}
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7426
		{
			yyVAL.empty = struct{}{}
		}
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7428
		{
			yyVAL.empty = struct{}{}
		}
	case 1490:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7432
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7437
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7441
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7446
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7448
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7452
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7458
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7462
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7469
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7475
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7479
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7485
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7489
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7496
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8082
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8091
		{
			decNesting(yylex)
		}
	case 2066:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8096
		{
			skipToEnd(yylex)
		}
	case 2067:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8101
		{
			skipToEnd(yylex)
		}
	case 2068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8105
		{
			skipToEnd(yylex)
		}
	case 2069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8109
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
